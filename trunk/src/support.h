#ifndef BEGIN_C_DECLS
#ifdef __cplusplus
#define BEGIN_C_DECLS extern "C" {
#define END_C_DECLS }
#else
#define BEGIN_C_DECLS
#define END_C_DECLS
#endif
#endif

BEGIN_C_DECLS

/*
 * DO NOT EDIT THIS FILE - it is generated by Glade.
 */

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif

#include <gtk/gtk.h>

/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
/*#  define gettext(String) (String) */
/* #  define dgettext(Domain,Message) (Message) */
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif


/*
 * Public Functions.
 */

/*
 * This function returns a widget in a component created by Glade.
 * Call it with the toplevel widget in the component (i.e. a window/dialog),
 * or alternatively any widget in the component, and the name of the widget
 * you want returned.
 */
GtkWidget*  lookup_widget              (GtkWidget       *widget,
                                        const gchar     *widget_name);

/* get_widget() is deprecated. Use lookup_widget instead. */
#define get_widget lookup_widget

/* Use this function to set the directory containing installed pixmaps. */
void        add_pixmap_directory       (const gchar     *directory);


/*
 * Private Functions.
 */

/* This is used to create the pixmaps in the interface. */
GtkWidget*  create_pixmap              (GtkWidget       *widget,
                                        const gchar     *filename);


#if (((GTK_MAJOR_VERSION == 2) && (GTK_MINOR_VERSION > 5)) || GTK_MAJOR_VERSION > 2)
char* coot_revision(void);
GtkWidget* create_aboutdialog (void);
GtkWidget* create_coords_filechooserdialog1(void);
GtkWidget* create_dataset_filechooserdialog1(void);
GtkWidget* create_map_name_filechooserdialog1(void);
GtkWidget* create_phs_coordinates_filechooserdialog1(void);
GtkWidget* create_save_coords_filechooserdialog1(void);
GtkWidget* create_cif_dictionary_filechooserdialog1(void);
GtkWidget* create_run_script_filechooserdialog1(void);
GtkWidget* create_save_symmetry_coords_filechooserdialog1(void);
GtkWidget* create_save_state_filechooserdialog1(void);
GtkWidget* create_screendump_filechooserdialog1(void);
GdkPixbuf* create_pixbuf(const gchar *filename);
gchar* find_pixmap_file (const gchar     *filename);
GtkWidget* create_model_toolbar_menu (void);
GtkWidget         *create_residue_editor_select_monomer_type_dialog();
GtkWidget *wrapped_create_residue_editor_select_monomer_type_dialog();
GtkWidget* create_restraints_editor_dialog (void);
GtkWidget* create_residue_editor_select_monomer_type_dialog (void);
GtkWidget* create_save_restraint_chooserdialog (void);
GtkWidget* create_run_refmac_nolabels_help_dialog(void);
GtkWidget* create_run_refmac_twin_help_dialog(void);
GtkWidget* create_run_refmac_sad_help_dialog(void);
GtkWidget* create_run_refmac_mtz_filechooserdialog(void);
GtkWidget* create_coot_references_dialog(void);
#endif /* GTK_MAJOR_VERSION */ 

END_C_DECLS

