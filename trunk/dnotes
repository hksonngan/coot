
To compile guile etc for gtk2:


prfx=$HOME/guile-1.8.1
wget libtool-1.5.22.tar.gz
cd libtoo-1.5.22
./configure --prefix=$prfx
make 
make install

wget guile-1.8.1.tar.gz
cd guile-1.8.1
./configure --prefix=$prfx CFLAGS=-I$prfx/include LDFLAGS=-L$prfx/lib
# on cycle at least, we need to stop the optimization:
./configure --prefix=$prfx "CFLAGS=-I$prfx/include -g" LDFLAGS=-L$prfx/lib
make 
make install

wget guile-gtk-2.0.tar.gz
cd guile-gtk-2.0
./configure --prefix=$prfx --without-gtkgl

 --------
  
   Things to fix before 0.3.2

   o Change the Release notes, 
     the ChangeLog, 
     configure.in (obviously)
     old coot timer


   o Ramachandran Plot and Kleywegt Plot interact badly causing crash.

* Fixed.  Simply we can't have both.

   o Fix the carriage return on Check Delete waters result.  It should
     do a next button, not a click on the OK button.

* Easy fix - done in glade.

   o set-map-display, set-mol-displayed, set-mol-active.  Do they
     properly toggle the buttons in the Display Manager?  They should.

* They didn't.  They do now.  It worked first time :)

   o Fix the File-name filter: in script file reading

* Done.

   o Sort out the Cholesky decomposition.  Question to self: what are
     the matrices that are being decomposed, exactly?
     
     Good question.  That broke the back of the problem actually.  I
     compared thox.pdb Us with thos.res Us and found they were
     different (a transposition).  Now U matrix principal minors are
     checked before cholesky decomposition is performed.

 * Done!

   o mainchain zone, reverse dir, mainchain zone, screwed mainchain

* Done.

   o residue range was inserted into the wrong place in the pdb file

* Done.

   o copy fragment, residue range miss - feedback required.

* Done.

   o optionally animate fit-waters

* Done.

   o Mask map should have an inversion check button.

* Done.

   o Kleywegt plots don't update properly when not specifying chains.

* Done.

   o Saving in another directory - remember the save dir for next
     molecule to be saved.

* Done.

   o copy fragment, residue range miss - feedback required.

* Done.     

   o Disappearing NCS ghosts on changing NCS master 

     Also:

	Coot behaves differently depending on which chain I've chosen
	as the "master". When A is master, I can click the display box
	on/off and it simply displays (or hides) the ghost chains with
	no fuss. However, if I chosen a different chain as master,
	then each time I turn the ghosts on it recalculates the entire
	alignment.

* Done.

   o Thick bonds do not get set/groked in state file - they should be.

* Done.

   o transform-map

* Done.

   o Multiple coordinate molecules, inconsistent when starting up go
     to atom window.  Residue tree not same molecule as molecule
     chooser.  It only fails on startup.

* Fixed.

   o Do residue refinement after nucleotide add terminal residue (or
     can it be done trivially using the same mechanism as
     add-terminal-resdue-do-post-refine?

* Man, that was hard work.  Needed nucleotide to nucleotide function

   o Bad logic in setting display/active for molecules (Bob Nolte bug)

        If I turn on the display manager in my .coot file, and then
        load a coot state file which toggles off some of the loaded
        structures, the display manager gets confused and shows the
        wrong state.

* Fixed.

   o fix this:

	Kevin was doing some building and Coot lost the spacegroup.
	Adding UNK terminal residues
	Reversing the chain direction (probably this one?)
	db-main for new mainchain

* Done. Trival error in transfering spacegroup string.  Fixed malloc
  error in show-spacegroup while debugging this, which was much more
  important.

   o Stereo buttons need to be fixed

       Need to check that wall and cross eyes work

* Done.

   o Fix text widget in Sequence reading code (e.g. Fit Loop)

* Done.

   o Residue Info edits not being applied

* Done.

   o Delete a View number

* Done.

   o Save views to view file.

* Done.

   o Ramachandran plot window should remember where it was put

* Done.

   o Colour by B-factor

* Done

   o Colour by occupancy

* Done

   o Fix text widget in About 

* Done.

   o Alt confs fly apart in regularization of ligands.

* Done.

   o CNS map reading

* Done.

   o CNS data reading

* Kevin says leave it.  Fine.

   o Juergen's bad map

* Hand off to Kevin, bad map.

   o Put a file selector on the shelxl refine interface.

* Done.

   o Spin View 

* Done.

-------

# gtkglext:
wget "http://downloads.sourceforge.net/gtkglext/gtkglext-1.2.0.tar.gz?modtime=1139081517 & big_mirror=1"


# make sure when you compile guile-gtk-2.0, you pick up the right
# guile in your path (i.e. 1.8.x) otherwise libguile will be stuck in
# the guilegtk.la file and it wil cause a mess.


 ----- 
Sat Apr 28 16:21:54 BST 2007

   Those who compile with gtk2 need to regenerate the interface files
   coot_wrap_guile.cc and coot_wrap_guile_pre.cc by runing swig
   (delete them and make)


----
Wed May  2 11:20:29 BST 2007

   for shelx molecules:

   symmetry-related hydrogens don't appear (they flash off)

----
Wed May  2 15:40:02 BST 2007

	Residue info edits need testing.

* Done.

----
Thu May  3 10:26:10 BST 2007

   intelligent next atom should consider insertion codes.
   (how tedious).

------
Wed May  9 13:54:04 BST 2007

   Dirk Kostewa:
   overblend for electron density?


-----
Thu May 10 16:03:56 BST 2007

   How should "Check for updates" work.

   In scheme, of course

   It should know the current coot-version

   It needs to get the latest stable relesed version and 
   the release notes for that.

   So the release notes should be on the web site.  I think that they
   are...

   So it needs to get the current stable release version (a string)
   from the web site.  How shall that be done?

      get the stable release binary list web page.  Search as we do
      for the latest coot version as we do in the build-it file (that
      involves awk).

   Then, if there is a new release, get the release notes file and put
   the contents into a scrolled text window.

-----

trying to run render without render in path:


rendering ray trace number: 0
rendering ray trace number: 1
rendering ray trace number: 2
rendering ray trace number: 3
done raytrace.
calling render...
calling display...
((safe_scheme_command) Error in proc: key:  system-error  args:  (execlp ~A (No such file or directory) (..... scm_catch done 
scm_catch returns: 20152

2)))
..... scm_catch done 
scm_catch returns: #<unspecified>

Xlib: unexpected async reply (sequence 0xb9f30)!
Xlib: unexpected async reply (sequence 0xb9f4a)!
Xlib: unexpected async reply (sequence 0xb9f4b)!
Xlib: unexpected async reply (sequence 0xba0b6)!
Xlib: unexpected async reply (sequence 0xba0f1)!
Xlib: unexpected async reply (sequence 0xba0f3)!
lt-coot-real: Fatal IO error 14 (Bad address) on X server :0.0.

Some deprecated features have been used.  Set the environment
variable GUILE_WARN_DEPRECATED to "detailed" and rerun the
program to get more information.  Set it to "no" to suppress
this message.
ObjectCache: Leaked 0002 refs to <P 31 2" Nuvw = ( 240, 240, 132)>
ObjectCache: Leaked 0002 refs to <P 31 2">
47.510u 14.504s 12:56.93 7.9%   0+0k 0+0io 160pf+0w


interesting!


------


  how about a "density at point" function exported to the scripting
  layer.  Then the "delete atoms below a certain level" can be done in
  scheme.


-----
Sun May 13 13:33:46 BST 2007



INFO:: There were 2 maps contributing to the average
INFO:: rescaling by 0.5
==4884== 
==4884== Invalid read of size 2
==4884==    at 0x824D42B: molecule_class_info_t::ncs_averaged_maps(clipper::Xmap<float> const&, float) (molecule-class-info-ncs.cc:672)
==4884==    by 0x824D8ED: molecule_class_info_t::make_dynamically_transformed_maps(int, short, float) (molecule-class-info-ncs.cc:472)
==4884==    by 0x813EB8B: make_dynamically_transformed_ncs_maps (c-interface-ncs.cc:299)
==4884==    by 0x813F5A1: make_dynamically_transformed_ncs_maps_by_widget (c-interface-ncs.cc:374)
==4884==    by 0x81E5C04: on_ncs_maps_ok_button_clicked (callbacks.c:5746)
==4884==    by 0x509D9D8: g_cclosure_marshal_VOID__VOID (in /usr/lib/libgobject-2.0.so.0.1200.11)
==4884==    by 0x509062A: g_closure_invoke (in /usr/lib/libgobject-2.0.so.0.1200.11)
==4884==    by 0x50A1102: (within /usr/lib/libgobject-2.0.so.0.1200.11)
==4884==    by 0x50A2626: g_signal_emit_valist (in /usr/lib/libgobject-2.0.so.0.1200.11)
==4884==    by 0x50A27E8: g_signal_emit (in /usr/lib/libgobject-2.0.so.0.1200.11)
==4884==    by 0x4C32162: gtk_button_clicked (in /usr/lib/libgtk-x11-2.0.so.0.1000.11)
==4884==    by 0x4C33DAD: (within /usr/lib/libgtk-x11-2.0.so.0.1000.11)
==4884==  Address 0x777C2E8 is 0 bytes after a block of size 522,720 alloc'd
==4884==    at 0x4022DC5: operator new(unsigned) (vg_replace_malloc.c:163)
==4884==    by 0x824EBB3: std::vector<short, std::allocator<short> >::_M_fill_insert(__gnu_cxx::__normal_iterator<short*, std::vector<short, std::allocator<short> > >, unsigned, short const&) (new_allocator.h:88)
==4884==    by 0x824CE08: molecule_class_info_t::ncs_averaged_maps(clipper::Xmap<float> const&, float) (stl_vector.h:658)
==4884==    by 0x824D8ED: molecule_class_info_t::make_dynamically_transformed_maps(int, short, float) (molecule-class-info-ncs.cc:472)
==4884==    by 0x813EB8B: make_dynamically_transformed_ncs_maps (c-interface-ncs.cc:299)
==4884==    by 0x813F5A1: make_dynamically_transformed_ncs_maps_by_widget (c-interface-ncs.cc:374)
==4884==    by 0x81E5C04: on_ncs_maps_ok_button_clicked (callbacks.c:5746)
==4884==    by 0x509D9D8: g_cclosure_marshal_VOID__VOID (in /usr/lib/libgobject-2.0.so.0.1200.11)
==4884==    by 0x509062A: g_closure_invoke (in /usr/lib/libgobject-2.0.so.0.1200.11)
==4884==    by 0x50A1102: (within /usr/lib/libgobject-2.0.so.0.1200.11)
==4884==    by 0x50A2626: g_signal_emit_valist (in /usr/lib/libgobject-2.0.so.0.1200.11)
==4884==    by 0x50A27E8: g_signal_emit (in /usr/lib/libgobject-2.0.so.0.1200.11)
==4884== 
==4884== Invalid write of size 4
==4884==    at 0x824D440: molecule_class_info_t::ncs_averaged_maps(clipper::Xmap<float> const&, float) (molecule-class-info-ncs.cc:676)
==4884==    by 0x824D8ED: molecule_class_info_t::make_dynamically_transformed_maps(int, short, float) (molecule-class-info-ncs.cc:472)
==4884==    by 0x813EB8B: make_dynamically_transformed_ncs_maps (c-interface-ncs.cc:299)
==4884==    by 0x813F5A1: make_dynamically_transformed_ncs_maps_by_widget (c-interface-ncs.cc:374)
==4884==    by 0x81E5C04: on_ncs_maps_ok_button_clicked (callbacks.c:5746)
==4884==    by 0x509D9D8: g_cclosure_marshal_VOID__VOID (in /usr/lib/libgobject-2.0.so.0.1200.11)
==4884==    by 0x509062A: g_closure_invoke (in /usr/lib/libgobject-2.0.so.0.1200.11)
==4884==    by 0x50A1102: (within /usr/lib/libgobject-2.0.so.0.1200.11)
==4884==    by 0x50A2626: g_signal_emit_valist (in /usr/lib/libgobject-2.0.so.0.1200.11)
==4884==    by 0x50A27E8: g_signal_emit (in /usr/lib/libgobject-2.0.so.0.1200.11)
==4884==    by 0x4C32162: gtk_button_clicked (in /usr/lib/libgtk-x11-2.0.so.0.1000.11)
==4884==    by 0x4C33DAD: (within /usr/lib/libgtk-x11-2.0.so.0.1000.11)
==4884==  Address 0x79DE3E8 is 0 bytes after a block of size 1,045,440 alloc'd
==4884==    at 0x4022DC5: operator new(unsigned) (vg_replace_malloc.c:163)
==4884==    by 0x824F144: clipper::Xmap<float>::Xmap(clipper::Xmap<float> const&) (new_allocator.h:88)
==4884==    by 0x824C089: molecule_class_info_t::ncs_averaged_maps(clipper::Xmap<float> const&, float) (molecule-class-info-ncs.cc:587)
==4884==    by 0x824D8ED: molecule_class_info_t::make_dynamically_transformed_maps(int, short, float) (molecule-class-info-ncs.cc:472)
==4884==    by 0x813EB8B: make_dynamically_transformed_ncs_maps (c-interface-ncs.cc:299)
==4884==    by 0x813F5A1: make_dynamically_transformed_ncs_maps_by_widget (c-interface-ncs.cc:374)
==4884==    by 0x81E5C04: on_ncs_maps_ok_button_clicked (callbacks.c:5746)
==4884==    by 0x509D9D8: g_cclosure_marshal_VOID__VOID (in /usr/lib/libgobject-2.0.so.0.1200.11)
==4884==    by 0x509062A: g_closure_invoke (in /usr/lib/libgobject-2.0.so.0.1200.11)
==4884==    by 0x50A1102: (within /usr/lib/libgobject-2.0.so.0.1200.11)
==4884==    by 0x50A2626: g_signal_emit_valist (in /usr/lib/libgobject-2.0.so.0.1200.11)
==4884==    by 0x50A27E8: g_signal_emit (in /usr/lib/libgobject-2.0.so.0.1200.11)n
INFO:: 0 out of 228096 (0%) map points  were masked out of NCS average target volume,  chain A
INFO:: made 1 averaged map(s)
Map statistics: mean: -0.000679089 st.d: 0.480031
Map statistics: min: -1.48057, max: 4.66996


----
Sun May 13 16:23:53 BST 2007


what should active residue do when it is looking at (centred on) a water?


-----
Mon May 14 08:24:42 BST 2007


 add library file in "Do you want to run auto-save state file?" window


-----
Mon May 14 08:50:14 BST 2007

	Go To Atom fails in Gtk1 now.
	
Gtk-WARNING **: invalid cast from `GtkList' to `GtkTree'

Gtk-CRITICAL **: file gtktree.c: line 379 (gtk_tree_clear_items): assertion `GTK_IS_TREE (tree)' failed.

** WARNING **: Widget not found: go_to_atom_atom_list

Gtk-WARNING **: invalid cast from (NULL) pointer to `GtkList'

Gtk-CRITICAL **: file gtklist.c: line 1258 (gtk_list_clear_items): assertion `list != NULL' failed.

Gtk-WARNING **: invalid cast from `GtkList' to `GtkTree'

Gtk-CRITICAL **: file gtktree.c: line 200 (gtk_tree_append): assertion `GTK_IS_TREE (tree)' failed.

Gtk-CRITICAL **: file gtkwidget.c: line 3359 (gtk_widget_set_parent): assertion `parent != NULL' failed.

Gtk-WARNING **: invalid cast from (NULL) pointer to `GtkObject'
Segmentation fault (core dumped)

----
Tue May 15 23:59:45 BST 2007

have a look at this:

src/graphics-info-navigation.cc:            std::cout << "WARNING: (Programmer error) looking for atoms "

it was related (I'm pretty sure) with the AZ NCS crash.

-----
Wed May 16 09:27:21 BST 2007

	User pickable atoms:

	a function that registers interest in n atom selections and a
	function to call when it has them.  We test in
	graphics-info-defines whether such a function exists and has
	all the number of picks that it needs, if it does and it
	doesn't then collect them and pass them on when it has all
	it needs.  When the function has been called delete it from
	the queue/vector of such functions (umm, better do the
	deletion just before the function call so that if there is an
	error in the scm function we don't jump away from the function
	deletion part).

------
Thu May 17 18:20:51 BST 2007

Christopher Rife:

I've noticed that when using "NCS Control" in Coot, it behaves differently
depending on which chain I've chosen as the "master". When A is master, I can
click the display box on/off and it simply displays (or hides) the ghost chains
with no fuss. However, if I chosen a different chain as master, then each time
I turn the ghosts on it recalculates the entire alignment. This is rather
cumbersome with large structures...

* Fixed.


-----
Wed May 16 20:30:02 BST 2007

	CA representation by default:

       Swanand	sg363@mole.bio.cam.ac.uk

----
Thu May 17 12:44:56 BST 2007

	use gtk_widget_get_name(widget) to find out about what type a
	widget is.

------
Thu May 24 10:59:16 BST 2007

	Copy a molecule.

	Save state, by exiting

	retstart.  dialog says there are 2 molecules in state file.
	
	But only one is loaded.  

	Is that right?

------
Sun May 27 19:21:11 BST 2007

   o Merge a fragment, change chain ids by residue range (40-50)

   o The GoTo Atom residue tree looks messed up (nothing beyond 50)

   on writing out the PBD file, residue 50 is in the right place, but
   40-49 have been writen to the end of the chain.  Which causes the
   problem in the Go To Atom window.

* Fixed.


-----
Fri Jun 15 13:09:53 BST 2007

   rajiv.chopra@novartis.com:

   In real space refinement, don't move the atoms with zero occ.

------

old guile convert to string:
 std::string name_target = SCM_STRING_CHARS(name_target_scm);
new guile convert to string:
 std::string name_target = scm_to_locale_string(name_target_scm);

all guile convert from string:
   SCM mess = scm_makfrom0str(a_string.c_str());


-----
Thu Jun 21 11:57:16 CEST 2007

    
   Fitting a helix in a low resolution and low level (0.02 e) map.  

   Density looked reasonable for a helix, but was rejected on CB
   density.

   Should the be less strict for CB density at lower resolutions? 
   What is the cut-off criteria for CB density?

* There was a hard-wired cut off 0.2 in the helix fitting.  Make
  variable and moved upstairs to the invoking function.

----
Thu Jun 21 13:35:07 CEST 2007

  Randy Read:

  It's currently tedious to make a native patterson.  So add an option
  to do it for me.  You'll have to change the space group to have the
  symmetry of the Patterson and make up a column of zeros for the phase.

  (patterson mtz-filename f-col origin-remove-flag) returns an int


----
Thu Jun 21 14:35:28 CEST 2007


   Problem with doing Randy's sidebyside screen update:

   to solve his problem we want to 
	draw(glarea1)
	draw(glarea2)
	swap_buffers(glarea1)
	swap_buffers(glarea2)

   so we have to move swap_buffers *out* of the draw() function. 

   OK, I did that.

   The problem now is with the expose_event callback.

   the expose event callback is what is used by draw()

   urgh.

* Anyway, fixed now.

---
Mon Jun 25 08:20:12 BST 2007

   Do this at some stage (but not before 0.3.2)

   o Valgrind long/multiple fit-proteins


----
Tue Jul  3 21:45:19 BST 2007

   o better documentation for skip-to-next-ncs-chain


---- 
Wed Jul  4 12:58:51 BST 2007

   o copy over sgi coot 0.3.3

* Done.


------
Fri Jul  6 13:24:43 BST 2007

  compiling guile-2.8.1

prfx=$HOME/testg

./configure --prefix=$prfx LDFLAGS=-L$prfx/lib CFLAGS="-g -I$prfx/include"

 ./configure --prefix=/lmb/wear/emsley/testg LDFLAGS=-L/lmb/wear/emsley/testg/lib CFLAGS='-O -I/lmb/wear/emsley/testg/include'

i.e. NO DEBUGGING!


cycle ~/compile/g/guile-gtk-2.0> ./configure --prefix=/lmb/wear/emsley/guile-1.8.1  --without-gtkgl

make 
make install

-
in guile-gtk-2.0's gdk-glue.c add

#define PANGO_PIXELS_CEIL(d) (((int)(d) + 1023) >> 10)
#define PANGO_PIXELS_FLOOR(d) (((int)(d)) >> 10)

- 
also need goosh:
./configure --prefix=/lmb/wear/emsley/guile-1.8.1
make install
and guile-gui:
 ./configure --prefix=/lmb/wear/emsley/guile-1.8.1
make install
and net-http:
 ./configure --prefix=/lmb/wear/emsley/guile-1.8.1
make install

-------------------
Tue Jul  3 14:27:37 BST 2007

   For Release 0.4


   o Richardson rotamers

   o Kevin's Ramachandran Refinement target

   o Post-install slim the binaries

   o Is there a memory problem in unshelx?

   o Kevin's Ramachandran Refinement target

   o Try again to add chiral volumes to the geometry target function

   o Add Chiral centre inversion and cis peptide generation check 
     after refinement or regularization.

   o Make the Omega Angle Plot update properly

   o Add Chiral Volume Outliers to Omega Angle Plot

   o Post-install slim the binaries

   o Do the strand restraints work well under refinement?

   o Add planar peptide restraints as default

   o Add select by sphere to test suite

   o Activate test suite

   o When refining, add a status bar message that describes the Ctrl
     button usage.
 
   o are the findwaters and findligands being installed correctly
     (with wrappers?).




   o Gtk Timeout for reading socket strings

* Done in 0.3.2 in fact.

   o Select residues (for new molecule) by sphere

* Done

   o Multiple model ligand overlaying

* Done.

   o Cootaneer

* Done.

   o fix db-main so that it doesn't spew error messages

* Done.  Trivial

   o unshelxing is interfering with go to atom from lst file reader.
     How about this cunning plan:  
     (shelx-lst-conversion-func imol) returns a function that takes
     the lst residue number as an arg and returns a (list chain-id
     resno).  The body of the returned func will depend on the output
     of unshelx().

    CMMDBManager *unshelx(CMMDBManager *mol);
    need to also return mapping info
    vector of 
    [input_threash -> (chain-id resno-offset)]
    i.e. if residue_num >= input_threash we have a given chain-id and resno offset.
    run over all sets of [input_threash -> (chain-id resno-offset)] to get the 
    correct offset

* Done.

-----

  From Stephano Benini, deleting waters:


  Using host libthread_db library "/lib/tls/libthread_db.so.1".
Core was generated by `/apps/xtal/coot/current/linux/bin/coot-real'.
Program terminated with signal 11, Segmentation fault.
#0  CAtom::GetChainID (this=0x2ed9) at mmdb_atom.cpp:758
	in mmdb_atom.cpp
#0  CAtom::GetChainID (this=0x2ed9) at mmdb_atom.cpp:758
#1  0x0823df36 in molecule_class_info_t::make_atom_label_string (this=0xb4be400c, atom=0x2ed9, 
    brief_atom_labels_flag=0) at molecule-class-info.cc:4233
#2  0x08232a57 in molecule_class_info_t::label_atom (this=0xb4be400c, i=11993, 
    brief_atom_labels_flag=0) at molecule-class-info.cc:2464
#3  0x08229b1d in molecule_class_info_t::label_atoms (this=0xb4be400c, brief_atom_labels_flag=0)
    at molecule-class-info.cc:450
#4  0x081cbd9b in draw_mono (widget=0x8689698, event=0x2ed9, in_stereo_flag=0) at globjects.cc:1756
#5  0x081cb9bd in draw (widget=0x8689698, event=0xbfffc160) at globjects.cc:1552
#6  0x081cb8a7 in expose (widget=0x8689698, event=0xbfffc160) at globjects.cc:1501
#7  0xb6ecb659 in gtk_marshal_BOOL__POINTER (object=0x8689698, 
    func=0x81cb896 <expose(_GtkWidget*, _GdkEventExpose*)>, func_data=0x0, args=0x2ed9)
    at gtkmarshal.c:28
#8  0xb6efae92 in gtk_handlers_run (handlers=0x86399b8, signal=0xbfffbe10, object=0x8689698, 
    params=0xbfffbe70, after=0) at gtksignal.c:1917
#9  0xb6efa19e in gtk_signal_real_emit (object=0x8689698, signal_id=25, params=0xbfffbe70)
    at gtksignal.c:1477
#10 0xb6ef8274 in gtk_signal_emit (object=0x8689698, signal_id=25) at gtksignal.c:552
#11 0xb6f2e087 in gtk_widget_event (widget=0x8689698, event=0xbfffc160) at gtkwidget.c:2864
#12 0xb6f3289e in gtk_widget_real_draw (widget=0x8689698, area=0xbfffc500) at gtkwidget.c:4585
#13 0xb6ecb7a5 in gtk_marshal_NONE__POINTER (object=0x8689698, 
    func=0xb6f3279c <gtk_widget_real_draw>, func_data=0x0, args=0x2ed9) at gtkmarshal.c:193
#14 0xb6efa0af in gtk_signal_real_emit (object=0x8689698, signal_id=8, params=0xbfffc250)
    at gtksignal.c:1440
#15 0xb6ef8274 in gtk_signal_emit (object=0x8689698, signal_id=8) at gtksignal.c:552
#16 0xb6f2cce1 in gtk_widget_draw (widget=0x8689698, area=0xbfffc500) at gtkwidget.c:2335
#17 0x0814e321 in graphics_draw () at graphics-info.h:733
#18 0x0818e762 in delete_atom (imol=0, chain_id=0x869b484 "W", resno=132, 
    ins_code=0x89e6620 "0f\236\b", at_name=0x8faa88c " O  ", altLoc=0x854a0fc "")
    at c-interface-build.cc:865
#19 0x0818f4c0 in delete_atom_by_atom_index (imol=0, index=2954, do_delete_dialog=1)
    at /usr/include/c++/3.2/bits/basic_string.h:781
#20 0x08133e28 in graphics_info_t::check_if_in_delete_item_define (this=0xbfffc8a3, 
    event=0x86167b0, state=@0x2ed9) at graphics-info-defines.cc:657
#21 0x08132ba3 in graphics_info_t::check_if_in_range_defines (this=0xbfffc8a3, event=0x86167b0, 
    state=@0xbfffc8ac) at graphics-info-defines.cc:204
#22 0x081ceac1 in glarea_button_press (widget=0x8689698, event=0x86167b0) at globjects.cc:3394
#23 0xb6ecb659 in gtk_marshal_BOOL__POINTER (object=0x8689698, 
    func=0x81ce816 <glarea_button_press(_GtkWidget*, _GdkEventButton*)>, func_data=0x0, args=0x2ed9)
    at gtkmarshal.c:28
#24 0xb6efae92 in gtk_handlers_run (handlers=0x8639958, signal=0xbfffca10, object=0x8689698, 
    params=0xbfffca70, after=0) at gtksignal.c:1917
#25 0xb6efa19e in gtk_signal_real_emit (object=0x8689698, signal_id=20, params=0xbfffca70)
    at gtksignal.c:1477
#26 0xb6ef8274 in gtk_signal_emit (object=0x8689698, signal_id=20) at gtksignal.c:552
#27 0xb6f2e087 in gtk_widget_event (widget=0x8689698, event=0x86167b0) at gtkwidget.c:2864
#28 0xb6ecb4dc in gtk_propagate_event (widget=0x8689698, event=0x86167b0) at gtkmain.c:1385
#29 0xb6eca5cd in gtk_main_do_event (event=0x86167b0) at gtkmain.c:818
#30 0xb6e23b28 in gdk_event_dispatch (source_data=0x0, current_time=0xbfffce40, user_data=0x0)
    at gdkevents.c:2139
#31 0xb6b68e81 in g_main_dispatch (dispatch_time=0xbfffce40) at gmain.c:656
#32 0xb6b69338 in g_main_iterate (block=0, dispatch=1) at gmain.c:877
#33 0xb6b69568 in g_main_run (loop=0x8845118) at gmain.c:935
#34 0xb6eca08f in gtk_main () at gtkmain.c:524
#35 0x080e8349 in c_inner_main (closure=0x0, argc=1, argv=0xbfffd264) at c-inner-main.c:237
#36 0xb7526864 in invoke_main_func (body_data=0x2ed9) at init.c:635
#37 0xb752682c in scm_boot_guile_1 (base=0xbfffcfac, closure=0xbfffcfb0) at init.c:615
#38 0xb752654b in scm_boot_guile (argc=11993, argv=0x2ed9, main_func=0x2ed9, closure=0x2ed9)
    at init.c:440
#39 0x080e8450 in c_wrapper_scm_boot_guile (argc=1, argv=0xbfffd264) at c-inner-main.c:257
#40 0x080e34b5 in main (argc=1, argv=0xbfffd264) at main.cc:408


------
Mon Jul  9 18:29:22 BST 2007

	Add a test:

	Add atom (at pointer, I suppose), add atom, add atom.

	Label atoms.

	delete atom 

	delete atom

	delete atom
