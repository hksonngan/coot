# Makefile.am
# 
# Copyright 2005, 2006, 2007 The University of York
# Copyright 2005, 2006, 2007 Bernhard Lohkamp
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at
# your option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA

#;; A silly (but somewhat amusing) demo that changes the background colour
#;; over a range of colours.
#;;
#;; The scene is spun too, for extra eye-candy (so have a molecule
#;; loaded before you run this).
#;;
#;; What's the point?  It's to show that we can display the result of
#;; an arbitarily complex computation, i.e, we have a real extension
#;; language, not just a list of commands (like some other molecular
#;; graphics programs).

# try to translate from scheme files. -- BL

import os

files_list = ["coot-utils.py","hello.py","mutate.py","gap.py","fitting.py","refmac.py","americanisms.py","raster3d.py","povray.py","coot-lsq.py","get-ebi.py","shelx.py"]

coot_python_dir =  os.getenv('COOT_PYTHON_DIR')
if coot_python_dir:
    search_load_path = coot_python_dir
else:
    search_load_path = "@prefix@/share/coot/python"


for i in files_list:
#          print "i",i
          f = os.path.join(search_load_path, i)
#          print "f", f
          if f and os.path.isfile(f) :
	     print "Loading:", i
#             print "f is ", f
             execfile(f)
          else : print "Error finding ",i

# now lets define some variables:
