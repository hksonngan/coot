@menu
* The Virtual Trackball::
* File System Functions::
* Widget Utilities::
* MTZ and data handling utilities::
* Molecule Info Functions::
* Library and Utility Functions::
* Graphics Utility Functions::
* Interface Preferences::
* Mouse Buttons::
* Cursor Function::
* Model/Fit/Refine Functions::
* Backup Functions::
* Recover Session Function::
* Map Functions::
* Density Increment::
* Density Functions::
* Parameters from map::
* PDB Functions::
* Refmac Functions::
* Symmetry Functions::
* File Selection Functions::
* History Functions::
* State Functions::
* Clipping Functions::
* Unit Cell interface::
* Colour::
* Map colour::
* Anisotropic Atoms Interface::
* Display Functions::
* Smooth Scrolling::
* Font Size::
* Rotation Centre::
* Orthogonal Axes::
* Atom Selection Utilities::
* Skeletonization Interface::
* Skeleton Colour::
* Read Maps::
* Save Coordinates::
* Read Phases File Functions::
* Graphics Move::
* Go To Atom Widget Functions::
* Map and Molecule Control::
* Align and Mutate::
* Renumber Residue Range::
* Scripting Interface::
* Monomer::
* Regularization and Refinement::
* Simplex Refinement Interface::
* Nomenclature Errors::
* move molecule here (wrapper to scheme function)::
* Atom Info  Interface::
* Residue Info::
* Pointer Functions::
* Zoom Functions::
* CNS Data Functions::
* mmCIF Functions::
* SHELXL Functions::
* Validation Functions::
* Ramachandran Plot Functions::
* Sequence View Interface::
* Atom Labelling::
* Screen Rotation::
* Background Colour::
* Ligand Fitting Functions::
* Water Fitting Functions::
* Bond Representation::
* Dots Representation::
* Pep-flip Interface::
* Rigid Body Refinement Interface::
* Dynamic Map::
* Add Terminal Residue Functions::
* Delete Residues::
* Mainchain Building Functions::
* Close Molecule FUnctions::
* Rotatmer Functions::
* 180 Flip Side chain::
* Mutate Functions::
* Alternative Conformation::
* Pointer Atom Functions::
* Terminal OXT Atom::
* Crosshairs  Interface::
* Edit Chi Angles::
* Masks::
* check Waters Interface::
* Least-Squares matching::
* Trim::
* External Ray-Tracing::
* Superposition (SSM)::
* NCS::
* Helices and Strands::
* RNA/DNA::
* Sequence (Assignment)::
* Surfaces::
* FFFearing::
* Remote Control::
* Browser Interface::
* Generic Objects::
* Molprobity Interface::
* Partial Charges::
* EM interface::
* CCP4mg Interface::
* Dipoles::
* Aux functions::
* SMILES::
* PHENIX Support::
* Graphics Text::
* PISA Interaction::
@end menu

@node The Virtual Trackball
@section The Virtual Trackball

@menu
* VT-FLAT::
* VT-SPHERICAL::
* vt-surface::
* vt-surface-status::
@end menu

@node VT-FLAT
@subsection VT-FLAT
@deffn define VT-FLAT

@end deffn

@node VT-SPHERICAL
@subsection VT-SPHERICAL
@deffn define VT-SPHERICAL

@end deffn

@node vt-surface
@subsection vt-surface
@deffn function vt-surface mode

Where @emph{mode} is an integer number

How should the mouse move the view? 

mode=1 for "Flat", mode=2 for "Spherical Surface" 

@end deffn

@node vt-surface-status
@subsection vt-surface-status
@deffn function vt-surface-status

return the mouse view status mode 

mode=1 for "Flat", mode=2 for "Spherical Surface" 

@end deffn

@node File System Functions
@section File System Functions

@menu
* make-directory-maybe::
* set-show-paths-in-display-manager::
* show-paths-in-display-manager-state::
* add-coordinates-glob-extension::
* add-data-glob-extension::
* add-dictionary-glob-extension::
* add-map-glob-extension::
* remove-coordinates-glob-extension::
* remove-data-glob-extension::
* remove-dictionary-glob-extension::
* remove-map-glob-extension::
* set-sticky-sort-by-date::
* unset-sticky-sort-by-date::
* set-filter-fileselection-filenames::
* set-file-selection-dialog-size::
* filter-fileselection-filenames-state::
* on-filename-filter-toggle-button-toggled-gtk1::
* add-filename-filter::
* add-filename-filter-button::
* on-filename-filter-key-press-event::
* fill-option-menu-with-coordinates-options::
* coot-file-chooser::
* coot-dataset-chooser::
* coot-map-name-chooser::
* coot-save-coords-chooser::
* coot-cif-dictionary-chooser::
* coot-run-script-chooser::
* coot-save-state-chooser::
* coot-save-symmetry-chooser::
* coot-screendump-chooser::
* set-directory-for-coot-file-chooser::
* coot-file-chooser-file-name::
* set-filename-for-filechooserselection::
@end menu

@node make-directory-maybe
@subsection make-directory-maybe
@deffn function make-directory-maybe dir

Where @emph{dir} is a string

make a directory dir (if it doesn't exist) and return error code 

If it can be created, create the directory dir, return the success status like mkdir: mkdir

Returns: zero on success, or -1 if an error occurred. If dir already exists as a directory, return 0 of course. 

@end deffn

@node set-show-paths-in-display-manager
@subsection set-show-paths-in-display-manager
@deffn function set-show-paths-in-display-manager i

Where @emph{i} is an integer number

Show Paths in Display Manager? 

Some people don't like to see the full path names in the display manager here is the way to turn them off, with an argument of 1. 

@end deffn

@node show-paths-in-display-manager-state
@subsection show-paths-in-display-manager-state
@deffn function show-paths-in-display-manager-state

return the internal state 

What is the internal flag?

Returns: 1 for "yes, display paths" , 0 for not 

@end deffn

@node add-coordinates-glob-extension
@subsection add-coordinates-glob-extension
@deffn function add-coordinates-glob-extension ext

Where @emph{ext} is a string

add an extension to be treated as coordinate files 

@end deffn

@node add-data-glob-extension
@subsection add-data-glob-extension
@deffn function add-data-glob-extension ext

Where @emph{ext} is a string

add an extension to be treated as data (reflection) files 

@end deffn

@node add-dictionary-glob-extension
@subsection add-dictionary-glob-extension
@deffn function add-dictionary-glob-extension ext

Where @emph{ext} is a string

add an extension to be treated as geometry dictionary files 

@end deffn

@node add-map-glob-extension
@subsection add-map-glob-extension
@deffn function add-map-glob-extension ext

Where @emph{ext} is a string

add an extension to be treated as geometry map files 

@end deffn

@node remove-coordinates-glob-extension
@subsection remove-coordinates-glob-extension
@deffn function remove-coordinates-glob-extension ext

Where @emph{ext} is a string

remove an extension to be treated as coordinate files 

@end deffn

@node remove-data-glob-extension
@subsection remove-data-glob-extension
@deffn function remove-data-glob-extension ext

Where @emph{ext} is a string

remove an extension to be treated as data (reflection) files 

@end deffn

@node remove-dictionary-glob-extension
@subsection remove-dictionary-glob-extension
@deffn function remove-dictionary-glob-extension ext

Where @emph{ext} is a string

remove an extension to be treated as geometry dictionary files 

@end deffn

@node remove-map-glob-extension
@subsection remove-map-glob-extension
@deffn function remove-map-glob-extension ext

Where @emph{ext} is a string

remove an extension to be treated as geometry map files 

@end deffn

@node set-sticky-sort-by-date
@subsection set-sticky-sort-by-date
@deffn function set-sticky-sort-by-date

sort files in the file selection by date? 

some people like to have their files sorted by date by default 

@end deffn

@node unset-sticky-sort-by-date
@subsection unset-sticky-sort-by-date
@deffn function unset-sticky-sort-by-date

do not sort files in the file selection by date? 

removes the sorting of files by date 

@end deffn

@node set-filter-fileselection-filenames
@subsection set-filter-fileselection-filenames
@deffn function set-filter-fileselection-filenames istate

Where @emph{istate} is an integer number

on opening a file selection dialog, pre-filter the files. 

set to 1 to pre-filter, [0 (off, non-pre-filtering) is the default 

@end deffn

@node set-file-selection-dialog-size
@subsection set-file-selection-dialog-size
@deffn function set-file-selection-dialog-size w

Where @emph{w} is a GtkWidget

@end deffn

@node filter-fileselection-filenames-state
@subsection filter-fileselection-filenames-state
@deffn function filter-fileselection-filenames-state

, return the state of the above variable 

@end deffn

@node on-filename-filter-toggle-button-toggled-gtk1
@subsection on-filename-filter-toggle-button-toggled-gtk1
@deffn function on-filename-filter-toggle-button-toggled-gtk1 button user_data

Where: 
@itemize @bullet
@item @emph{button} is a GtkButton
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node add-filename-filter
@subsection add-filename-filter
@deffn function add-filename-filter fileselection

Where @emph{fileselection} is a GtkWidget

@end deffn

@node add-filename-filter-button
@subsection add-filename-filter-button
@deffn function add-filename-filter-button fileselection type

Where: 
@itemize @bullet
@item @emph{fileselection} is a GtkWidget
@item @emph{type} is an integer number
@end itemize

@end deffn

@node on-filename-filter-key-press-event
@subsection on-filename-filter-key-press-event
@deffn function on-filename-filter-key-press-event widget event user_data

Where: 
@itemize @bullet
@item @emph{widget} is a GtkWidget
@item @emph{event} is a GdkEventKey
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node fill-option-menu-with-coordinates-options
@subsection fill-option-menu-with-coordinates-options
@deffn function fill-option-menu-with-coordinates-options option_menu signal_func imol_active_position

Where: 
@itemize @bullet
@item @emph{option_menu} is a GtkWidget
@item @emph{signal_func} is a GtkSignalFunc
@item @emph{imol_active_position} is an integer number
@end itemize

@end deffn

@node coot-file-chooser
@subsection coot-file-chooser
@deffn function coot-file-chooser

@end deffn

@node coot-dataset-chooser
@subsection coot-dataset-chooser
@deffn function coot-dataset-chooser

@end deffn

@node coot-map-name-chooser
@subsection coot-map-name-chooser
@deffn function coot-map-name-chooser

@end deffn

@node coot-save-coords-chooser
@subsection coot-save-coords-chooser
@deffn function coot-save-coords-chooser

@end deffn

@node coot-cif-dictionary-chooser
@subsection coot-cif-dictionary-chooser
@deffn function coot-cif-dictionary-chooser

@end deffn

@node coot-run-script-chooser
@subsection coot-run-script-chooser
@deffn function coot-run-script-chooser

@end deffn

@node coot-save-state-chooser
@subsection coot-save-state-chooser
@deffn function coot-save-state-chooser

@end deffn

@node coot-save-symmetry-chooser
@subsection coot-save-symmetry-chooser
@deffn function coot-save-symmetry-chooser

@end deffn

@node coot-screendump-chooser
@subsection coot-screendump-chooser
@deffn function coot-screendump-chooser

@end deffn

@node set-directory-for-coot-file-chooser
@subsection set-directory-for-coot-file-chooser
@deffn function set-directory-for-coot-file-chooser w

Where @emph{w} is a GtkWidget

@end deffn

@node coot-file-chooser-file-name
@subsection coot-file-chooser-file-name
@deffn function coot-file-chooser-file-name widget

Where @emph{widget} is a GtkWidget

@end deffn

@node set-filename-for-filechooserselection
@subsection set-filename-for-filechooserselection
@deffn function set-filename-for-filechooserselection widget name

Where: 
@itemize @bullet
@item @emph{widget} is a GtkWidget
@item @emph{name} is a string
@end itemize

@end deffn

@node Widget Utilities
@section Widget Utilities

@menu
* get-positive-float-from-entry::
* handle-filename-filter-gtk1::
* set-transient-and-position::
* info-dialog::
* main-menubar::
* main-statusbar::
* main-toolbar::
@end menu

@node get-positive-float-from-entry
@subsection get-positive-float-from-entry
@deffn function get-positive-float-from-entry w

Where @emph{w} is a GtkEntry

@end deffn

@node handle-filename-filter-gtk1
@subsection handle-filename-filter-gtk1
@deffn function handle-filename-filter-gtk1 widget

Where @emph{widget} is a GtkWidget

@end deffn

@node set-transient-and-position
@subsection set-transient-and-position
@deffn function set-transient-and-position window_type window

Where: 
@itemize @bullet
@item @emph{window_type} is an integer number
@item @emph{window} is a GtkWidget
@end itemize

@end deffn

@node info-dialog
@subsection info-dialog
@deffn function info-dialog txt

Where @emph{txt} is a string

create a dialog with information 

create a dialog with information string txt. User has to click to dismiss it, but it is not modal (nothing in coot is modal). 

@end deffn

@node main-menubar
@subsection main-menubar
@deffn function main-menubar

@end deffn

@node main-statusbar
@subsection main-statusbar
@deffn function main-statusbar

@end deffn

@node main-toolbar
@subsection main-toolbar
@deffn function main-toolbar

@end deffn

@node MTZ and data handling utilities
@section MTZ and data handling utilities

@menu
* manage-column-selector::
* manage-refmac-column-selection::
* fill-f-optionmenu-with-expert-options::
* handle-column-label-make-fourier::
* wrapped-create-run-refmac-dialog::
@end menu

@node manage-column-selector
@subsection manage-column-selector
@deffn function manage-column-selector filename

Where @emph{filename} is a string

given a filename, try to read it as a data file 

We try as .phs and .cif files first 

@end deffn

@node manage-refmac-column-selection
@subsection manage-refmac-column-selection
@deffn function manage-refmac-column-selection w

Where @emph{w} is a GtkWidget

@end deffn

@node fill-f-optionmenu-with-expert-options
@subsection fill-f-optionmenu-with-expert-options
@deffn function fill-f-optionmenu-with-expert-options f_optionmenu

Where @emph{f_optionmenu} is a GtkWidget

@end deffn

@node handle-column-label-make-fourier
@subsection handle-column-label-make-fourier
@deffn function handle-column-label-make-fourier column_label_window

Where @emph{column_label_window} is a GtkWidget

@end deffn

@node wrapped-create-run-refmac-dialog
@subsection wrapped-create-run-refmac-dialog
@deffn function wrapped-create-run-refmac-dialog

@end deffn

@node Molecule Info Functions
@section Molecule Info Functions

@menu
* chain-n-residues::
* molecule-centre-internal::
* resname-from-serial-number::
* seqnum-from-serial-number::
* insertion-code-from-serial-number::
* chain-id::
* n-chains::
* is-solvent-chain-p::
* sort-chains::
* copy-molecule::
* exchange-chain-ids-for-seg-ids::
@end menu

@node chain-n-residues
@subsection chain-n-residues
@deffn function chain-n-residues chain_id imol

Where: 
@itemize @bullet
@item @emph{chain_id} is a string
@item @emph{imol} is an integer number
@end itemize

the number of residues in chain chain_id and molecule number imol 

Returns: the number of residues 

@end deffn

@node molecule-centre-internal
@subsection molecule-centre-internal
@deffn function molecule-centre-internal imol iaxis

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{iaxis} is an integer number
@end itemize

@end deffn

@node resname-from-serial-number
@subsection resname-from-serial-number
@deffn function resname-from-serial-number imol chain_id serial_num

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{serial_num} is an integer number
@end itemize

return the rename from a residue serial number 

Returns: NULL (f) on failure. 

@end deffn

@node seqnum-from-serial-number
@subsection seqnum-from-serial-number
@deffn function seqnum-from-serial-number imol chain_id serial_num

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{serial_num} is an integer number
@end itemize

a residue seqnum (normal residue number) from a residue serial number 

Returns: < -9999 on failure 

@end deffn

@node insertion-code-from-serial-number
@subsection insertion-code-from-serial-number
@deffn function insertion-code-from-serial-number imol chain_id serial_num

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{serial_num} is an integer number
@end itemize

the insertion code of the residue. 

Returns: NULL (f) on failure. 

@end deffn

@node chain-id
@subsection chain-id
@deffn function chain-id imol ichain

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{ichain} is an integer number
@end itemize

the chain_id (string) of the ichain-th chain molecule number imol 

Returns: the chain-id 

@end deffn

@node n-chains
@subsection n-chains
@deffn function n-chains imol

Where @emph{imol} is an integer number

number of chains in molecule number imol 

Returns: the number of chains 

@end deffn

@node is-solvent-chain-p
@subsection is-solvent-chain-p
@deffn function is-solvent-chain-p imol chain_id

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@end itemize

is this a solvent chain? [Raw function] 

This is a raw interface function, you should generally not use this, but instead use (is-solvent-chain? imol chain-id)

Returns: -1 on error, 0 for no, 1 for is "a solvent chain". We wouldn't want to be doing rotamer searches and the like on such a chain. 

@end deffn

@node sort-chains
@subsection sort-chains
@deffn function sort-chains imol

Where @emph{imol} is an integer number

xxbrief sort the chain ids of the imol-th molecule in lexographical order 

@end deffn

@node copy-molecule
@subsection copy-molecule
@deffn function copy-molecule imol

Where @emph{imol} is an integer number

copy molecule imol 

Returns: the new molecule number. Return -1 on failure to copy molecule (out of range, or molecule is closed) 

@end deffn

@node exchange-chain-ids-for-seg-ids
@subsection exchange-chain-ids-for-seg-ids
@deffn function exchange-chain-ids-for-seg-ids imol

Where @emph{imol} is an integer number

Experimental interface for Ribosome People. 

Ribosome People have many chains in their pdb file, they prefer segids to chainids (chainids are only 1 character). But coot uses the concept of chain ids and not seg-ids. mmdb allow us to use more than one char in the chainid, so after we read in a pdb, let's replace the chain ids with the segids. Will that help? 

@end deffn

@node Library and Utility Functions
@section Library and Utility Functions

@menu
* coot-version::
* molecule-name::
* set-molecule-name::
* main-window::
* coot-checked-exit::
* coot-real-exit::
* coot-clear-backup-or-real-exit::
* fill-about-window::
* add-coot-references-button::
* wrapped-create-coot-references-dialog::
* first-coords-imol::
@end menu

@node coot-version
@subsection coot-version
@deffn function coot-version

the coot version string 

Returns: something like "coot-0.1.3". New versions of coot will always be lexographically greater than previous versions. 

@end deffn

@node molecule-name
@subsection molecule-name
@deffn function molecule-name imol

Where @emph{imol} is an integer number

return the name of molecule number imol 

Returns: 0 if not a valid name ( -> f in scheme) e.g. "/a/b/c.pdb" for "d/e/f.mtz FWT PHWT" 

@end deffn

@node set-molecule-name
@subsection set-molecule-name
@deffn function set-molecule-name imol new_name

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{new_name} is a string
@end itemize

set the molecule name of the imol-th molecule 

@end deffn

@node main-window
@subsection main-window
@deffn function main-window

@end deffn

@node coot-checked-exit
@subsection coot-checked-exit
@deffn function coot-checked-exit retval

Where @emph{retval} is an integer number

@end deffn

@node coot-real-exit
@subsection coot-real-exit
@deffn function coot-real-exit retval

Where @emph{retval} is an integer number

exit from coot, give return value retval back to invoking process. 

@end deffn

@node coot-clear-backup-or-real-exit
@subsection coot-clear-backup-or-real-exit
@deffn function coot-clear-backup-or-real-exit retval

Where @emph{retval} is an integer number

@end deffn

@node fill-about-window
@subsection fill-about-window
@deffn function fill-about-window widget

Where @emph{widget} is a GtkWidget

@end deffn

@node add-coot-references-button
@subsection add-coot-references-button
@deffn function add-coot-references-button widget

Where @emph{widget} is a GtkWidget

@end deffn

@node wrapped-create-coot-references-dialog
@subsection wrapped-create-coot-references-dialog
@deffn function wrapped-create-coot-references-dialog

@end deffn

@node first-coords-imol
@subsection first-coords-imol
@deffn function first-coords-imol

What is the molecule number of first coordinates molecule? 

return -1 when there is none. 

@end deffn

@node Graphics Utility Functions
@section Graphics Utility Functions

@menu
* set-do-anti-aliasing::
* do-anti-aliasing-state::
* set-do-GL-lighting::
* do-GL-lighting-state::
* use-graphics-interface-state::
* start-graphics-interface::
* reset-view::
* graphics-n-molecules::
* own-molecule-number::
* next-map-for-molecule::
* toggle-idle-spin-function::
* set-idle-function-rotate-angle::
* idle-function-rotate-angle::
* handle-read-draw-molecule::
* handle-read-draw-molecule-with-recentre::
* handle-read-draw-molecule-and-move-molecule-here::
* read-pdb::
* assign-hetatms::
* replace-fragment::
* clear-and-update-model-molecule-from-file::
* screendump-image::
* add-is-difference-map-checkbutton::
* on-read-map-difference-map-toggle-button-toggled::
* add-recentre-on-read-pdb-checkbutton::
* on-recentre-on-read-pdb-toggle-button-toggled::
@end menu

@node set-do-anti-aliasing
@subsection set-do-anti-aliasing
@deffn function set-do-anti-aliasing state

Where @emph{state} is an integer number

set the bond lines to be antialiased 

@end deffn

@node do-anti-aliasing-state
@subsection do-anti-aliasing-state
@deffn function do-anti-aliasing-state

return the flag for antialiasing the bond lines 

@end deffn

@node set-do-GL-lighting
@subsection set-do-GL-lighting
@deffn function set-do-GL-lighting state

Where @emph{state} is an integer number

turn the GL lighting on (state = 1) or off (state = 0) 

slows down the display of simple lines 

@end deffn

@node do-GL-lighting-state
@subsection do-GL-lighting-state
@deffn function do-GL-lighting-state

return the flag for GL lighting 

@end deffn

@node use-graphics-interface-state
@subsection use-graphics-interface-state
@deffn function use-graphics-interface-state

shall we start up the Gtk and the graphics window? 

if passed the command line argument --no-graphics, coot will not start up gtk itself.

An interface function for Ralf. 

@end deffn

@node start-graphics-interface
@subsection start-graphics-interface
@deffn function start-graphics-interface

start Gtk (and graphics) 

This function is useful if it was not started already (which can be achieved by using the command line argument --no-graphics).

An interface for Ralf 

@end deffn

@node reset-view
@subsection reset-view
@deffn function reset-view

"Reset" the view 

return 1 if we moved, else return 0.

centre on last-read molecule with zoom 100. If we are there, then go to the previous molecule, if we are there, then go to the origin. 

@end deffn

@node graphics-n-molecules
@subsection graphics-n-molecules
@deffn function graphics-n-molecules

return the number of molecules (coordinates molecules and map molecules combined) that are currently in coot 

Returns: the number of molecules (closed molecules are not counted) 

@end deffn

@node own-molecule-number
@subsection own-molecule-number
@deffn function own-molecule-number imol

Where @emph{imol} is an integer number

@end deffn

@node next-map-for-molecule
@subsection next-map-for-molecule
@deffn function next-map-for-molecule imol

Where @emph{imol} is an integer number

@end deffn

@node toggle-idle-spin-function
@subsection toggle-idle-spin-function
@deffn function toggle-idle-spin-function

Spin spin spin (or not). 

@end deffn

@node set-idle-function-rotate-angle
@subsection set-idle-function-rotate-angle
@deffn function set-idle-function-rotate-angle f

Where @emph{f} is a number

how far should we rotate when (auto) spinning? Fast computer? set this to 0.1 

@end deffn

@node idle-function-rotate-angle
@subsection idle-function-rotate-angle
@deffn function idle-function-rotate-angle

@end deffn

@node handle-read-draw-molecule
@subsection handle-read-draw-molecule
@deffn function handle-read-draw-molecule filename

Where @emph{filename} is a string

a synonym for read-pdb. Read the coordinates from filename (can be pdb, cif or shelx format) 

@end deffn

@node handle-read-draw-molecule-with-recentre
@subsection handle-read-draw-molecule-with-recentre
@deffn function handle-read-draw-molecule-with-recentre filename recentre_on_read_pdb_flag

Where: 
@itemize @bullet
@item @emph{filename} is a string
@item @emph{recentre_on_read_pdb_flag} is an integer number
@end itemize

read coordinates from filename with option to not recentre. 

set recentre_on_read_pdb_flag to 0 if you don't want the view to recentre on the new coordinates. 

@end deffn

@node handle-read-draw-molecule-and-move-molecule-here
@subsection handle-read-draw-molecule-and-move-molecule-here
@deffn function handle-read-draw-molecule-and-move-molecule-here filename

Where @emph{filename} is a string

read coordinates from filename and recentre the new molecule at the screen rotation centre. 

@end deffn

@node read-pdb
@subsection read-pdb
@deffn function read-pdb filename

Where @emph{filename} is a string

read coordinates from filename 

@end deffn

@node assign-hetatms
@subsection assign-hetatms
@deffn function assign-hetatms imol

Where @emph{imol} is an integer number

some programs produce PDB files with ATOMs where there should be HETATMs. This is a function to assign HETATMs as per the PDB definition. 

@end deffn

@node replace-fragment
@subsection replace-fragment
@deffn function replace-fragment imol_target imol_fragment atom_selection

Where: 
@itemize @bullet
@item @emph{imol_target} is an integer number
@item @emph{imol_fragment} is an integer number
@item @emph{atom_selection} is a string
@end itemize

replace the parts of molecule number imol that are duplicated in molecule number imol_frag 

@end deffn

@node clear-and-update-model-molecule-from-file
@subsection clear-and-update-model-molecule-from-file
@deffn function clear-and-update-model-molecule-from-file molecule_number file_name

Where: 
@itemize @bullet
@item @emph{molecule_number} is an integer number
@item @emph{file_name} is a string
@end itemize

replace pdb. Fail if molecule_number is not a valid model molecule. Return -1 on failure. Else return molecule_number 

@end deffn

@node screendump-image
@subsection screendump-image
@deffn function screendump-image filename

Where @emph{filename} is a string

dump the current screen image to a file. Format ppm 

You can use this, in conjunction with spinning and view moving functions to make movies 

@end deffn

@node add-is-difference-map-checkbutton
@subsection add-is-difference-map-checkbutton
@deffn function add-is-difference-map-checkbutton fileselection

Where @emph{fileselection} is a GtkWidget

@end deffn

@node on-read-map-difference-map-toggle-button-toggled
@subsection on-read-map-difference-map-toggle-button-toggled
@deffn function on-read-map-difference-map-toggle-button-toggled button user_data

Where: 
@itemize @bullet
@item @emph{button} is a GtkButton
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node add-recentre-on-read-pdb-checkbutton
@subsection add-recentre-on-read-pdb-checkbutton
@deffn function add-recentre-on-read-pdb-checkbutton fileselection

Where @emph{fileselection} is a GtkWidget

@end deffn

@node on-recentre-on-read-pdb-toggle-button-toggled
@subsection on-recentre-on-read-pdb-toggle-button-toggled
@deffn function on-recentre-on-read-pdb-toggle-button-toggled button user_data

Where: 
@itemize @bullet
@item @emph{button} is a GtkButton
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node Interface Preferences
@section Interface Preferences

@menu
* set-scroll-by-wheel-mouse::
* scroll-by-wheel-mouse-state::
* set-default-initial-contour-level-for-map::
* set-default-initial-contour-level-for-difference-map::
* print-view-matrix::
* get-view-matrix-element::
* get-view-quaternion-internal::
* set-view-quaternion::
* apply-ncs-to-view-orientation::
* apply-ncs-to-view-orientation-and-screen-centre::
* set-fps-flag::
* get-fps-flag::
* set-show-origin-marker::
* show-origin-marker-state::
* hide-modelling-toolbar::
* show-modelling-toolbar::
* show-model-toolbar-all-icons::
* show-model-toolbar-main-icons::
* toolbar-popup-menu::
* set-model-toolbar-docked-position-callback::
* reattach-modelling-toolbar::
* set-model-toolbar-docked-position::
* suck-model-fit-dialog::
* suck-model-fit-dialog-bl::
* close-model-fit-dialog::
* popup-window::
* add-status-bar-text::
* set-model-fit-refine-dialog-stays-on-top::
* model-fit-refine-dialog-stays-on-top-state::
* save-accept-reject-dialog-window-position::
* set-accept-reject-dialog::
* set-accept-reject-dialog-docked::
* accept-reject-dialog-docked-state::
* set-accept-reject-dialog-docked-show::
* accept-reject-dialog-docked-show-state::
* set-model-toolbar-style::
* model-toolbar-style-state::
@end menu

@node set-scroll-by-wheel-mouse
@subsection set-scroll-by-wheel-mouse
@deffn function set-scroll-by-wheel-mouse istate

Where @emph{istate} is an integer number

Some people (like Phil Evans) don't want to scroll their map with the mouse-wheel. 

To turn off mouse wheel recontouring call this with istate value of 0 

@end deffn

@node scroll-by-wheel-mouse-state
@subsection scroll-by-wheel-mouse-state
@deffn function scroll-by-wheel-mouse-state

return the internal state of the scroll-wheel map contouring 

@end deffn

@node set-default-initial-contour-level-for-map
@subsection set-default-initial-contour-level-for-map
@deffn function set-default-initial-contour-level-for-map n_sigma

Where @emph{n_sigma} is a number

set the default inital contour for 2FoFc-style map 

in sigma 

@end deffn

@node set-default-initial-contour-level-for-difference-map
@subsection set-default-initial-contour-level-for-difference-map
@deffn function set-default-initial-contour-level-for-difference-map n_sigma

Where @emph{n_sigma} is a number

set the default inital contour for FoFc-style map 

in sigma 

@end deffn

@node print-view-matrix
@subsection print-view-matrix
@deffn function print-view-matrix

print the view matrix to the console, useful for molscript, perhaps 

@end deffn

@node get-view-matrix-element
@subsection get-view-matrix-element
@deffn function get-view-matrix-element row col

Where: 
@itemize @bullet
@item @emph{row} is an integer number
@item @emph{col} is an integer number
@end itemize

@end deffn

@node get-view-quaternion-internal
@subsection get-view-quaternion-internal
@deffn function get-view-quaternion-internal element

Where @emph{element} is an integer number

internal function to get an element of the view quaternion. The whole quaternion is returned by the scheme function view-quaternion 

@end deffn

@node set-view-quaternion
@subsection set-view-quaternion
@deffn function set-view-quaternion i j k l

Where: 
@itemize @bullet
@item @emph{i} is a number
@item @emph{j} is a number
@item @emph{k} is a number
@item @emph{l} is a number
@end itemize

Set the view quaternion. 

@end deffn

@node apply-ncs-to-view-orientation
@subsection apply-ncs-to-view-orientation
@deffn function apply-ncs-to-view-orientation imol current_chain next_ncs_chain

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{current_chain} is a string
@item @emph{next_ncs_chain} is a string
@end itemize

Given that we are in chain current_chain, apply the NCS operator that maps current_chain on to next_ncs_chain, so that the relative view is preserved. For NCS skipping. 

@end deffn

@node apply-ncs-to-view-orientation-and-screen-centre
@subsection apply-ncs-to-view-orientation-and-screen-centre
@deffn function apply-ncs-to-view-orientation-and-screen-centre imol current_chain next_ncs_chain

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{current_chain} is a string
@item @emph{next_ncs_chain} is a string
@end itemize

@end deffn

@node set-fps-flag
@subsection set-fps-flag
@deffn function set-fps-flag t

Where @emph{t} is an integer number

@end deffn

@node get-fps-flag
@subsection get-fps-flag
@deffn function get-fps-flag

@end deffn

@node set-show-origin-marker
@subsection set-show-origin-marker
@deffn function set-show-origin-marker istate

Where @emph{istate} is an integer number

set a flag: is the origin marker to be shown? 1 for yes, 0 for no. 

@end deffn

@node show-origin-marker-state
@subsection show-origin-marker-state
@deffn function show-origin-marker-state

return the origin marker shown? state 

@end deffn

@node hide-modelling-toolbar
@subsection hide-modelling-toolbar
@deffn function hide-modelling-toolbar

hide the vertical modelling toolbar in the GTK2 version 

@end deffn

@node show-modelling-toolbar
@subsection show-modelling-toolbar
@deffn function show-modelling-toolbar

show the vertical modelling toolbar in the GTK2 version (the toolbar is shown by default) 

@end deffn

@node show-model-toolbar-all-icons
@subsection show-model-toolbar-all-icons
@deffn function show-model-toolbar-all-icons

show all available icons in the modelling toolbar (same as MFR dialog) 

@end deffn

@node show-model-toolbar-main-icons
@subsection show-model-toolbar-main-icons
@deffn function show-model-toolbar-main-icons

show only a selection of icons in the modelling toolbar 

@end deffn

@node toolbar-popup-menu
@subsection toolbar-popup-menu
@deffn function toolbar-popup-menu toolbar event_button user_data

Where: 
@itemize @bullet
@item @emph{toolbar} is a GtkToolbar
@item @emph{event_button} is a GdkEventButton
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node set-model-toolbar-docked-position-callback
@subsection set-model-toolbar-docked-position-callback
@deffn function set-model-toolbar-docked-position-callback w user_data

Where: 
@itemize @bullet
@item @emph{w} is a GtkWidget
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node reattach-modelling-toolbar
@subsection reattach-modelling-toolbar
@deffn function reattach-modelling-toolbar

reattach the modelling toolbar to the last attached position 

@end deffn

@node set-model-toolbar-docked-position
@subsection set-model-toolbar-docked-position
@deffn function set-model-toolbar-docked-position state

Where @emph{state} is an integer number

to swap sides of the Model/Fit/Refine toolbar 0 (default) is right, 1 is left, 2 is top, 3 is bottom 

@end deffn

@node suck-model-fit-dialog
@subsection suck-model-fit-dialog
@deffn function suck-model-fit-dialog

reparent the Model/Fit/Refine dialog so that it becomes part of the main window, next to the GL graphics context 

@end deffn

@node suck-model-fit-dialog-bl
@subsection suck-model-fit-dialog-bl
@deffn function suck-model-fit-dialog-bl

@end deffn

@node close-model-fit-dialog
@subsection close-model-fit-dialog
@deffn function close-model-fit-dialog dialog_hbox

Where @emph{dialog_hbox} is a GtkWidget

@end deffn

@node popup-window
@subsection popup-window
@deffn function popup-window s

Where @emph{s} is a string

@end deffn

@node add-status-bar-text
@subsection add-status-bar-text
@deffn function add-status-bar-text s

Where @emph{s} is a string

Put text s into the status bar. 

use this to put info for the user in the statusbar (less intrusive than popup). 

@end deffn

@node set-model-fit-refine-dialog-stays-on-top
@subsection set-model-fit-refine-dialog-stays-on-top
@deffn function set-model-fit-refine-dialog-stays-on-top istate

Where @emph{istate} is an integer number

@end deffn

@node model-fit-refine-dialog-stays-on-top-state
@subsection model-fit-refine-dialog-stays-on-top-state
@deffn function model-fit-refine-dialog-stays-on-top-state

@end deffn

@node save-accept-reject-dialog-window-position
@subsection save-accept-reject-dialog-window-position
@deffn function save-accept-reject-dialog-window-position acc_reg_dialog

Where @emph{acc_reg_dialog} is a GtkWidget

@end deffn

@node set-accept-reject-dialog
@subsection set-accept-reject-dialog
@deffn function set-accept-reject-dialog w

Where @emph{w} is a GtkWidget

@end deffn

@node set-accept-reject-dialog-docked
@subsection set-accept-reject-dialog-docked
@deffn function set-accept-reject-dialog-docked state

Where @emph{state} is an integer number

@end deffn

@node accept-reject-dialog-docked-state
@subsection accept-reject-dialog-docked-state
@deffn function accept-reject-dialog-docked-state

@end deffn

@node set-accept-reject-dialog-docked-show
@subsection set-accept-reject-dialog-docked-show
@deffn function set-accept-reject-dialog-docked-show state

Where @emph{state} is an integer number

@end deffn

@node accept-reject-dialog-docked-show-state
@subsection accept-reject-dialog-docked-show-state
@deffn function accept-reject-dialog-docked-show-state

@end deffn

@node set-model-toolbar-style
@subsection set-model-toolbar-style
@deffn function set-model-toolbar-style state

Where @emph{state} is an integer number

@end deffn

@node model-toolbar-style-state
@subsection model-toolbar-style-state
@deffn function model-toolbar-style-state

@end deffn

@node Mouse Buttons
@section Mouse Buttons

@menu
* quanta-buttons::
* quanta-like-zoom::
* set-control-key-for-rotate::
* control-key-for-rotate-state::
* blob-under-pointer-to-screen-centre::
@end menu

@node quanta-buttons
@subsection quanta-buttons
@deffn function quanta-buttons

@end deffn

@node quanta-like-zoom
@subsection quanta-like-zoom
@deffn function quanta-like-zoom

@end deffn

@node set-control-key-for-rotate
@subsection set-control-key-for-rotate
@deffn function set-control-key-for-rotate state

Where @emph{state} is an integer number

Alternate mode for rotation. 

Prefered by some, including Dirk Kostrewa. I don't think this mode works properly yet 

@end deffn

@node control-key-for-rotate-state
@subsection control-key-for-rotate-state
@deffn function control-key-for-rotate-state

return the control key rotate state 

@end deffn

@node blob-under-pointer-to-screen-centre
@subsection blob-under-pointer-to-screen-centre
@deffn function blob-under-pointer-to-screen-centre

@end deffn

@node Cursor Function
@section Cursor Function

@menu
* normal-cursor::
* fleur-cursor::
* pick-cursor-maybe::
* rotate-cursor::
* set-pick-cursor-index::
@end menu

@node normal-cursor
@subsection normal-cursor
@deffn function normal-cursor

@end deffn

@node fleur-cursor
@subsection fleur-cursor
@deffn function fleur-cursor

@end deffn

@node pick-cursor-maybe
@subsection pick-cursor-maybe
@deffn function pick-cursor-maybe

@end deffn

@node rotate-cursor
@subsection rotate-cursor
@deffn function rotate-cursor

@end deffn

@node set-pick-cursor-index
@subsection set-pick-cursor-index
@deffn function set-pick-cursor-index icursor_index

Where @emph{icursor_index} is an integer number

let the user have a different pick cursor 

sometimes (the default) GDK_CROSSHAIR is hard to see, let the user set their own 

@end deffn

@node Model/Fit/Refine Functions
@section Model/Fit/Refine Functions

@menu
* post-model-fit-refine-dialog::
* wrapped-create-model-fit-refine-dialog::
* update-model-fit-refine-dialog-menu::
* update-model-fit-refine-dialog-buttons::
* unset-model-fit-refine-dialog::
* unset-refine-params-dialog::
* show-select-map-dialog::
* set-model-fit-refine-rotate-translate-zone-label::
* set-model-fit-refine-place-atom-at-pointer-label::
* wrapped-create-other-model-tools-dialog::
* unset-other-modelling-tools-dialog::
* post-other-modelling-tools-dialog::
* set-refinement-move-atoms-with-zero-occupancy::
* refinement-move-atoms-with-zero-occupancy-state::
* wrapped-create-fast-ss-search-dialog::
@end menu

@node post-model-fit-refine-dialog
@subsection post-model-fit-refine-dialog
@deffn function post-model-fit-refine-dialog

display the Model/Fit/Refine dialog 

@end deffn

@node wrapped-create-model-fit-refine-dialog
@subsection wrapped-create-model-fit-refine-dialog
@deffn function wrapped-create-model-fit-refine-dialog

@end deffn

@node update-model-fit-refine-dialog-menu
@subsection update-model-fit-refine-dialog-menu
@deffn function update-model-fit-refine-dialog-menu widget

Where @emph{widget} is a GtkWidget

@end deffn

@node update-model-fit-refine-dialog-buttons
@subsection update-model-fit-refine-dialog-buttons
@deffn function update-model-fit-refine-dialog-buttons widget

Where @emph{widget} is a GtkWidget

@end deffn

@node unset-model-fit-refine-dialog
@subsection unset-model-fit-refine-dialog
@deffn function unset-model-fit-refine-dialog

@end deffn

@node unset-refine-params-dialog
@subsection unset-refine-params-dialog
@deffn function unset-refine-params-dialog

@end deffn

@node show-select-map-dialog
@subsection show-select-map-dialog
@deffn function show-select-map-dialog

display the Display Manager dialog 

@end deffn

@node set-model-fit-refine-rotate-translate-zone-label
@subsection set-model-fit-refine-rotate-translate-zone-label
@deffn function set-model-fit-refine-rotate-translate-zone-label txt

Where @emph{txt} is a string

Allow the changing of Model/Fit/Refine button label from "Rotate/Translate Zone". 

@end deffn

@node set-model-fit-refine-place-atom-at-pointer-label
@subsection set-model-fit-refine-place-atom-at-pointer-label
@deffn function set-model-fit-refine-place-atom-at-pointer-label txt

Where @emph{txt} is a string

Allow the changing of Model/Fit/Refine button label from "Place Atom at Pointer". 

@end deffn

@node wrapped-create-other-model-tools-dialog
@subsection wrapped-create-other-model-tools-dialog
@deffn function wrapped-create-other-model-tools-dialog

@end deffn

@node unset-other-modelling-tools-dialog
@subsection unset-other-modelling-tools-dialog
@deffn function unset-other-modelling-tools-dialog

@end deffn

@node post-other-modelling-tools-dialog
@subsection post-other-modelling-tools-dialog
@deffn function post-other-modelling-tools-dialog

display the Other Modelling Tools dialog 

@end deffn

@node set-refinement-move-atoms-with-zero-occupancy
@subsection set-refinement-move-atoms-with-zero-occupancy
@deffn function set-refinement-move-atoms-with-zero-occupancy state

Where @emph{state} is an integer number

shall atoms with zero occupancy be moved when refining? (default 1, yes) 

@end deffn

@node refinement-move-atoms-with-zero-occupancy-state
@subsection refinement-move-atoms-with-zero-occupancy-state
@deffn function refinement-move-atoms-with-zero-occupancy-state

return the state of "shall atoms with zero occupancy be moved when refining?" 

@end deffn

@node wrapped-create-fast-ss-search-dialog
@subsection wrapped-create-fast-ss-search-dialog
@deffn function wrapped-create-fast-ss-search-dialog

@end deffn

@node Backup Functions
@section Backup Functions

@menu
* make-backup::
* turn-off-backup::
* turn-on-backup::
* backup-state::
* apply-undo::
* apply-redo::
* set-have-unsaved-changes::
* have-unsaved-changes-p::
* set-undo-molecule::
* show-set-undo-molecule-chooser::
* wrapped-create-undo-molecule-chooser-dialog::
* set-unpathed-backup-file-names::
* unpathed-backup-file-names-state::
@end menu

@node make-backup
@subsection make-backup
@deffn function make-backup imol

Where @emph{imol} is an integer number

make backup for molecule number imol 

@end deffn

@node turn-off-backup
@subsection turn-off-backup
@deffn function turn-off-backup imol

Where @emph{imol} is an integer number

turn off backups for molecule number imol 

@end deffn

@node turn-on-backup
@subsection turn-on-backup
@deffn function turn-on-backup imol

Where @emph{imol} is an integer number

turn on backups for molecule number imol 

@end deffn

@node backup-state
@subsection backup-state
@deffn function backup-state imol

Where @emph{imol} is an integer number

return the backup state for molecule number imol 

return 0 for backups off, 1 for backups on, -1 for unknown 

@end deffn

@node apply-undo
@subsection apply-undo
@deffn function apply-undo

@end deffn

@node apply-redo
@subsection apply-redo
@deffn function apply-redo

@end deffn

@node set-have-unsaved-changes
@subsection set-have-unsaved-changes
@deffn function set-have-unsaved-changes imol

Where @emph{imol} is an integer number

set the molecule number imol to be marked as having unsaved changes 

@end deffn

@node have-unsaved-changes-p
@subsection have-unsaved-changes-p
@deffn function have-unsaved-changes-p imol

Where @emph{imol} is an integer number

@end deffn

@node set-undo-molecule
@subsection set-undo-molecule
@deffn function set-undo-molecule imol

Where @emph{imol} is an integer number

set the molecule to which undo operations are done to molecule number imol 

@end deffn

@node show-set-undo-molecule-chooser
@subsection show-set-undo-molecule-chooser
@deffn function show-set-undo-molecule-chooser

show the Undo Molecule chooser - i.e. choose the molecule to which the "Undo" button applies. 

@end deffn

@node wrapped-create-undo-molecule-chooser-dialog
@subsection wrapped-create-undo-molecule-chooser-dialog
@deffn function wrapped-create-undo-molecule-chooser-dialog

@end deffn

@node set-unpathed-backup-file-names
@subsection set-unpathed-backup-file-names
@deffn function set-unpathed-backup-file-names state

Where @emph{state} is an integer number

set the state for adding paths to backup file names 

by default directories names are added into the filename for backup (with / to _ mapping). call this with state=1 to turn off directory names 

@end deffn

@node unpathed-backup-file-names-state
@subsection unpathed-backup-file-names-state
@deffn function unpathed-backup-file-names-state

return the state for adding paths to backup file names 

@end deffn

@node Recover Session Function
@section Recover Session Function

@menu
* recover-session::
* execute-recover-session::
@end menu

@node recover-session
@subsection recover-session
@deffn function recover-session

recover session 

After a crash (shock horror!) we provide this convenient interface to restore the session. It runs through all the molecules with models and looks at the coot backup directory looking for related backup files that are more recent that the read file. 

@end deffn

@node execute-recover-session
@subsection execute-recover-session
@deffn function execute-recover-session w

Where @emph{w} is a GtkWidget

@end deffn

@node Map Functions
@section Map Functions

@menu
* calc-phases-generic::
* map-from-mtz-by-refmac-calc-phases::
* map-from-mtz-by-calc-phases::
* get-map-colour::
* add-on-map-colour-choices::
* map-colour-mol-selector-activate::
* my-delete-menu-items::
* add-on-map-scroll-whell-choices::
* map-scroll-wheel-mol-selector-activate::
* set-scroll-wheel-map::
* scroll-wheel-map::
* save-previous-map-colour::
* restore-previous-map-colour::
* set-active-map-drag-flag::
* get-active-map-drag-flag::
* set-last-map-colour::
* set-map-colour::
* handle-map-colour-change::
* handle-symmetry-colour-change::
* fill-single-map-properties-dialog::
* set-contour-level-absolute::
* set-contour-level-in-sigma::
* set-last-map-sigma-step::
* set-contour-sigma-button-and-entry::
* set-contour-by-sigma-step-maybe::
* set-contour-by-sigma-step-by-mol::
* data-resolution::
* solid-surface::
* export-map::
* transform-map-raw::
* rotate-map-round-screen-axis-x::
* rotate-map-round-screen-axis-y::
* rotate-map-round-screen-axis-z::
* difference-map::
@end menu

@node calc-phases-generic
@subsection calc-phases-generic
@deffn function calc-phases-generic mtz_file_name

Where @emph{mtz_file_name} is a string

fire up a GUI, which asks us which model molecule we want to calc phases from. On "OK" button there, we call map_from_mtz_by_refmac_calc_phases()

@end deffn

@node map-from-mtz-by-refmac-calc-phases
@subsection map-from-mtz-by-refmac-calc-phases
@deffn function map-from-mtz-by-refmac-calc-phases mtz_file_name f_col sigf_col imol_coords

Where: 
@itemize @bullet
@item @emph{mtz_file_name} is a string
@item @emph{f_col} is a string
@item @emph{sigf_col} is a string
@item @emph{imol_coords} is an integer number
@end itemize

Calculate SFs (using refmac optionally) from an MTZ file and generate a map. Get F and SIGF automatically (first of their type) from the mtz file. 

Returns: the new molecule number, -1 on a problem. 

@end deffn

@node map-from-mtz-by-calc-phases
@subsection map-from-mtz-by-calc-phases
@deffn function map-from-mtz-by-calc-phases mtz_file_name f_col sigf_col imol_coords

Where: 
@itemize @bullet
@item @emph{mtz_file_name} is a string
@item @emph{f_col} is a string
@item @emph{sigf_col} is a string
@item @emph{imol_coords} is an integer number
@end itemize

Calculate SFs from an MTZ file and generate a map. 

Returns: the new molecule number. 

@end deffn

@node get-map-colour
@subsection get-map-colour
@deffn function get-map-colour imol

Where @emph{imol} is an integer number

@end deffn

@node add-on-map-colour-choices
@subsection add-on-map-colour-choices
@deffn function add-on-map-colour-choices w

Where @emph{w} is a GtkWidget

@end deffn

@node map-colour-mol-selector-activate
@subsection map-colour-mol-selector-activate
@deffn function map-colour-mol-selector-activate menuitem user_data

Where: 
@itemize @bullet
@item @emph{menuitem} is a GtkMenuItem
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node my-delete-menu-items
@subsection my-delete-menu-items
@deffn function my-delete-menu-items widget data

Where: 
@itemize @bullet
@item @emph{widget} is a GtkWidget
@item @emph{data} is a void
@end itemize

@end deffn

@node add-on-map-scroll-whell-choices
@subsection add-on-map-scroll-whell-choices
@deffn function add-on-map-scroll-whell-choices menu

Where @emph{menu} is a GtkWidget

@end deffn

@node map-scroll-wheel-mol-selector-activate
@subsection map-scroll-wheel-mol-selector-activate
@deffn function map-scroll-wheel-mol-selector-activate menuitem user_data

Where: 
@itemize @bullet
@item @emph{menuitem} is a GtkMenuItem
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node set-scroll-wheel-map
@subsection set-scroll-wheel-map
@deffn function set-scroll-wheel-map imap

Where @emph{imap} is an integer number

set the map that is moved by changing the scroll wheel and change_contour_level(). 

@end deffn

@node scroll-wheel-map
@subsection scroll-wheel-map
@deffn function scroll-wheel-map

return the molecule number to which the mouse scroll wheel is attached 

@end deffn

@node save-previous-map-colour
@subsection save-previous-map-colour
@deffn function save-previous-map-colour imol

Where @emph{imol} is an integer number

save previous colour map for molecule number imol 

@end deffn

@node restore-previous-map-colour
@subsection restore-previous-map-colour
@deffn function restore-previous-map-colour imol

Where @emph{imol} is an integer number

restore previous colour map for molecule number imol 

@end deffn

@node set-active-map-drag-flag
@subsection set-active-map-drag-flag
@deffn function set-active-map-drag-flag t

Where @emph{t} is an integer number

set the state of immediate map upate on map drag. 

By default, it is on (t=1). On slower computers it might be better to set t=0. 

@end deffn

@node get-active-map-drag-flag
@subsection get-active-map-drag-flag
@deffn function get-active-map-drag-flag

return the state of the dragged map flag 

@end deffn

@node set-last-map-colour
@subsection set-last-map-colour
@deffn function set-last-map-colour f1 f2 f3

Where: 
@itemize @bullet
@item @emph{f1} is a number
@item @emph{f2} is a number
@item @emph{f3} is a number
@end itemize

set the colour of the last (highest molecule number) map 

@end deffn

@node set-map-colour
@subsection set-map-colour
@deffn function set-map-colour imol red green blue

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{red} is a number
@item @emph{green} is a number
@item @emph{blue} is a number
@end itemize

set the colour of the imolth map 

@end deffn

@node handle-map-colour-change
@subsection handle-map-colour-change
@deffn function handle-map-colour-change map_no 

Where: 
@itemize @bullet
@item @emph{map_no} is an integer number
@item @emph{} is a number
@end itemize

@end deffn

@node handle-symmetry-colour-change
@subsection handle-symmetry-colour-change
@deffn function handle-symmetry-colour-change mol 

Where: 
@itemize @bullet
@item @emph{mol} is an integer number
@item @emph{} is a number
@end itemize

@end deffn

@node fill-single-map-properties-dialog
@subsection fill-single-map-properties-dialog
@deffn function fill-single-map-properties-dialog window imol

Where: 
@itemize @bullet
@item @emph{window} is a GtkWidget
@item @emph{imol} is an integer number
@end itemize

@end deffn

@node set-contour-level-absolute
@subsection set-contour-level-absolute
@deffn function set-contour-level-absolute imol_map level

Where: 
@itemize @bullet
@item @emph{imol_map} is an integer number
@item @emph{level} is a number
@end itemize

@end deffn

@node set-contour-level-in-sigma
@subsection set-contour-level-in-sigma
@deffn function set-contour-level-in-sigma imol_map level

Where: 
@itemize @bullet
@item @emph{imol_map} is an integer number
@item @emph{level} is a number
@end itemize

@end deffn

@node set-last-map-sigma-step
@subsection set-last-map-sigma-step
@deffn function set-last-map-sigma-step f

Where @emph{f} is a number

set the sigma step of the last map to f sigma 

@end deffn

@node set-contour-sigma-button-and-entry
@subsection set-contour-sigma-button-and-entry
@deffn function set-contour-sigma-button-and-entry window imol

Where: 
@itemize @bullet
@item @emph{window} is a GtkWidget
@item @emph{imol} is an integer number
@end itemize

@end deffn

@node set-contour-by-sigma-step-maybe
@subsection set-contour-by-sigma-step-maybe
@deffn function set-contour-by-sigma-step-maybe window imol

Where: 
@itemize @bullet
@item @emph{window} is a GtkWidget
@item @emph{imol} is an integer number
@end itemize

@end deffn

@node set-contour-by-sigma-step-by-mol
@subsection set-contour-by-sigma-step-by-mol
@deffn function set-contour-by-sigma-step-by-mol f state imol

Where: 
@itemize @bullet
@item @emph{f} is a number
@item @emph{state} is an integer number
@item @emph{imol} is an integer number
@end itemize

set the contour level step 

set the contour level step of molecule number imol to f and variable state (setting state to 0 turns off contouring by sigma level) 

@end deffn

@node data-resolution
@subsection data-resolution
@deffn function data-resolution imol

Where @emph{imol} is an integer number

return the resolution of the data for molecule number imol. Return negative number on error, otherwise resolution in A (eg. 2.0) 

@end deffn

@node solid-surface
@subsection solid-surface
@deffn function solid-surface imap on_off_flag

Where: 
@itemize @bullet
@item @emph{imap} is an integer number
@item @emph{on_off_flag} is an integer number
@end itemize

@end deffn

@node export-map
@subsection export-map
@deffn function export-map imol filename

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{filename} is a string
@end itemize

export (write to disk) the map of molecule number imol to filename. 

Return 0 on failure, 1 on success. 

@end deffn

@node transform-map-raw
@subsection transform-map-raw
@deffn function transform-map-raw imol r00 r01 r02 r10 r11 r12 r20 r21 r22 t0 t1 t2 pt0 pt1 pt2 box_half_size

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{r00} is a number
@item @emph{r01} is a number
@item @emph{r02} is a number
@item @emph{r10} is a number
@item @emph{r11} is a number
@item @emph{r12} is a number
@item @emph{r20} is a number
@item @emph{r21} is a number
@item @emph{r22} is a number
@item @emph{t0} is a number
@item @emph{t1} is a number
@item @emph{t2} is a number
@item @emph{pt0} is a number
@item @emph{pt1} is a number
@item @emph{pt2} is a number
@item @emph{box_half_size} is a number
@end itemize

@end deffn

@node rotate-map-round-screen-axis-x
@subsection rotate-map-round-screen-axis-x
@deffn function rotate-map-round-screen-axis-x r_degrees

Where @emph{r_degrees} is a number

@end deffn

@node rotate-map-round-screen-axis-y
@subsection rotate-map-round-screen-axis-y
@deffn function rotate-map-round-screen-axis-y r_degrees

Where @emph{r_degrees} is a number

@end deffn

@node rotate-map-round-screen-axis-z
@subsection rotate-map-round-screen-axis-z
@deffn function rotate-map-round-screen-axis-z r_degrees

Where @emph{r_degrees} is a number

@end deffn

@node difference-map
@subsection difference-map
@deffn function difference-map imol1 imol2 map_scale

Where: 
@itemize @bullet
@item @emph{imol1} is an integer number
@item @emph{imol2} is an integer number
@item @emph{map_scale} is a number
@end itemize

make a difference map, taking map_scale * imap2 from imap1, on the grid of imap1. Return the new molecule number. Return -1 on failure. 

@end deffn

@node Density Increment
@section Density Increment

@menu
* get-text-for-iso-level-increment-entry::
* get-text-for-diff-map-iso-level-increment-entry::
* set-iso-level-increment::
* get-iso-level-increment::
* set-iso-level-increment-from-text::
* set-diff-map-iso-level-increment::
* get-diff-map-iso-level-increment::
* set-diff-map-iso-level-increment-from-text::
* single-map-properties-apply-contour-level-to-map::
* set-map-sampling-rate-text::
* set-map-sampling-rate::
* get-text-for-map-sampling-rate-text::
* get-map-sampling-rate::
* set-scrollable-map::
* change-contour-level::
* set-last-map-contour-level::
* set-last-map-contour-level-by-sigma::
* set-stop-scroll-diff-map::
* set-stop-scroll-iso-map::
* set-stop-scroll-iso-map-level::
* set-stop-scroll-diff-map-level::
* set-residue-density-fit-scale-factor::
@end menu

@node get-text-for-iso-level-increment-entry
@subsection get-text-for-iso-level-increment-entry
@deffn function get-text-for-iso-level-increment-entry imol

Where @emph{imol} is an integer number

@end deffn

@node get-text-for-diff-map-iso-level-increment-entry
@subsection get-text-for-diff-map-iso-level-increment-entry
@deffn function get-text-for-diff-map-iso-level-increment-entry imol

Where @emph{imol} is an integer number

@end deffn

@node set-iso-level-increment
@subsection set-iso-level-increment
@deffn function set-iso-level-increment val

Where @emph{val} is a number

set the contour scroll step (in absolute e/A3) for 2Fo-Fc-style maps to val 

The is only activated when scrolling by sigma is turned off 

@end deffn

@node get-iso-level-increment
@subsection get-iso-level-increment
@deffn function get-iso-level-increment

@end deffn

@node set-iso-level-increment-from-text
@subsection set-iso-level-increment-from-text
@deffn function set-iso-level-increment-from-text text imol

Where: 
@itemize @bullet
@item @emph{text} is a string
@item @emph{imol} is an integer number
@end itemize

@end deffn

@node set-diff-map-iso-level-increment
@subsection set-diff-map-iso-level-increment
@deffn function set-diff-map-iso-level-increment val

Where @emph{val} is a number

set the contour scroll step for difference map (in absolute e/A3) to val 

The is only activated when scrolling by sigma is turned off 

@end deffn

@node get-diff-map-iso-level-increment
@subsection get-diff-map-iso-level-increment
@deffn function get-diff-map-iso-level-increment

@end deffn

@node set-diff-map-iso-level-increment-from-text
@subsection set-diff-map-iso-level-increment-from-text
@deffn function set-diff-map-iso-level-increment-from-text text imol

Where: 
@itemize @bullet
@item @emph{text} is a string
@item @emph{imol} is an integer number
@end itemize

@end deffn

@node single-map-properties-apply-contour-level-to-map
@subsection single-map-properties-apply-contour-level-to-map
@deffn function single-map-properties-apply-contour-level-to-map w

Where @emph{w} is a GtkWidget

@end deffn

@node set-map-sampling-rate-text
@subsection set-map-sampling-rate-text
@deffn function set-map-sampling-rate-text text

Where @emph{text} is a string

@end deffn

@node set-map-sampling-rate
@subsection set-map-sampling-rate
@deffn function set-map-sampling-rate r

Where @emph{r} is a number

set the map sampling rate (default 1.5) 

Set to something like 2.0 or 2.5 for more finely sampled maps. Useful for baton-building low resolution maps. 

@end deffn

@node get-text-for-map-sampling-rate-text
@subsection get-text-for-map-sampling-rate-text
@deffn function get-text-for-map-sampling-rate-text

@end deffn

@node get-map-sampling-rate
@subsection get-map-sampling-rate
@deffn function get-map-sampling-rate

return the map sampling rate 

@end deffn

@node set-scrollable-map
@subsection set-scrollable-map
@deffn function set-scrollable-map imol

Where @emph{imol} is an integer number

set the map that has its contour level changed by the scrolling the mouse wheel to molecule number imol 

@end deffn

@node change-contour-level
@subsection change-contour-level
@deffn function change-contour-level is_increment

Where @emph{is_increment} is an integer number

change the contour level of the current map by a step 

if is_increment=1 the contour level is increased. If is_increment=0 the map contour level is decreased. 

@end deffn

@node set-last-map-contour-level
@subsection set-last-map-contour-level
@deffn function set-last-map-contour-level level

Where @emph{level} is a number

set the contour level of the map with the highest molecule number to level 

@end deffn

@node set-last-map-contour-level-by-sigma
@subsection set-last-map-contour-level-by-sigma
@deffn function set-last-map-contour-level-by-sigma n_sigma

Where @emph{n_sigma} is a number

set the contour level of the map with the highest molecule number to n_sigma sigma 

@end deffn

@node set-stop-scroll-diff-map
@subsection set-stop-scroll-diff-map
@deffn function set-stop-scroll-diff-map i

Where @emph{i} is an integer number

create a lower limit to the "2Fo-Fc-style" map contour level changing 

(default 1 on) 

@end deffn

@node set-stop-scroll-iso-map
@subsection set-stop-scroll-iso-map
@deffn function set-stop-scroll-iso-map i

Where @emph{i} is an integer number

create a lower limit to the difference map contour level changing 

(default 1 on) 

@end deffn

@node set-stop-scroll-iso-map-level
@subsection set-stop-scroll-iso-map-level
@deffn function set-stop-scroll-iso-map-level f

Where @emph{f} is a number

set the actual map level changing limit 

(default 0.0) 

@end deffn

@node set-stop-scroll-diff-map-level
@subsection set-stop-scroll-diff-map-level
@deffn function set-stop-scroll-diff-map-level f

Where @emph{f} is a number

set the actual difference map level changing limit 

(default 0.0) 

@end deffn

@node set-residue-density-fit-scale-factor
@subsection set-residue-density-fit-scale-factor
@deffn function set-residue-density-fit-scale-factor f

Where @emph{f} is a number

set the scale factor for the Residue Density fit analysis 

@end deffn

@node Density Functions
@section Density Functions

@menu
* set-map-line-width::
* map-line-width-state::
* make-and-draw-map::
* make-and-draw-map-with-refmac-params::
* make-and-draw-map-with-reso-with-refmac-params::
* valid-labels::
* mtz-file-has-phases-p::
* is-mtz-file-p::
* cns-file-has-phases-p::
* auto-read-make-and-draw-maps::
* set-auto-read-do-difference-map-too::
* auto-read-do-difference-map-too-state::
* set-auto-read-column-labels::
* get-text-for-density-size-widget::
* set-density-size-from-widget::
* set-map-radius::
* set-density-size::
* set-map-radius-slider-max::
* set-display-intro-string::
* get-map-radius::
* set-esoteric-depth-cue::
* esoteric-depth-cue-state::
* set-swap-difference-map-colours::
* swap-difference-map-colours-state::
* set-map-is-difference-map::
* map-is-difference-map::
* another-level::
* another-level-from-map-molecule-number::
* residue-density-fit-scale-factor::
* density-at-point::
@end menu

@node set-map-line-width
@subsection set-map-line-width
@deffn function set-map-line-width w

Where @emph{w} is an integer number

draw the lines of the chickenwire density in width w 

@end deffn

@node map-line-width-state
@subsection map-line-width-state
@deffn function map-line-width-state

return the width in which density contours are drawn 

@end deffn

@node make-and-draw-map
@subsection make-and-draw-map
@deffn function make-and-draw-map mtz_file_name f_col phi_col weight use_weights is_diff_map

Where: 
@itemize @bullet
@item @emph{mtz_file_name} is a string
@item @emph{f_col} is a string
@item @emph{phi_col} is a string
@item @emph{weight} is a string
@item @emph{use_weights} is an integer number
@item @emph{is_diff_map} is an integer number
@end itemize

make a map from an mtz file (simple interface) 

given mtz file mtz_file_name and F column f_col and phases column phi_col and optional weight column weight_col (pass use_weights=0 if weights are not to be used). Also mark the map as a difference map (is_diff_map=1) or not (is_diff_map=0) because they are handled differently inside coot.

Returns: -1 on error, else return the new molecule number 

@end deffn

@node make-and-draw-map-with-refmac-params
@subsection make-and-draw-map-with-refmac-params
@deffn function make-and-draw-map-with-refmac-params mtz_file_name a b weight use_weights is_diff_map have_refmac_params fobs_col sigfobs_col r_free_col sensible_f_free_col

Where: 
@itemize @bullet
@item @emph{mtz_file_name} is a string
@item @emph{a} is a string
@item @emph{b} is a string
@item @emph{weight} is a string
@item @emph{use_weights} is an integer number
@item @emph{is_diff_map} is an integer number
@item @emph{have_refmac_params} is an integer number
@item @emph{fobs_col} is a string
@item @emph{sigfobs_col} is a string
@item @emph{r_free_col} is a string
@item @emph{sensible_f_free_col} is an integer number
@end itemize

as the above function, execpt set refmac parameters too 

pass along the refmac column labels for storage (not used in the creation of the map)

Returns: -1 on error, else return imol 

@end deffn

@node make-and-draw-map-with-reso-with-refmac-params
@subsection make-and-draw-map-with-reso-with-refmac-params
@deffn function make-and-draw-map-with-reso-with-refmac-params mtz_file_name a b weight use_weights is_diff_map have_refmac_params fobs_col sigfobs_col r_free_col sensible_f_free_col is_anomalous use_reso_limits low_reso_limit high_reso_lim

Where: 
@itemize @bullet
@item @emph{mtz_file_name} is a string
@item @emph{a} is a string
@item @emph{b} is a string
@item @emph{weight} is a string
@item @emph{use_weights} is an integer number
@item @emph{is_diff_map} is an integer number
@item @emph{have_refmac_params} is an integer number
@item @emph{fobs_col} is a string
@item @emph{sigfobs_col} is a string
@item @emph{r_free_col} is a string
@item @emph{sensible_f_free_col} is an integer number
@item @emph{is_anomalous} is an integer number
@item @emph{use_reso_limits} is an integer number
@item @emph{low_reso_limit} is a number
@item @emph{high_reso_lim} is a number
@end itemize

as the above function, except set expert options too. 

@end deffn

@node valid-labels
@subsection valid-labels
@deffn function valid-labels mtz_file_name f_col phi_col weight_col use_weights

Where: 
@itemize @bullet
@item @emph{mtz_file_name} is a string
@item @emph{f_col} is a string
@item @emph{phi_col} is a string
@item @emph{weight_col} is a string
@item @emph{use_weights} is an integer number
@end itemize

does the mtz file have the columms that we want it to have? 

@end deffn

@node mtz-file-has-phases-p
@subsection mtz-file-has-phases-p
@deffn function mtz-file-has-phases-p mtz_file_name

Where @emph{mtz_file_name} is a string

@end deffn

@node is-mtz-file-p
@subsection is-mtz-file-p
@deffn function is-mtz-file-p filename

Where @emph{filename} is a string

@end deffn

@node cns-file-has-phases-p
@subsection cns-file-has-phases-p
@deffn function cns-file-has-phases-p cns_file_name

Where @emph{cns_file_name} is a string

@end deffn

@node auto-read-make-and-draw-maps
@subsection auto-read-make-and-draw-maps
@deffn function auto-read-make-and-draw-maps filename

Where @emph{filename} is a string

read MTZ file filename and from it try to make maps 

Useful for reading the output of refmac. The default labels (FWT/PHWT and DELFWT/PHDELFWT) can be changed using ...[something]

Returns: the molecule number for the new map 

@end deffn

@node set-auto-read-do-difference-map-too
@subsection set-auto-read-do-difference-map-too
@deffn function set-auto-read-do-difference-map-too i

Where @emph{i} is an integer number

set the flag to do a difference map (too) on auto-read MTZ 

@end deffn

@node auto-read-do-difference-map-too-state
@subsection auto-read-do-difference-map-too-state
@deffn function auto-read-do-difference-map-too-state

return the flag to do a difference map (too) on auto-read MTZ 

Returns: 0 means no, 1 means yes. 

@end deffn

@node set-auto-read-column-labels
@subsection set-auto-read-column-labels
@deffn function set-auto-read-column-labels fwt phwt is_for_diff_map_flag

Where: 
@itemize @bullet
@item @emph{fwt} is a string
@item @emph{phwt} is a string
@item @emph{is_for_diff_map_flag} is an integer number
@end itemize

set the exected MTZ columns for Auto-reading MTZ file. 

Not every program uses the default refmac labels (FWT/PHWT) for its MTZ file. Here we can tell coot to expect other labels,

e.g. (set-auto-read-column-labels "2FOFCWT" "PH2FOFCWT" 0) 

@end deffn

@node get-text-for-density-size-widget
@subsection get-text-for-density-size-widget
@deffn function get-text-for-density-size-widget

@end deffn

@node set-density-size-from-widget
@subsection set-density-size-from-widget
@deffn function set-density-size-from-widget text

Where @emph{text} is a string

@end deffn

@node set-map-radius
@subsection set-map-radius
@deffn function set-map-radius f

Where @emph{f} is a number

set the extent of the box/radius of electron density contours 

@end deffn

@node set-density-size
@subsection set-density-size
@deffn function set-density-size f

Where @emph{f} is a number

another (old) way of setting the radius of the map 

@end deffn

@node set-map-radius-slider-max
@subsection set-map-radius-slider-max
@deffn function set-map-radius-slider-max f

Where @emph{f} is a number

@end deffn

@node set-display-intro-string
@subsection set-display-intro-string
@deffn function set-display-intro-string str

Where @emph{str} is a string

Give me this nice message str when I start coot. 

@end deffn

@node get-map-radius
@subsection get-map-radius
@deffn function get-map-radius

return the extent of the box/radius of electron density contours 

@end deffn

@node set-esoteric-depth-cue
@subsection set-esoteric-depth-cue
@deffn function set-esoteric-depth-cue istate

Where @emph{istate} is an integer number

not everone likes coot's esoteric depth cueing system 

Pass an argument istate=1 to turn it off

(this function is currently disabled). 

@end deffn

@node esoteric-depth-cue-state
@subsection esoteric-depth-cue-state
@deffn function esoteric-depth-cue-state

native depth cueing system 

return the state of the esoteric depth cueing flag 

@end deffn

@node set-swap-difference-map-colours
@subsection set-swap-difference-map-colours
@deffn function set-swap-difference-map-colours i

Where @emph{i} is an integer number

not everone lies coot's default difference map colouring. 

Pass an argument i=1 to swap the difference map colouring so that red is positve and green is negative. 

@end deffn

@node swap-difference-map-colours-state
@subsection swap-difference-map-colours-state
@deffn function swap-difference-map-colours-state

@end deffn

@node set-map-is-difference-map
@subsection set-map-is-difference-map
@deffn function set-map-is-difference-map imol

Where @emph{imol} is an integer number

post-hoc set the map of molecule number imol to be a difference map 

Returns: success status, 0 -> failure (imol does not have a map) 

@end deffn

@node map-is-difference-map
@subsection map-is-difference-map
@deffn function map-is-difference-map imol

Where @emph{imol} is an integer number

@end deffn

@node another-level
@subsection another-level
@deffn function another-level

Add another contour level for the last added map. 

Currently, the map must have been generated from an MTZ file. 

Returns: the molecule number of the new molecule or -1 on failure 

@end deffn

@node another-level-from-map-molecule-number
@subsection another-level-from-map-molecule-number
@deffn function another-level-from-map-molecule-number imap

Where @emph{imap} is an integer number

Add another contour level for the given map. 

Currently, the map must have been generated from an MTZ file. 

Returns: the molecule number of the new molecule or -1 on failure 

@end deffn

@node residue-density-fit-scale-factor
@subsection residue-density-fit-scale-factor
@deffn function residue-density-fit-scale-factor

return the scale factor for the Residue Density fit analysis 

@end deffn

@node density-at-point
@subsection density-at-point
@deffn function density-at-point imol x y z

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{x} is a number
@item @emph{y} is a number
@item @emph{z} is a number
@end itemize

return the density at the given point for the given map. Return 0 for bad imol 

@end deffn

@node Parameters from map
@section Parameters from map

@menu
* mtz-hklin-for-map::
* mtz-fp-for-map::
* mtz-phi-for-map::
* mtz-weight-for-map::
* mtz-use-weight-for-map::
@end menu

@node mtz-hklin-for-map
@subsection mtz-hklin-for-map
@deffn function mtz-hklin-for-map imol_map

Where @emph{imol_map} is an integer number

return the mtz file that was use to generate the map 

return 0 when there is no mtz file associated with that map (it was generated from a CCP4 map file say). 

@end deffn

@node mtz-fp-for-map
@subsection mtz-fp-for-map
@deffn function mtz-fp-for-map imol_map

Where @emph{imol_map} is an integer number

return the FP column in the file that was use to generate the map 

return 0 when there is no mtz file associated with that map (it was generated from a CCP4 map file say). 

@end deffn

@node mtz-phi-for-map
@subsection mtz-phi-for-map
@deffn function mtz-phi-for-map imol_map

Where @emph{imol_map} is an integer number

return the phases column in mtz file that was use to generate the map 

return 0 when there is no mtz file associated with that map (it was generated from a CCP4 map file say). 

@end deffn

@node mtz-weight-for-map
@subsection mtz-weight-for-map
@deffn function mtz-weight-for-map imol_map

Where @emph{imol_map} is an integer number

return the weight column in the mtz file that was use to generate the map 

return 0 when there is no mtz file associated with that map (it was generated from a CCP4 map file say) or no weights were used. 

@end deffn

@node mtz-use-weight-for-map
@subsection mtz-use-weight-for-map
@deffn function mtz-use-weight-for-map imol_map

Where @emph{imol_map} is an integer number

return flag for whether weights were used that was use to generate the map 

return 0 when no weights were used or there is no mtz file associated with that map. 

@end deffn

@node PDB Functions
@section PDB Functions

@menu
* write-pdb-file::
* write-residue-range-to-pdb-file::
@end menu

@node write-pdb-file
@subsection write-pdb-file
@deffn function write-pdb-file imol file_name

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{file_name} is a string
@end itemize

write molecule number imol as a PDB to file file_name 

@end deffn

@node write-residue-range-to-pdb-file
@subsection write-residue-range-to-pdb-file
@deffn function write-residue-range-to-pdb-file imol chainid resno_start resno_end filename

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chainid} is a string
@item @emph{resno_start} is an integer number
@item @emph{resno_end} is an integer number
@item @emph{filename} is a string
@end itemize

write molecule number imol's residue range as a PDB to file file_name 

@end deffn

@node Refmac Functions
@section Refmac Functions

@menu
* execute-refmac::
* refmac-molecule-button-select::
* set-refmac-molecule::
* fill-option-menu-with-refmac-options::
* fill-option-menu-with-refmac-methods-options::
* fill-option-menu-with-refmac-phase-input-options::
* fill-option-menu-with-refmac-labels-options::
* fill-option-menu-with-refmac-file-labels-options::
* fill-option-menu-with-refmac-ncycle-options::
* update-refmac-column-labels-frame::
* free-memory-run-refmac::
* set-refmac-counter::
* refmac-name::
* get-refmac-refinement-method::
* set-refmac-refinement-method::
* get-refmac-phase-input::
* set-refmac-phase-input::
* set-refmac-use-tls::
* refmac-use-tls-state::
* set-refmac-use-twin::
* refmac-use-twin-state::
* set-refmac-use-sad::
* refmac-use-sad-state::
* get-refmac-ncycles::
* set-refmac-ncycles::
* add-refmac-ncycle-no::
* set-refmac-use-ncs::
* refmac-use-ncs-state::
* set-refmac-use-intensities::
* refmac-use-intensities-state::
* refmac-imol-coords::
* add-refmac-sad-atom::
* add-refmac-sad-atom-fp::
* add-refmac-sad-atom-lambda::
* clear-refmac-sad-atoms::
* store-refmac-mtz-file-label::
* get-refmac-mtz-file-label::
* fill-refmac-sad-atom-entry::
* get-refmac-used-mtz-file-state::
* set-refmac-used-mtz-file::
* get-saved-refmac-file-filename::
* set-stored-refmac-file-mtz-filename::
* save-refmac-params-to-map::
* save-refmac-phase-params-to-map::
* swap-map-colours::
* set-keep-map-colour-after-refmac::
* keep-map-colour-after-refmac-state::
* refmac-runs-with-nolabels::
@end menu

@node execute-refmac
@subsection execute-refmac
@deffn function execute-refmac window

Where @emph{window} is a GtkWidget

@end deffn

@node refmac-molecule-button-select
@subsection refmac-molecule-button-select
@deffn function refmac-molecule-button-select item pos

Where: 
@itemize @bullet
@item @emph{item} is a GtkWidget
@item @emph{pos} is a GtkPositionType
@end itemize

@end deffn

@node set-refmac-molecule
@subsection set-refmac-molecule
@deffn function set-refmac-molecule imol

Where @emph{imol} is an integer number

@end deffn

@node fill-option-menu-with-refmac-options
@subsection fill-option-menu-with-refmac-options
@deffn function fill-option-menu-with-refmac-options optionmenu

Where @emph{optionmenu} is a GtkWidget

@end deffn

@node fill-option-menu-with-refmac-methods-options
@subsection fill-option-menu-with-refmac-methods-options
@deffn function fill-option-menu-with-refmac-methods-options optionmenu

Where @emph{optionmenu} is a GtkWidget

@end deffn

@node fill-option-menu-with-refmac-phase-input-options
@subsection fill-option-menu-with-refmac-phase-input-options
@deffn function fill-option-menu-with-refmac-phase-input-options optionmenu

Where @emph{optionmenu} is a GtkWidget

@end deffn

@node fill-option-menu-with-refmac-labels-options
@subsection fill-option-menu-with-refmac-labels-options
@deffn function fill-option-menu-with-refmac-labels-options optionmenu

Where @emph{optionmenu} is a GtkWidget

@end deffn

@node fill-option-menu-with-refmac-file-labels-options
@subsection fill-option-menu-with-refmac-file-labels-options
@deffn function fill-option-menu-with-refmac-file-labels-options optionmenu

Where @emph{optionmenu} is a GtkWidget

@end deffn

@node fill-option-menu-with-refmac-ncycle-options
@subsection fill-option-menu-with-refmac-ncycle-options
@deffn function fill-option-menu-with-refmac-ncycle-options optionmenu

Where @emph{optionmenu} is a GtkWidget

@end deffn

@node update-refmac-column-labels-frame
@subsection update-refmac-column-labels-frame
@deffn function update-refmac-column-labels-frame optionmenu fobs_menu fiobs_menu fpm_menu f_free_menu phases_menu fom_menu hl_menu

Where: 
@itemize @bullet
@item @emph{optionmenu} is a GtkWidget
@item @emph{fobs_menu} is a GtkWidget
@item @emph{fiobs_menu} is a GtkWidget
@item @emph{fpm_menu} is a GtkWidget
@item @emph{f_free_menu} is a GtkWidget
@item @emph{phases_menu} is a GtkWidget
@item @emph{fom_menu} is a GtkWidget
@item @emph{hl_menu} is a GtkWidget
@end itemize

@end deffn

@node free-memory-run-refmac
@subsection free-memory-run-refmac
@deffn function free-memory-run-refmac window

Where @emph{window} is a GtkWidget

@end deffn

@node set-refmac-counter
@subsection set-refmac-counter
@deffn function set-refmac-counter imol refmac_count

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{refmac_count} is an integer number
@end itemize

set counter for runs of refmac so that this can be used to construct a unique filename for new output 

@end deffn

@node refmac-name
@subsection refmac-name
@deffn function refmac-name imol

Where @emph{imol} is an integer number

the name for refmac 

Returns: a stub name used in the construction of filename for refmac output 

@end deffn

@node get-refmac-refinement-method
@subsection get-refmac-refinement-method
@deffn function get-refmac-refinement-method 

Where @emph{} is a void

@end deffn

@node set-refmac-refinement-method
@subsection set-refmac-refinement-method
@deffn function set-refmac-refinement-method method

Where @emph{method} is an integer number

@end deffn

@node get-refmac-phase-input
@subsection get-refmac-phase-input
@deffn function get-refmac-phase-input 

Where @emph{} is a void

@end deffn

@node set-refmac-phase-input
@subsection set-refmac-phase-input
@deffn function set-refmac-phase-input phase_flag

Where @emph{phase_flag} is an integer number

@end deffn

@node set-refmac-use-tls
@subsection set-refmac-use-tls
@deffn function set-refmac-use-tls state

Where @emph{state} is an integer number

@end deffn

@node refmac-use-tls-state
@subsection refmac-use-tls-state
@deffn function refmac-use-tls-state 

Where @emph{} is a void

@end deffn

@node set-refmac-use-twin
@subsection set-refmac-use-twin
@deffn function set-refmac-use-twin state

Where @emph{state} is an integer number

@end deffn

@node refmac-use-twin-state
@subsection refmac-use-twin-state
@deffn function refmac-use-twin-state 

Where @emph{} is a void

@end deffn

@node set-refmac-use-sad
@subsection set-refmac-use-sad
@deffn function set-refmac-use-sad state

Where @emph{state} is an integer number

@end deffn

@node refmac-use-sad-state
@subsection refmac-use-sad-state
@deffn function refmac-use-sad-state 

Where @emph{} is a void

@end deffn

@node get-refmac-ncycles
@subsection get-refmac-ncycles
@deffn function get-refmac-ncycles 

Where @emph{} is a void

@end deffn

@node set-refmac-ncycles
@subsection set-refmac-ncycles
@deffn function set-refmac-ncycles no_cycles

Where @emph{no_cycles} is an integer number

@end deffn

@node add-refmac-ncycle-no
@subsection add-refmac-ncycle-no
@deffn function add-refmac-ncycle-no cycle

Where @emph{cycle} is an integer number

@end deffn

@node set-refmac-use-ncs
@subsection set-refmac-use-ncs
@deffn function set-refmac-use-ncs state

Where @emph{state} is an integer number

@end deffn

@node refmac-use-ncs-state
@subsection refmac-use-ncs-state
@deffn function refmac-use-ncs-state 

Where @emph{} is a void

@end deffn

@node set-refmac-use-intensities
@subsection set-refmac-use-intensities
@deffn function set-refmac-use-intensities state

Where @emph{state} is an integer number

@end deffn

@node refmac-use-intensities-state
@subsection refmac-use-intensities-state
@deffn function refmac-use-intensities-state 

Where @emph{} is a void

@end deffn

@node refmac-imol-coords
@subsection refmac-imol-coords
@deffn function refmac-imol-coords 

Where @emph{} is a void

@end deffn

@node add-refmac-sad-atom
@subsection add-refmac-sad-atom
@deffn function add-refmac-sad-atom atom_name fp fpp lambda

Where: 
@itemize @bullet
@item @emph{atom_name} is a string
@item @emph{fp} is a number
@item @emph{fpp} is a number
@item @emph{lambda} is a number
@end itemize

@end deffn

@node add-refmac-sad-atom-fp
@subsection add-refmac-sad-atom-fp
@deffn function add-refmac-sad-atom-fp atom_name fp fpp

Where: 
@itemize @bullet
@item @emph{atom_name} is a string
@item @emph{fp} is a number
@item @emph{fpp} is a number
@end itemize

@end deffn

@node add-refmac-sad-atom-lambda
@subsection add-refmac-sad-atom-lambda
@deffn function add-refmac-sad-atom-lambda atom_name lambda

Where: 
@itemize @bullet
@item @emph{atom_name} is a string
@item @emph{lambda} is a number
@end itemize

@end deffn

@node clear-refmac-sad-atoms
@subsection clear-refmac-sad-atoms
@deffn function clear-refmac-sad-atoms

@end deffn

@node store-refmac-mtz-file-label
@subsection store-refmac-mtz-file-label
@deffn function store-refmac-mtz-file-label label

Where @emph{label} is a GtkWidget

@end deffn

@node get-refmac-mtz-file-label
@subsection get-refmac-mtz-file-label
@deffn function get-refmac-mtz-file-label 

Where @emph{} is a void

@end deffn

@node fill-refmac-sad-atom-entry
@subsection fill-refmac-sad-atom-entry
@deffn function fill-refmac-sad-atom-entry widget

Where @emph{widget} is a GtkWidget

@end deffn

@node get-refmac-used-mtz-file-state
@subsection get-refmac-used-mtz-file-state
@deffn function get-refmac-used-mtz-file-state

@end deffn

@node set-refmac-used-mtz-file
@subsection set-refmac-used-mtz-file
@deffn function set-refmac-used-mtz-file state

Where @emph{state} is an integer number

@end deffn

@node get-saved-refmac-file-filename
@subsection get-saved-refmac-file-filename
@deffn function get-saved-refmac-file-filename 

Where @emph{} is a void

@end deffn

@node set-stored-refmac-file-mtz-filename
@subsection set-stored-refmac-file-mtz-filename
@deffn function set-stored-refmac-file-mtz-filename imol mtz_filename

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{mtz_filename} is a string
@end itemize

@end deffn

@node save-refmac-params-to-map
@subsection save-refmac-params-to-map
@deffn function save-refmac-params-to-map imol_map mtz_filename fobs_col sigfobs_col r_free_col r_free_flag_sensible

Where: 
@itemize @bullet
@item @emph{imol_map} is an integer number
@item @emph{mtz_filename} is a string
@item @emph{fobs_col} is a string
@item @emph{sigfobs_col} is a string
@item @emph{r_free_col} is a string
@item @emph{r_free_flag_sensible} is an integer number
@end itemize

@end deffn

@node save-refmac-phase-params-to-map
@subsection save-refmac-phase-params-to-map
@deffn function save-refmac-phase-params-to-map imol_map phi fom hla hlb hlc hld

Where: 
@itemize @bullet
@item @emph{imol_map} is an integer number
@item @emph{phi} is a string
@item @emph{fom} is a string
@item @emph{hla} is a string
@item @emph{hlb} is a string
@item @emph{hlc} is a string
@item @emph{hld} is a string
@end itemize

@end deffn

@node swap-map-colours
@subsection swap-map-colours
@deffn function swap-map-colours imol1 imol2

Where: 
@itemize @bullet
@item @emph{imol1} is an integer number
@item @emph{imol2} is an integer number
@end itemize

swap the colours of maps 

swap the colour of maps imol1 and imol2. Useful to some after running refmac, so that the map to be build into is always the same colour 

@end deffn

@node set-keep-map-colour-after-refmac
@subsection set-keep-map-colour-after-refmac
@deffn function set-keep-map-colour-after-refmac istate

Where @emph{istate} is an integer number

flag to enable above 

call this with istate=1 

@end deffn

@node keep-map-colour-after-refmac-state
@subsection keep-map-colour-after-refmac-state
@deffn function keep-map-colour-after-refmac-state

the keep-map-colour-after-refmac internal state 

Returns: 1 for "yes", 0 for "no" 

@end deffn

@node refmac-runs-with-nolabels
@subsection refmac-runs-with-nolabels
@deffn function refmac-runs-with-nolabels 

Where @emph{} is a void

@end deffn

@node Symmetry Functions
@section Symmetry Functions

@menu
* get-text-for-symmetry-size-widget::
* set-symmetry-size-from-widget::
* set-symmetry-size::
* get-symmetry-bonds-colour::
* get-show-symmetry::
* set-show-symmetry-master::
* set-show-symmetry-molecule::
* symmetry-as-calphas::
* get-symmetry-as-calphas-state::
* set-symmetry-molecule-rotate-colour-map::
* symmetry-molecule-rotate-colour-map-state::
* set-symmetry-colour-by-symop::
* set-symmetry-whole-chain::
* set-symmetry-atom-labels-expanded::
* wrapped-create-show-symmetry-window::
* symmetry-colour-adjustment-changed::
* symmetry-molecule-controller-dialog::
* has-unit-cell-state::
* save-symmetry-coords::
* new-molecule-by-symmetry::
* setup-save-symmetry-coords::
* save-symmetry-coords-from-fileselection::
* set-space-group::
* set-symmetry-shift-search-size::
@end menu

@node get-text-for-symmetry-size-widget
@subsection get-text-for-symmetry-size-widget
@deffn function get-text-for-symmetry-size-widget

@end deffn

@node set-symmetry-size-from-widget
@subsection set-symmetry-size-from-widget
@deffn function set-symmetry-size-from-widget text

Where @emph{text} is a string

@end deffn

@node set-symmetry-size
@subsection set-symmetry-size
@deffn function set-symmetry-size f

Where @emph{f} is a number

set the size of the displayed symmetry 

@end deffn

@node get-symmetry-bonds-colour
@subsection get-symmetry-bonds-colour
@deffn function get-symmetry-bonds-colour imol

Where @emph{imol} is an integer number

@end deffn

@node get-show-symmetry
@subsection get-show-symmetry
@deffn function get-show-symmetry

is symmetry master display control on? 

@end deffn

@node set-show-symmetry-master
@subsection set-show-symmetry-master
@deffn function set-show-symmetry-master state

Where @emph{state} is an integer number

set display symmetry, master controller 

@end deffn

@node set-show-symmetry-molecule
@subsection set-show-symmetry-molecule
@deffn function set-show-symmetry-molecule mol_no state

Where: 
@itemize @bullet
@item @emph{mol_no} is an integer number
@item @emph{state} is an integer number
@end itemize

set display symmetry for molecule number mol_no 

pass with state=0 for off, state=1 for on 

@end deffn

@node symmetry-as-calphas
@subsection symmetry-as-calphas
@deffn function symmetry-as-calphas mol_no state

Where: 
@itemize @bullet
@item @emph{mol_no} is an integer number
@item @emph{state} is an integer number
@end itemize

display symmetry as CAs? 

pass with state=0 for off, state=1 for on 

@end deffn

@node get-symmetry-as-calphas-state
@subsection get-symmetry-as-calphas-state
@deffn function get-symmetry-as-calphas-state imol

Where @emph{imol} is an integer number

what is state of display CAs for molecule number mol_no? 

return state=0 for off, state=1 for on 

@end deffn

@node set-symmetry-molecule-rotate-colour-map
@subsection set-symmetry-molecule-rotate-colour-map
@deffn function set-symmetry-molecule-rotate-colour-map imol state

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{state} is an integer number
@end itemize

set the colour map rotation (i.e. the hue) for the symmetry atoms of molecule number imol 

@end deffn

@node symmetry-molecule-rotate-colour-map-state
@subsection symmetry-molecule-rotate-colour-map-state
@deffn function symmetry-molecule-rotate-colour-map-state imol

Where @emph{imol} is an integer number

should there be colour map rotation (i.e. the hue) change for the symmetry atoms of molecule number imol? 

return state=0 for off, state=1 for on 

@end deffn

@node set-symmetry-colour-by-symop
@subsection set-symmetry-colour-by-symop
@deffn function set-symmetry-colour-by-symop imol state

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{state} is an integer number
@end itemize

@end deffn

@node set-symmetry-whole-chain
@subsection set-symmetry-whole-chain
@deffn function set-symmetry-whole-chain imol state

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{state} is an integer number
@end itemize

@end deffn

@node set-symmetry-atom-labels-expanded
@subsection set-symmetry-atom-labels-expanded
@deffn function set-symmetry-atom-labels-expanded state

Where @emph{state} is an integer number

@end deffn

@node wrapped-create-show-symmetry-window
@subsection wrapped-create-show-symmetry-window
@deffn function wrapped-create-show-symmetry-window

@end deffn

@node symmetry-colour-adjustment-changed
@subsection symmetry-colour-adjustment-changed
@deffn function symmetry-colour-adjustment-changed adj window

Where: 
@itemize @bullet
@item @emph{adj} is a GtkAdjustment
@item @emph{window} is a GtkWidget
@end itemize

@end deffn

@node symmetry-molecule-controller-dialog
@subsection symmetry-molecule-controller-dialog
@deffn function symmetry-molecule-controller-dialog

@end deffn

@node has-unit-cell-state
@subsection has-unit-cell-state
@deffn function has-unit-cell-state imol

Where @emph{imol} is an integer number

molecule number imol has a unit cell? 

Returns: 1 on "yes, it has a cell", 0 for "no" 

@end deffn

@node save-symmetry-coords
@subsection save-symmetry-coords
@deffn function save-symmetry-coords imol filename symop_no shift_a shift_b shift_c pre_shift_to_origin_na pre_shift_to_origin_nb pre_shift_to_origin_nc

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{filename} is a string
@item @emph{symop_no} is an integer number
@item @emph{shift_a} is an integer number
@item @emph{shift_b} is an integer number
@item @emph{shift_c} is an integer number
@item @emph{pre_shift_to_origin_na} is an integer number
@item @emph{pre_shift_to_origin_nb} is an integer number
@item @emph{pre_shift_to_origin_nc} is an integer number
@end itemize

save the symmetry coordinates of molecule number imol to filename 

Allow a shift of the coordinates to the origin before symmetry expansion is apllied (this is how symmetry works in Coot internals). 

@end deffn

@node new-molecule-by-symmetry
@subsection new-molecule-by-symmetry
@deffn function new-molecule-by-symmetry imol m11 m12 m13 m21 m22 m23 m31 m32 m33 tx ty tz pre_shift_to_origin_na pre_shift_to_origin_nb pre_shift_to_origin_nc

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{m11} is a number
@item @emph{m12} is a number
@item @emph{m13} is a number
@item @emph{m21} is a number
@item @emph{m22} is a number
@item @emph{m23} is a number
@item @emph{m31} is a number
@item @emph{m32} is a number
@item @emph{m33} is a number
@item @emph{tx} is a number
@item @emph{ty} is a number
@item @emph{tz} is a number
@item @emph{pre_shift_to_origin_na} is an integer number
@item @emph{pre_shift_to_origin_nb} is an integer number
@item @emph{pre_shift_to_origin_nc} is an integer number
@end itemize

create a new molecule (molecule number is the return value) from imol. 

The rotation/translation matrix components are given in *fractional* coordinates.

Allow a shift of the coordinates to the origin before symmetry expansion is aplied.

Return -1 on failure. 

@end deffn

@node setup-save-symmetry-coords
@subsection setup-save-symmetry-coords
@deffn function setup-save-symmetry-coords

@end deffn

@node save-symmetry-coords-from-fileselection
@subsection save-symmetry-coords-from-fileselection
@deffn function save-symmetry-coords-from-fileselection fileselection

Where @emph{fileselection} is a GtkWidget

@end deffn

@node set-space-group
@subsection set-space-group
@deffn function set-space-group imol spg

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{spg} is a string
@end itemize

set the space group for a coordinates molecule 

for shelx FA pdb files, there is no space group. So allow the user to set it. This can be initted with a HM symbol or a symm list for clipper 

@end deffn

@node set-symmetry-shift-search-size
@subsection set-symmetry-shift-search-size
@deffn function set-symmetry-shift-search-size shift

Where @emph{shift} is an integer number

set the cell shift search size for symmetry searching. 

When the coordinates for one (or some) symmetry operator are missing (which happens sometimes, but rarely), try changing setting this to 2 (default is 1). It slows symmetry searching, which is why it is not set to 2 by default. 

@end deffn

@node File Selection Functions
@section File Selection Functions

@menu
* set-directory-for-fileselection::
* save-directory-from-fileselection::
* save-directory-for-saving-from-fileselection::
* set-file-for-save-fileselection::
* add-sort-button-fileselection::
* add-ccp4i-project-optionmenu::
* add-ccp4i-projects-to-optionmenu::
* add-ccp4i-project-shortcut::
* option-menu-refmac-ccp4i-project-signal-func::
* run-refmac-ccp4i-option-menu-signal-func::
* clear-refmac-ccp4i-project::
* lookup-file-selection-widgets::
* fileselection-sort-button-clicked-gtk1::
* push-the-buttons-on-fileselection::
@end menu

@node set-directory-for-fileselection
@subsection set-directory-for-fileselection
@deffn function set-directory-for-fileselection coords_fileselection1

Where @emph{coords_fileselection1} is a GtkWidget

@end deffn

@node save-directory-from-fileselection
@subsection save-directory-from-fileselection
@deffn function save-directory-from-fileselection fileselection

Where @emph{fileselection} is a const GtkWidget

@end deffn

@node save-directory-for-saving-from-fileselection
@subsection save-directory-for-saving-from-fileselection
@deffn function save-directory-for-saving-from-fileselection fileselection

Where @emph{fileselection} is a const GtkWidget

@end deffn

@node set-file-for-save-fileselection
@subsection set-file-for-save-fileselection
@deffn function set-file-for-save-fileselection fileselection

Where @emph{fileselection} is a GtkWidget

@end deffn

@node add-sort-button-fileselection
@subsection add-sort-button-fileselection
@deffn function add-sort-button-fileselection fileselection

Where @emph{fileselection} is a GtkWidget

@end deffn

@node add-ccp4i-project-optionmenu
@subsection add-ccp4i-project-optionmenu
@deffn function add-ccp4i-project-optionmenu fileselection file_selector_type

Where: 
@itemize @bullet
@item @emph{fileselection} is a GtkWidget
@item @emph{file_selector_type} is an integer number
@end itemize

@end deffn

@node add-ccp4i-projects-to-optionmenu
@subsection add-ccp4i-projects-to-optionmenu
@deffn function add-ccp4i-projects-to-optionmenu optionmenu file_selector_type func

Where: 
@itemize @bullet
@item @emph{optionmenu} is a GtkWidget
@item @emph{file_selector_type} is an integer number
@item @emph{func} is a GtkSignalFunc
@end itemize

@end deffn

@node add-ccp4i-project-shortcut
@subsection add-ccp4i-project-shortcut
@deffn function add-ccp4i-project-shortcut fileselection

Where @emph{fileselection} is a GtkWidget

@end deffn

@node option-menu-refmac-ccp4i-project-signal-func
@subsection option-menu-refmac-ccp4i-project-signal-func
@deffn function option-menu-refmac-ccp4i-project-signal-func item pos

Where: 
@itemize @bullet
@item @emph{item} is a GtkWidget
@item @emph{pos} is a GtkPositionType
@end itemize

@end deffn

@node run-refmac-ccp4i-option-menu-signal-func
@subsection run-refmac-ccp4i-option-menu-signal-func
@deffn function run-refmac-ccp4i-option-menu-signal-func item pos

Where: 
@itemize @bullet
@item @emph{item} is a GtkWidget
@item @emph{pos} is a GtkPositionType
@end itemize

@end deffn

@node clear-refmac-ccp4i-project
@subsection clear-refmac-ccp4i-project
@deffn function clear-refmac-ccp4i-project

@end deffn

@node lookup-file-selection-widgets
@subsection lookup-file-selection-widgets
@deffn function lookup-file-selection-widgets item file_selector_type

Where: 
@itemize @bullet
@item @emph{item} is a GtkWidget
@item @emph{file_selector_type} is an integer number
@end itemize

@end deffn

@node fileselection-sort-button-clicked-gtk1
@subsection fileselection-sort-button-clicked-gtk1
@deffn function fileselection-sort-button-clicked-gtk1 sort_button file_list

Where: 
@itemize @bullet
@item @emph{sort_button} is a GtkWidget
@item @emph{file_list} is a GtkCList
@end itemize

@end deffn

@node push-the-buttons-on-fileselection
@subsection push-the-buttons-on-fileselection
@deffn function push-the-buttons-on-fileselection filter_button sort_button fileselection

Where: 
@itemize @bullet
@item @emph{filter_button} is a GtkWidget
@item @emph{sort_button} is a GtkWidget
@item @emph{fileselection} is a GtkWidget
@end itemize

@end deffn

@node History Functions
@section History Functions

@menu
* print-all-history-in-scheme::
* print-all-history-in-python::
* set-console-display-commands-state::
* set-console-display-commands-hilights::
@end menu

@node print-all-history-in-scheme
@subsection print-all-history-in-scheme
@deffn function print-all-history-in-scheme

print the history in scheme format 

@end deffn

@node print-all-history-in-python
@subsection print-all-history-in-python
@deffn function print-all-history-in-python

print the history in python format 

@end deffn

@node set-console-display-commands-state
@subsection set-console-display-commands-state
@deffn function set-console-display-commands-state istate

Where @emph{istate} is an integer number

set a flag to show the text command equivalent of gui commands in the console as they happen. 

1 for on, 0 for off. 

@end deffn

@node set-console-display-commands-hilights
@subsection set-console-display-commands-hilights
@deffn function set-console-display-commands-hilights bold_flag colour_flag colour_index

Where: 
@itemize @bullet
@item @emph{bold_flag} is an integer number
@item @emph{colour_flag} is an integer number
@item @emph{colour_index} is an integer number
@end itemize

@end deffn

@node State Functions
@section State Functions

@menu
* save-state::
* save-state-file::
* set-save-state-file-name::
* save-state-file-name-raw::
* set-run-state-file-status::
* run-state-file::
* run-state-file-maybe::
* wrapped-create-run-state-file-dialog::
@end menu

@node save-state
@subsection save-state
@deffn function save-state

save the current state to the default filename 

@end deffn

@node save-state-file
@subsection save-state-file
@deffn function save-state-file filename

Where @emph{filename} is a string

save the current state to file filename 

@end deffn

@node set-save-state-file-name
@subsection set-save-state-file-name
@deffn function set-save-state-file-name filename

Where @emph{filename} is a string

set the default state file name (default 0-coot.state.scm) 

@end deffn

@node save-state-file-name-raw
@subsection save-state-file-name-raw
@deffn function save-state-file-name-raw

@end deffn

@node set-run-state-file-status
@subsection set-run-state-file-status
@deffn function set-run-state-file-status istat

Where @emph{istat} is an integer number

set run state file status 

0: never run it 1: ask to run it 2: run it, no questions 

@end deffn

@node run-state-file
@subsection run-state-file
@deffn function run-state-file

run the state file (reading from default filenname) 

@end deffn

@node run-state-file-maybe
@subsection run-state-file-maybe
@deffn function run-state-file-maybe

run the state file depending on the state variables 

@end deffn

@node wrapped-create-run-state-file-dialog
@subsection wrapped-create-run-state-file-dialog
@deffn function wrapped-create-run-state-file-dialog

@end deffn

@node Clipping Functions
@section Clipping Functions

@menu
* do-clipping1-activate::
* clipping-adjustment-changed::
* set-clipping-back::
* set-clipping-front::
@end menu

@node do-clipping1-activate
@subsection do-clipping1-activate
@deffn function do-clipping1-activate

@end deffn

@node clipping-adjustment-changed
@subsection clipping-adjustment-changed
@deffn function clipping-adjustment-changed adj window

Where: 
@itemize @bullet
@item @emph{adj} is a GtkAdjustment
@item @emph{window} is a GtkWidget
@end itemize

@end deffn

@node set-clipping-back
@subsection set-clipping-back
@deffn function set-clipping-back v

Where @emph{v} is a number

@end deffn

@node set-clipping-front
@subsection set-clipping-front
@deffn function set-clipping-front v

Where @emph{v} is a number

@end deffn

@node Unit Cell interface
@section Unit Cell interface

@menu
* get-show-unit-cell::
* set-show-unit-cells-all::
* set-show-unit-cell::
* set-unit-cell-colour::
@end menu

@node get-show-unit-cell
@subsection get-show-unit-cell
@deffn function get-show-unit-cell imol

Where @emph{imol} is an integer number

return the stage of show unit cell for molecule number imol 

@end deffn

@node set-show-unit-cells-all
@subsection set-show-unit-cells-all
@deffn function set-show-unit-cells-all istate

Where @emph{istate} is an integer number

set the state of show unit cell for all molecules 

1 for displayed 0 for undisplayed 

@end deffn

@node set-show-unit-cell
@subsection set-show-unit-cell
@deffn function set-show-unit-cell imol istate

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{istate} is an integer number
@end itemize

set the state of show unit cell for the particular molecule number imol 

1 for displayed 0 for undisplayed 

@end deffn

@node set-unit-cell-colour
@subsection set-unit-cell-colour
@deffn function set-unit-cell-colour red green blue

Where: 
@itemize @bullet
@item @emph{red} is a number
@item @emph{green} is a number
@item @emph{blue} is a number
@end itemize

@end deffn

@node Colour
@section Colour

@menu
* set-symmetry-colour-merge::
* set-colour-map-rotation-on-read-pdb::
* set-colour-map-rotation-on-read-pdb-flag::
* set-colour-map-rotation-on-read-pdb-c-only-flag::
* set-colour-by-chain::
* set-colour-by-molecule::
* get-colour-map-rotation-on-read-pdb-c-only-flag::
* set-symmetry-colour::
@end menu

@node set-symmetry-colour-merge
@subsection set-symmetry-colour-merge
@deffn function set-symmetry-colour-merge v

Where @emph{v} is a number

@end deffn

@node set-colour-map-rotation-on-read-pdb
@subsection set-colour-map-rotation-on-read-pdb
@deffn function set-colour-map-rotation-on-read-pdb f

Where @emph{f} is a number

set the hue change step on reading a new molecule 

@end deffn

@node set-colour-map-rotation-on-read-pdb-flag
@subsection set-colour-map-rotation-on-read-pdb-flag
@deffn function set-colour-map-rotation-on-read-pdb-flag i

Where @emph{i} is an integer number

shall the hue change step be used? 

@end deffn

@node set-colour-map-rotation-on-read-pdb-c-only-flag
@subsection set-colour-map-rotation-on-read-pdb-c-only-flag
@deffn function set-colour-map-rotation-on-read-pdb-c-only-flag i

Where @emph{i} is an integer number

shall the colour map rotation apply only to C atoms? 

@end deffn

@node set-colour-by-chain
@subsection set-colour-by-chain
@deffn function set-colour-by-chain imol

Where @emph{imol} is an integer number

colour molecule number imol by chain type 

@end deffn

@node set-colour-by-molecule
@subsection set-colour-by-molecule
@deffn function set-colour-by-molecule imol

Where @emph{imol} is an integer number

colour molecule number imol by molecule 

@end deffn

@node get-colour-map-rotation-on-read-pdb-c-only-flag
@subsection get-colour-map-rotation-on-read-pdb-c-only-flag
@deffn function get-colour-map-rotation-on-read-pdb-c-only-flag

@end deffn

@node set-symmetry-colour
@subsection set-symmetry-colour
@deffn function set-symmetry-colour r g b

Where: 
@itemize @bullet
@item @emph{r} is a number
@item @emph{g} is a number
@item @emph{b} is a number
@end itemize

set the symmetry colour base 

@end deffn

@node Map colour
@section Map colour

@menu
* set-colour-map-rotation-for-map::
* wrapped-create-coords-colour-control-dialog::
* set-molecule-bonds-colour-map-rotation::
* get-molecule-bonds-colour-map-rotation::
@end menu

@node set-colour-map-rotation-for-map
@subsection set-colour-map-rotation-for-map
@deffn function set-colour-map-rotation-for-map f

Where @emph{f} is a number

set the colour map rotation (hue change) for maps 

default: for maps is 14 degrees. 

@end deffn

@node wrapped-create-coords-colour-control-dialog
@subsection wrapped-create-coords-colour-control-dialog
@deffn function wrapped-create-coords-colour-control-dialog

@end deffn

@node set-molecule-bonds-colour-map-rotation
@subsection set-molecule-bonds-colour-map-rotation
@deffn function set-molecule-bonds-colour-map-rotation imol theta

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{theta} is a number
@end itemize

set the colour map rotation for molecule number imol 

theta is in degrees 

@end deffn

@node get-molecule-bonds-colour-map-rotation
@subsection get-molecule-bonds-colour-map-rotation
@deffn function get-molecule-bonds-colour-map-rotation imol

Where @emph{imol} is an integer number

Get the colour map rotation for molecule number imol. 

@end deffn

@node Anisotropic Atoms Interface
@section Anisotropic Atoms Interface

@menu
* get-limit-aniso::
* get-show-limit-aniso::
* get-show-aniso::
* set-limit-aniso::
* set-aniso-limit-size-from-widget::
* set-show-aniso::
* get-text-for-aniso-limit-radius-entry::
* set-aniso-probability::
* get-aniso-probability::
@end menu

@node get-limit-aniso
@subsection get-limit-aniso
@deffn function get-limit-aniso

@end deffn

@node get-show-limit-aniso
@subsection get-show-limit-aniso
@deffn function get-show-limit-aniso

@end deffn

@node get-show-aniso
@subsection get-show-aniso
@deffn function get-show-aniso

@end deffn

@node set-limit-aniso
@subsection set-limit-aniso
@deffn function set-limit-aniso state

Where @emph{state} is an integer number

@end deffn

@node set-aniso-limit-size-from-widget
@subsection set-aniso-limit-size-from-widget
@deffn function set-aniso-limit-size-from-widget text

Where @emph{text} is a string

@end deffn

@node set-show-aniso
@subsection set-show-aniso
@deffn function set-show-aniso state

Where @emph{state} is an integer number

@end deffn

@node get-text-for-aniso-limit-radius-entry
@subsection get-text-for-aniso-limit-radius-entry
@deffn function get-text-for-aniso-limit-radius-entry

@end deffn

@node set-aniso-probability
@subsection set-aniso-probability
@deffn function set-aniso-probability f

Where @emph{f} is a number

@end deffn

@node get-aniso-probability
@subsection get-aniso-probability
@deffn function get-aniso-probability

@end deffn

@node Display Functions
@section Display Functions

@menu
* set-graphics-window-size::
* set-graphics-window-position::
* store-graphics-window-position::
* store-window-position::
* store-window-size::
* graphics-draw::
* hardware-stereo-mode::
* stereo-mode-state::
* mono-mode::
* side-by-side-stereo-mode::
* set-hardware-stereo-angle-factor::
* hardware-stereo-angle-factor-state::
* set-model-fit-refine-dialog-position::
* set-display-control-dialog-position::
* set-go-to-atom-window-position::
* set-delete-dialog-position::
* set-rotate-translate-dialog-position::
* set-accept-reject-dialog-position::
* set-ramachandran-plot-dialog-position::
@end menu

@node set-graphics-window-size
@subsection set-graphics-window-size
@deffn function set-graphics-window-size x_size y_size

Where: 
@itemize @bullet
@item @emph{x_size} is an integer number
@item @emph{y_size} is an integer number
@end itemize

set the window size 

@end deffn

@node set-graphics-window-position
@subsection set-graphics-window-position
@deffn function set-graphics-window-position x_pos y_pos

Where: 
@itemize @bullet
@item @emph{x_pos} is an integer number
@item @emph{y_pos} is an integer number
@end itemize

set the window position 

@end deffn

@node store-graphics-window-position
@subsection store-graphics-window-position
@deffn function store-graphics-window-position x_pos y_pos

Where: 
@itemize @bullet
@item @emph{x_pos} is an integer number
@item @emph{y_pos} is an integer number
@end itemize

@end deffn

@node store-window-position
@subsection store-window-position
@deffn function store-window-position window_type w

Where: 
@itemize @bullet
@item @emph{window_type} is an integer number
@item @emph{w} is a GtkWidget
@end itemize

@end deffn

@node store-window-size
@subsection store-window-size
@deffn function store-window-size window_type w

Where: 
@itemize @bullet
@item @emph{window_type} is an integer number
@item @emph{w} is a GtkWidget
@end itemize

@end deffn

@node graphics-draw
@subsection graphics-draw
@deffn function graphics-draw

draw a frame 

@end deffn

@node hardware-stereo-mode
@subsection hardware-stereo-mode
@deffn function hardware-stereo-mode

try to turn on stereo mode 

@end deffn

@node stereo-mode-state
@subsection stereo-mode-state
@deffn function stereo-mode-state

what is the stero state? 

Returns: 1 for in hardware stereo, 2 for side by side stereo, else return 0. 

@end deffn

@node mono-mode
@subsection mono-mode
@deffn function mono-mode

try to turn on mono mode 

@end deffn

@node side-by-side-stereo-mode
@subsection side-by-side-stereo-mode
@deffn function side-by-side-stereo-mode use_wall_eye_mode

Where @emph{use_wall_eye_mode} is an integer number

turn on side bye side stereo mode 

@end deffn

@node set-hardware-stereo-angle-factor
@subsection set-hardware-stereo-angle-factor
@deffn function set-hardware-stereo-angle-factor f

Where @emph{f} is a number

how much should the eyes be separated in stereo mode? 

@end deffn

@node hardware-stereo-angle-factor-state
@subsection hardware-stereo-angle-factor-state
@deffn function hardware-stereo-angle-factor-state

return the hardware stereo angle factor 

@end deffn

@node set-model-fit-refine-dialog-position
@subsection set-model-fit-refine-dialog-position
@deffn function set-model-fit-refine-dialog-position x_pos y_pos

Where: 
@itemize @bullet
@item @emph{x_pos} is an integer number
@item @emph{y_pos} is an integer number
@end itemize

set position of Model/Fit/Refine dialog 

@end deffn

@node set-display-control-dialog-position
@subsection set-display-control-dialog-position
@deffn function set-display-control-dialog-position x_pos y_pos

Where: 
@itemize @bullet
@item @emph{x_pos} is an integer number
@item @emph{y_pos} is an integer number
@end itemize

set position of Display Control dialog 

@end deffn

@node set-go-to-atom-window-position
@subsection set-go-to-atom-window-position
@deffn function set-go-to-atom-window-position x_pos y_pos

Where: 
@itemize @bullet
@item @emph{x_pos} is an integer number
@item @emph{y_pos} is an integer number
@end itemize

set position of Go To Atom dialog 

@end deffn

@node set-delete-dialog-position
@subsection set-delete-dialog-position
@deffn function set-delete-dialog-position x_pos y_pos

Where: 
@itemize @bullet
@item @emph{x_pos} is an integer number
@item @emph{y_pos} is an integer number
@end itemize

set position of Delete dialog 

@end deffn

@node set-rotate-translate-dialog-position
@subsection set-rotate-translate-dialog-position
@deffn function set-rotate-translate-dialog-position x_pos y_pos

Where: 
@itemize @bullet
@item @emph{x_pos} is an integer number
@item @emph{y_pos} is an integer number
@end itemize

set position of the Rotate/Translate Residue Range dialog 

@end deffn

@node set-accept-reject-dialog-position
@subsection set-accept-reject-dialog-position
@deffn function set-accept-reject-dialog-position x_pos y_pos

Where: 
@itemize @bullet
@item @emph{x_pos} is an integer number
@item @emph{y_pos} is an integer number
@end itemize

set position of the Accept/Reject dialog 

@end deffn

@node set-ramachandran-plot-dialog-position
@subsection set-ramachandran-plot-dialog-position
@deffn function set-ramachandran-plot-dialog-position x_pos y_pos

Where: 
@itemize @bullet
@item @emph{x_pos} is an integer number
@item @emph{y_pos} is an integer number
@end itemize

set position of the Ramachadran Plot dialog 

@end deffn

@node Smooth Scrolling
@section Smooth Scrolling

@menu
* set-smooth-scroll-flag::
* get-smooth-scroll::
* set-smooth-scroll-steps-str::
* set-smooth-scroll-steps::
* get-text-for-smooth-scroll-steps::
* set-smooth-scroll-limit-str::
* set-smooth-scroll-limit::
* get-text-for-smooth-scroll-limit::
@end menu

@node set-smooth-scroll-flag
@subsection set-smooth-scroll-flag
@deffn function set-smooth-scroll-flag v

Where @emph{v} is an integer number

set smooth scrolling 

@end deffn

@node get-smooth-scroll
@subsection get-smooth-scroll
@deffn function get-smooth-scroll

return the smooth scrolling state 

@end deffn

@node set-smooth-scroll-steps-str
@subsection set-smooth-scroll-steps-str
@deffn function set-smooth-scroll-steps-str t

Where @emph{t} is a string

@end deffn

@node set-smooth-scroll-steps
@subsection set-smooth-scroll-steps
@deffn function set-smooth-scroll-steps i

Where @emph{i} is an integer number

set the number of steps in the smooth scroll 

Set more steps (e.g. 50) for more smoothness (default 10). 

@end deffn

@node get-text-for-smooth-scroll-steps
@subsection get-text-for-smooth-scroll-steps
@deffn function get-text-for-smooth-scroll-steps

@end deffn

@node set-smooth-scroll-limit-str
@subsection set-smooth-scroll-limit-str
@deffn function set-smooth-scroll-limit-str t

Where @emph{t} is a string

@end deffn

@node set-smooth-scroll-limit
@subsection set-smooth-scroll-limit
@deffn function set-smooth-scroll-limit lim

Where @emph{lim} is a number

do not scroll for distances greater this limit 

@end deffn

@node get-text-for-smooth-scroll-limit
@subsection get-text-for-smooth-scroll-limit
@deffn function get-text-for-smooth-scroll-limit

@end deffn

@node Font Size
@section Font Size

@menu
* set-font-size::
* get-font-size::
* set-font-colour::
@end menu

@node set-font-size
@subsection set-font-size
@deffn function set-font-size i

Where @emph{i} is an integer number

set the font size 

@end deffn

@node get-font-size
@subsection get-font-size
@deffn function get-font-size

return the font size 

Returns: 1 (small) 2 (medium, default) 3 (large) 

@end deffn

@node set-font-colour
@subsection set-font-colour
@deffn function set-font-colour red green blue

Where: 
@itemize @bullet
@item @emph{red} is a number
@item @emph{green} is a number
@item @emph{blue} is a number
@end itemize

set the colour of the atom label font - the arguments are in the range 0->1 

@end deffn

@node Rotation Centre
@section Rotation Centre

@menu
* set-rotation-centre-size-from-widget::
* set-rotation-centre-size::
* get-text-for-rotation-centre-cube-size::
* recentre-on-read-pdb::
* set-recentre-on-read-pdb::
* set-rotation-centre::
* set-rotation-centre-internal::
* rotation-centre-position::
@end menu

@node set-rotation-centre-size-from-widget
@subsection set-rotation-centre-size-from-widget
@deffn function set-rotation-centre-size-from-widget text

Where @emph{text} is a string

@end deffn

@node set-rotation-centre-size
@subsection set-rotation-centre-size
@deffn function set-rotation-centre-size f

Where @emph{f} is a number

@end deffn

@node get-text-for-rotation-centre-cube-size
@subsection get-text-for-rotation-centre-cube-size
@deffn function get-text-for-rotation-centre-cube-size

@end deffn

@node recentre-on-read-pdb
@subsection recentre-on-read-pdb
@deffn function recentre-on-read-pdb

@end deffn

@node set-recentre-on-read-pdb
@subsection set-recentre-on-read-pdb
@deffn function set-recentre-on-read-pdb int

Where @emph{int} is a short

@end deffn

@node set-rotation-centre
@subsection set-rotation-centre
@deffn function set-rotation-centre x y z

Where: 
@itemize @bullet
@item @emph{x} is a number
@item @emph{y} is a number
@item @emph{z} is a number
@end itemize

@end deffn

@node set-rotation-centre-internal
@subsection set-rotation-centre-internal
@deffn function set-rotation-centre-internal x y z

Where: 
@itemize @bullet
@item @emph{x} is a number
@item @emph{y} is a number
@item @emph{z} is a number
@end itemize

@end deffn

@node rotation-centre-position
@subsection rotation-centre-position
@deffn function rotation-centre-position axis

Where @emph{axis} is an integer number

@end deffn

@node Orthogonal Axes
@section Orthogonal Axes

@menu
* set-draw-axes::
@end menu

@node set-draw-axes
@subsection set-draw-axes
@deffn function set-draw-axes i

Where @emph{i} is an integer number

@end deffn

@node Atom Selection Utilities
@section Atom Selection Utilities

@menu
* atom-index::
* atom-index-first-atom-in-residue::
* atom-index-first-atom-in-residue-with-altconf::
* median-temperature-factor::
* average-temperature-factor::
* clear-pending-picks::
* centre-of-mass-string::
* set-default-temperature-factor-for-new-atoms::
* default-new-atoms-b-factor::
* set-reset-b-factor-moved-atoms::
* get-reset-b-factor-moved-atoms-state::
* set-atom-attribute::
* set-atom-string-attribute::
@end menu

@node atom-index
@subsection atom-index
@deffn function atom-index imol chain_id iresno atom_id

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{iresno} is an integer number
@item @emph{atom_id} is a string
@end itemize

@end deffn

@node atom-index-first-atom-in-residue
@subsection atom-index-first-atom-in-residue
@deffn function atom-index-first-atom-in-residue imol chain_id iresno ins_code

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{iresno} is an integer number
@item @emph{ins_code} is a string
@end itemize

@end deffn

@node atom-index-first-atom-in-residue-with-altconf
@subsection atom-index-first-atom-in-residue-with-altconf
@deffn function atom-index-first-atom-in-residue-with-altconf imol chain_id iresno ins_code alt_conf

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{iresno} is an integer number
@item @emph{ins_code} is a string
@item @emph{alt_conf} is a string
@end itemize

@end deffn

@node median-temperature-factor
@subsection median-temperature-factor
@deffn function median-temperature-factor imol

Where @emph{imol} is an integer number

@end deffn

@node average-temperature-factor
@subsection average-temperature-factor
@deffn function average-temperature-factor imol

Where @emph{imol} is an integer number

@end deffn

@node clear-pending-picks
@subsection clear-pending-picks
@deffn function clear-pending-picks

@end deffn

@node centre-of-mass-string
@subsection centre-of-mass-string
@deffn function centre-of-mass-string imol

Where @emph{imol} is an integer number

@end deffn

@node set-default-temperature-factor-for-new-atoms
@subsection set-default-temperature-factor-for-new-atoms
@deffn function set-default-temperature-factor-for-new-atoms new_b

Where @emph{new_b} is a number

set the default temperature factor for newly created atoms (initial default 20) 

@end deffn

@node default-new-atoms-b-factor
@subsection default-new-atoms-b-factor
@deffn function default-new-atoms-b-factor

return the default temperature factor for newly created atoms 

@end deffn

@node set-reset-b-factor-moved-atoms
@subsection set-reset-b-factor-moved-atoms
@deffn function set-reset-b-factor-moved-atoms state

Where @emph{state} is an integer number

reset temperature factor for all moved atoms to the default for new atoms (usually 30) 

@end deffn

@node get-reset-b-factor-moved-atoms-state
@subsection get-reset-b-factor-moved-atoms-state
@deffn function get-reset-b-factor-moved-atoms-state

return the state if temperature factors shoudl be reset for moved atoms 

@end deffn

@node set-atom-attribute
@subsection set-atom-attribute
@deffn function set-atom-attribute imol chain_id resno ins_code atom_name alt_conf attribute_name val

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno} is an integer number
@item @emph{ins_code} is a string
@item @emph{atom_name} is a string
@item @emph{alt_conf} is a string
@item @emph{attribute_name} is a string
@item @emph{val} is a number
@end itemize

set a numberical attibute to the atom with the given specifier. 

Attributes can be "x", "y","z", "B", "occ" and the attribute val is a floating point number 

@end deffn

@node set-atom-string-attribute
@subsection set-atom-string-attribute
@deffn function set-atom-string-attribute imol chain_id resno ins_code atom_name alt_conf attribute_name attribute_value

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno} is an integer number
@item @emph{ins_code} is a string
@item @emph{atom_name} is a string
@item @emph{alt_conf} is a string
@item @emph{attribute_name} is a string
@item @emph{attribute_value} is a string
@end itemize

set a string attibute to the atom with the given specifier. 

Attributes can be "atom-name", "alt-conf", "element" or "segid". 

@end deffn

@node Skeletonization Interface
@section Skeletonization Interface

@menu
* skel-greer-on::
* skel-greer-off::
* skel-foadi-on::
* skel-foadi-off::
* skeletonize-map-by-optionmenu::
* skeletonize-map-single-map-maybe::
* skeletonize-map::
* unskeletonize-map::
* fill-option-menu-with-skeleton-options::
* set-initial-map-for-skeletonize::
* set-max-skeleton-search-depth::
* set-on-off-skeleton-radio-buttons::
* set-on-off-single-map-skeleton-radio-buttons::
* get-text-for-skeletonization-level-entry::
* set-skeletonization-level-from-widget::
* get-text-for-skeleton-box-size-entry::
* set-skeleton-box-size-from-widget::
* set-skeleton-box-size::
@end menu

@node skel-greer-on
@subsection skel-greer-on
@deffn function skel-greer-on

@end deffn

@node skel-greer-off
@subsection skel-greer-off
@deffn function skel-greer-off

@end deffn

@node skel-foadi-on
@subsection skel-foadi-on
@deffn function skel-foadi-on

@end deffn

@node skel-foadi-off
@subsection skel-foadi-off
@deffn function skel-foadi-off

@end deffn

@node skeletonize-map-by-optionmenu
@subsection skeletonize-map-by-optionmenu
@deffn function skeletonize-map-by-optionmenu optionmenu

Where @emph{optionmenu} is a GtkWidget

@end deffn

@node skeletonize-map-single-map-maybe
@subsection skeletonize-map-single-map-maybe
@deffn function skeletonize-map-single-map-maybe window imol

Where: 
@itemize @bullet
@item @emph{window} is a GtkWidget
@item @emph{imol} is an integer number
@end itemize

@end deffn

@node skeletonize-map
@subsection skeletonize-map
@deffn function skeletonize-map prune_flag imol

Where: 
@itemize @bullet
@item @emph{prune_flag} is an integer number
@item @emph{imol} is an integer number
@end itemize

skeletonize molecule number imol 

the prune_flag should almost always be 0. 

@end deffn

@node unskeletonize-map
@subsection unskeletonize-map
@deffn function unskeletonize-map imol

Where @emph{imol} is an integer number

undisplay the skeleton on molecule number imol 

@end deffn

@node fill-option-menu-with-skeleton-options
@subsection fill-option-menu-with-skeleton-options
@deffn function fill-option-menu-with-skeleton-options option_menu

Where @emph{option_menu} is a GtkWidget

@end deffn

@node set-initial-map-for-skeletonize
@subsection set-initial-map-for-skeletonize
@deffn function set-initial-map-for-skeletonize

@end deffn

@node set-max-skeleton-search-depth
@subsection set-max-skeleton-search-depth
@deffn function set-max-skeleton-search-depth v

Where @emph{v} is an integer number

set the skeleton search depth, used in baton building 

For high resolution maps, you need to search deeper down the skeleton tree. This limit needs to be increased to 20 or so for high res maps (it is 10 by default) 

@end deffn

@node set-on-off-skeleton-radio-buttons
@subsection set-on-off-skeleton-radio-buttons
@deffn function set-on-off-skeleton-radio-buttons skeleton_frame

Where @emph{skeleton_frame} is a GtkWidget

@end deffn

@node set-on-off-single-map-skeleton-radio-buttons
@subsection set-on-off-single-map-skeleton-radio-buttons
@deffn function set-on-off-single-map-skeleton-radio-buttons skeleton_frame imol

Where: 
@itemize @bullet
@item @emph{skeleton_frame} is a GtkWidget
@item @emph{imol} is an integer number
@end itemize

@end deffn

@node get-text-for-skeletonization-level-entry
@subsection get-text-for-skeletonization-level-entry
@deffn function get-text-for-skeletonization-level-entry

@end deffn

@node set-skeletonization-level-from-widget
@subsection set-skeletonization-level-from-widget
@deffn function set-skeletonization-level-from-widget txt

Where @emph{txt} is a string

@end deffn

@node get-text-for-skeleton-box-size-entry
@subsection get-text-for-skeleton-box-size-entry
@deffn function get-text-for-skeleton-box-size-entry

@end deffn

@node set-skeleton-box-size-from-widget
@subsection set-skeleton-box-size-from-widget
@deffn function set-skeleton-box-size-from-widget txt

Where @emph{txt} is a string

@end deffn

@node set-skeleton-box-size
@subsection set-skeleton-box-size
@deffn function set-skeleton-box-size f

Where @emph{f} is a number

the box size (in Angstroms) for which the skeleton is displayed 

@end deffn

@node Skeleton Colour
@section Skeleton Colour

@menu
* handle-skeleton-colour-change::
* set-skeleton-colour::
* get-skeleton-colour::
@end menu

@node handle-skeleton-colour-change
@subsection handle-skeleton-colour-change
@deffn function handle-skeleton-colour-change mol map_col

Where: 
@itemize @bullet
@item @emph{mol} is an integer number
@item @emph{map_col} is a number
@end itemize

@end deffn

@node set-skeleton-colour
@subsection set-skeleton-colour
@deffn function set-skeleton-colour imol r g b

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{r} is a number
@item @emph{g} is a number
@item @emph{b} is a number
@end itemize

@end deffn

@node get-skeleton-colour
@subsection get-skeleton-colour
@deffn function get-skeleton-colour

@end deffn

@node Read Maps
@section Read Maps

@menu
* handle-read-ccp4-map::
@end menu

@node handle-read-ccp4-map
@subsection handle-read-ccp4-map
@deffn function handle-read-ccp4-map filename is_diff_map_flag

Where: 
@itemize @bullet
@item @emph{filename} is a string
@item @emph{is_diff_map_flag} is an integer number
@end itemize

read a CCP4 map or a CNS map (despite the name). 

@end deffn

@node Save Coordinates
@section Save Coordinates

@menu
* save-coordinates-using-widget::
* save-coordinates::
* set-save-coordinates-in-original-directory::
* save-molecule-coords-button-select::
* save-molecule-number-from-option-menu::
* set-save-molecule-number::
@end menu

@node save-coordinates-using-widget
@subsection save-coordinates-using-widget
@deffn function save-coordinates-using-widget widget

Where @emph{widget} is a GtkWidget

@end deffn

@node save-coordinates
@subsection save-coordinates
@deffn function save-coordinates imol filename

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{filename} is a string
@end itemize

save coordinates of molecule number imol in filename 

Returns: status 1 is good (success), 0 is fail. 

@end deffn

@node set-save-coordinates-in-original-directory
@subsection set-save-coordinates-in-original-directory
@deffn function set-save-coordinates-in-original-directory i

Where @emph{i} is an integer number

@end deffn

@node save-molecule-coords-button-select
@subsection save-molecule-coords-button-select
@deffn function save-molecule-coords-button-select item pos

Where: 
@itemize @bullet
@item @emph{item} is a GtkWidget
@item @emph{pos} is a GtkPositionType
@end itemize

@end deffn

@node save-molecule-number-from-option-menu
@subsection save-molecule-number-from-option-menu
@deffn function save-molecule-number-from-option-menu

@end deffn

@node set-save-molecule-number
@subsection set-save-molecule-number
@deffn function set-save-molecule-number imol

Where @emph{imol} is an integer number

@end deffn

@node Read Phases File Functions
@section Read Phases File Functions

@menu
* read-phs-and-coords-and-make-map::
* read-phs-and-make-map-using-cell-symm-from-previous-mol::
* read-phs-and-make-map-using-cell-symm-from-mol::
* read-phs-and-make-map-using-cell-symm-from-mol-using-implicit-phs-filename::
* read-phs-and-make-map-using-cell-symm::
* read-phs-and-make-map-with-reso-limits::
* graphics-store-phs-filename::
* graphics-get-phs-filename::
* possible-cell-symm-for-phs-file::
* get-text-for-phs-cell-chooser::
@end menu

@node read-phs-and-coords-and-make-map
@subsection read-phs-and-coords-and-make-map
@deffn function read-phs-and-coords-and-make-map pdb_filename

Where @emph{pdb_filename} is a string

read phs file use coords to get cell and symm to make map 

uses pending data to make the map. 

@end deffn

@node read-phs-and-make-map-using-cell-symm-from-previous-mol
@subsection read-phs-and-make-map-using-cell-symm-from-previous-mol
@deffn function read-phs-and-make-map-using-cell-symm-from-previous-mol phs_filename

Where @emph{phs_filename} is a string

read a phs file, the cell and symm information is from previously read (most recently read) coordinates file 

For use with phs data filename provided on the command line 

@end deffn

@node read-phs-and-make-map-using-cell-symm-from-mol
@subsection read-phs-and-make-map-using-cell-symm-from-mol
@deffn function read-phs-and-make-map-using-cell-symm-from-mol phs_filename imol

Where: 
@itemize @bullet
@item @emph{phs_filename} is a string
@item @emph{imol} is an integer number
@end itemize

read phs file and use a previously read molecule to provide the cell and symmetry information 

Returns: the new molecule number, return -1 if problem creating the map (e.g. not phs data, file not found etc). 

@end deffn

@node read-phs-and-make-map-using-cell-symm-from-mol-using-implicit-phs-filename
@subsection read-phs-and-make-map-using-cell-symm-from-mol-using-implicit-phs-filename
@deffn function read-phs-and-make-map-using-cell-symm-from-mol-using-implicit-phs-filename imol

Where @emph{imol} is an integer number

@end deffn

@node read-phs-and-make-map-using-cell-symm
@subsection read-phs-and-make-map-using-cell-symm
@deffn function read-phs-and-make-map-using-cell-symm phs_file_name hm_spacegroup a b c alpha beta gamma

Where: 
@itemize @bullet
@item @emph{phs_file_name} is a string
@item @emph{hm_spacegroup} is a string
@item @emph{a} is a number
@item @emph{b} is a number
@item @emph{c} is a number
@item @emph{alpha} is a number
@item @emph{beta} is a number
@item @emph{gamma} is a number
@end itemize

read phs file use coords to use cell and symm to make map 

in degrees 

@end deffn

@node read-phs-and-make-map-with-reso-limits
@subsection read-phs-and-make-map-with-reso-limits
@deffn function read-phs-and-make-map-with-reso-limits imol phs_file_name reso_lim_low reso_lim_high

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{phs_file_name} is a string
@item @emph{reso_lim_low} is a number
@item @emph{reso_lim_high} is a number
@end itemize

read a phs file and use the cell and symm in molecule number imol and use the resolution limits reso_lim_high (in Angstroems). 

@end deffn

@node graphics-store-phs-filename
@subsection graphics-store-phs-filename
@deffn function graphics-store-phs-filename phs_filename

Where @emph{phs_filename} is a string

@end deffn

@node graphics-get-phs-filename
@subsection graphics-get-phs-filename
@deffn function graphics-get-phs-filename

@end deffn

@node possible-cell-symm-for-phs-file
@subsection possible-cell-symm-for-phs-file
@deffn function possible-cell-symm-for-phs-file

@end deffn

@node get-text-for-phs-cell-chooser
@subsection get-text-for-phs-cell-chooser
@deffn function get-text-for-phs-cell-chooser imol field

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{field} is a string
@end itemize

@end deffn

@node Graphics Move
@section Graphics Move

@menu
* undo-last-move::
* translate-molecule-by::
* transform-molecule-by::
@end menu

@node undo-last-move
@subsection undo-last-move
@deffn function undo-last-move

undo last move 

@end deffn

@node translate-molecule-by
@subsection translate-molecule-by
@deffn function translate-molecule-by imol x y z

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{x} is a number
@item @emph{y} is a number
@item @emph{z} is a number
@end itemize

translate molecule number imol by (x,y,z) in Angstroms 

@end deffn

@node transform-molecule-by
@subsection transform-molecule-by
@deffn function transform-molecule-by imol m11 m12 m13 m21 m22 m23 m31 m32 m33 x y z

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{m11} is a number
@item @emph{m12} is a number
@item @emph{m13} is a number
@item @emph{m21} is a number
@item @emph{m22} is a number
@item @emph{m23} is a number
@item @emph{m31} is a number
@item @emph{m32} is a number
@item @emph{m33} is a number
@item @emph{x} is a number
@item @emph{y} is a number
@item @emph{z} is a number
@end itemize

transform molecule number imol by the given rotation matrix, then translate by (x,y,z) in Angstroms 

@end deffn

@node Go To Atom Widget Functions
@section Go To Atom Widget Functions

@menu
* wrapped-create-goto-atom-window::
* post-go-to-atom-window::
* fill-go-to-atom-window::
* go-to-atom-molecule-number::
* go-to-atom-chain-id::
* go-to-atom-atom-name::
* go-to-atom-residue-number::
* go-to-atom-ins-code::
* go-to-atom-alt-conf::
* set-go-to-atom-chain-residue-atom-name::
* set-go-to-atom-chain-residue-atom-name-no-redraw::
* set-go-to-atom-chain-residue-atom-name-strings::
* goto-next-atom-maybe-new::
* goto-previous-atom-maybe-new::
* update-go-to-atom-from-current-position::
* apply-go-to-atom-values::
* update-go-to-atom-residue-list::
* atom-spec-to-atom-index::
* full-atom-spec-to-atom-index::
* update-go-to-atom-window-on-changed-mol::
* update-go-to-atom-window-on-new-mol::
* update-go-to-atom-window-on-other-molecule-chosen::
* set-go-to-atom-molecule::
* go-to-atom-molecule-optionmenu-active-molecule::
* save-go-to-atom-widget::
* unset-go-to-atom-widget::
* clear-atom-list::
* apply-go-to-atom-from-widget::
* on-go-to-atom-residue-list-select-child::
* on-go-to-atom-residue-tree-selection-changed-gtk1::
* on-go-to-atom-atom-list-selection-changed-gtk1::
* on-go-to-atom-residue-list-unselect-child::
@end menu

@node wrapped-create-goto-atom-window
@subsection wrapped-create-goto-atom-window
@deffn function wrapped-create-goto-atom-window

@end deffn

@node post-go-to-atom-window
@subsection post-go-to-atom-window
@deffn function post-go-to-atom-window

Post the Go To Atom Window. 

@end deffn

@node fill-go-to-atom-window
@subsection fill-go-to-atom-window
@deffn function fill-go-to-atom-window widget

Where @emph{widget} is a GtkWidget

@end deffn

@node go-to-atom-molecule-number
@subsection go-to-atom-molecule-number
@deffn function go-to-atom-molecule-number

@end deffn

@node go-to-atom-chain-id
@subsection go-to-atom-chain-id
@deffn function go-to-atom-chain-id

@end deffn

@node go-to-atom-atom-name
@subsection go-to-atom-atom-name
@deffn function go-to-atom-atom-name

@end deffn

@node go-to-atom-residue-number
@subsection go-to-atom-residue-number
@deffn function go-to-atom-residue-number

@end deffn

@node go-to-atom-ins-code
@subsection go-to-atom-ins-code
@deffn function go-to-atom-ins-code

@end deffn

@node go-to-atom-alt-conf
@subsection go-to-atom-alt-conf
@deffn function go-to-atom-alt-conf

@end deffn

@node set-go-to-atom-chain-residue-atom-name
@subsection set-go-to-atom-chain-residue-atom-name
@deffn function set-go-to-atom-chain-residue-atom-name t1_chain_id iresno t3_atom_name

Where: 
@itemize @bullet
@item @emph{t1_chain_id} is a string
@item @emph{iresno} is an integer number
@item @emph{t3_atom_name} is a string
@end itemize

set the go to atom specification 

It seems important for swig that the char * arguments are const char *, not const gchar * (or else we get wrong type of argument error on (say) "A" 

@end deffn

@node set-go-to-atom-chain-residue-atom-name-no-redraw
@subsection set-go-to-atom-chain-residue-atom-name-no-redraw
@deffn function set-go-to-atom-chain-residue-atom-name-no-redraw t1 iresno t3 make_the_move_flag

Where: 
@itemize @bullet
@item @emph{t1} is a string
@item @emph{iresno} is an integer number
@item @emph{t3} is a string
@item @emph{make_the_move_flag} is an integer number
@end itemize

@end deffn

@node set-go-to-atom-chain-residue-atom-name-strings
@subsection set-go-to-atom-chain-residue-atom-name-strings
@deffn function set-go-to-atom-chain-residue-atom-name-strings t1 t2 txt

Where: 
@itemize @bullet
@item @emph{t1} is a string
@item @emph{t2} is a string
@item @emph{txt} is a string
@end itemize

@end deffn

@node goto-next-atom-maybe-new
@subsection goto-next-atom-maybe-new
@deffn function goto-next-atom-maybe-new window

Where @emph{window} is a GtkWidget

@end deffn

@node goto-previous-atom-maybe-new
@subsection goto-previous-atom-maybe-new
@deffn function goto-previous-atom-maybe-new window

Where @emph{window} is a GtkWidget

@end deffn

@node update-go-to-atom-from-current-position
@subsection update-go-to-atom-from-current-position
@deffn function update-go-to-atom-from-current-position

update the Go To Atom widget entries to atom closest to screen centre. 

@end deffn

@node apply-go-to-atom-values
@subsection apply-go-to-atom-values
@deffn function apply-go-to-atom-values window

Where @emph{window} is a GtkWidget

@end deffn

@node update-go-to-atom-residue-list
@subsection update-go-to-atom-residue-list
@deffn function update-go-to-atom-residue-list imol

Where @emph{imol} is an integer number

@end deffn

@node atom-spec-to-atom-index
@subsection atom-spec-to-atom-index
@deffn function atom-spec-to-atom-index mol chain resno atom_name

Where: 
@itemize @bullet
@item @emph{mol} is an integer number
@item @emph{chain} is a string
@item @emph{resno} is an integer number
@item @emph{atom_name} is a string
@end itemize

what is the atom index of the given atom? 

@end deffn

@node full-atom-spec-to-atom-index
@subsection full-atom-spec-to-atom-index
@deffn function full-atom-spec-to-atom-index imol chain resno inscode atom_name altloc

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain} is a string
@item @emph{resno} is an integer number
@item @emph{inscode} is a string
@item @emph{atom_name} is a string
@item @emph{altloc} is a string
@end itemize

what is the atom index of the given atom? 

@end deffn

@node update-go-to-atom-window-on-changed-mol
@subsection update-go-to-atom-window-on-changed-mol
@deffn function update-go-to-atom-window-on-changed-mol imol

Where @emph{imol} is an integer number

update the Go To Atom window 

@end deffn

@node update-go-to-atom-window-on-new-mol
@subsection update-go-to-atom-window-on-new-mol
@deffn function update-go-to-atom-window-on-new-mol

update the Go To Atom window. This updates the option menu for the molecules. 

@end deffn

@node update-go-to-atom-window-on-other-molecule-chosen
@subsection update-go-to-atom-window-on-other-molecule-chosen
@deffn function update-go-to-atom-window-on-other-molecule-chosen imol

Where @emph{imol} is an integer number

@end deffn

@node set-go-to-atom-molecule
@subsection set-go-to-atom-molecule
@deffn function set-go-to-atom-molecule imol

Where @emph{imol} is an integer number

set the molecule for the Go To Atom 

For dynarama callback sake. The widget/class knows which mapview molecule that it was generated from, so in order to go to the molecule from dynarama, we first need to the the molecule - because 

 does not mention the molecule (see "Next/Previous Residue" for reasons for that). This function simply calls the graphics_info_t function of the same name.

Also used in scripting, where go-to-atom-chain-residue-atom-name does not mention the molecule number. 

@end deffn

@node go-to-atom-molecule-optionmenu-active-molecule
@subsection go-to-atom-molecule-optionmenu-active-molecule
@deffn function go-to-atom-molecule-optionmenu-active-molecule widget

Where @emph{widget} is a GtkWidget

@end deffn

@node save-go-to-atom-widget
@subsection save-go-to-atom-widget
@deffn function save-go-to-atom-widget widget

Where @emph{widget} is a GtkWidget

@end deffn

@node unset-go-to-atom-widget
@subsection unset-go-to-atom-widget
@deffn function unset-go-to-atom-widget

@end deffn

@node clear-atom-list
@subsection clear-atom-list
@deffn function clear-atom-list atom_gtklist

Where @emph{atom_gtklist} is a GtkWidget

@end deffn

@node apply-go-to-atom-from-widget
@subsection apply-go-to-atom-from-widget
@deffn function apply-go-to-atom-from-widget widget

Where @emph{widget} is a GtkWidget

@end deffn

@node on-go-to-atom-residue-list-select-child
@subsection on-go-to-atom-residue-list-select-child
@deffn function on-go-to-atom-residue-list-select-child list widget user_data

Where: 
@itemize @bullet
@item @emph{list} is a GtkList
@item @emph{widget} is a GtkWidget
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node on-go-to-atom-residue-tree-selection-changed-gtk1
@subsection on-go-to-atom-residue-tree-selection-changed-gtk1
@deffn function on-go-to-atom-residue-tree-selection-changed-gtk1 gtktree user_data

Where: 
@itemize @bullet
@item @emph{gtktree} is a GtkList
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node on-go-to-atom-atom-list-selection-changed-gtk1
@subsection on-go-to-atom-atom-list-selection-changed-gtk1
@deffn function on-go-to-atom-atom-list-selection-changed-gtk1 list user_data

Where: 
@itemize @bullet
@item @emph{list} is a GtkList
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node on-go-to-atom-residue-list-unselect-child
@subsection on-go-to-atom-residue-list-unselect-child
@deffn function on-go-to-atom-residue-list-unselect-child list widget user_data

Where: 
@itemize @bullet
@item @emph{list} is a GtkList
@item @emph{widget} is a GtkWidget
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node Map and Molecule Control
@section Map and Molecule Control

@menu
* save-display-control-widget-in-graphics::
* wrapped-create-display-control-window::
* post-display-control-window::
* add-map-display-control-widgets::
* add-mol-display-control-widgets::
* add-map-and-mol-display-control-widgets::
* reset-graphics-display-control-window::
* close-graphics-display-control-window::
* set-map-displayed::
* set-mol-displayed::
* set-mol-active::
* mol-is-displayed::
* mol-is-active::
* map-is-displayed::
* set-all-maps-displayed::
* set-all-models-displayed-and-active::
* show-spacegroup::
@end menu

@node save-display-control-widget-in-graphics
@subsection save-display-control-widget-in-graphics
@deffn function save-display-control-widget-in-graphics widget

Where @emph{widget} is a GtkWidget

@end deffn

@node wrapped-create-display-control-window
@subsection wrapped-create-display-control-window
@deffn function wrapped-create-display-control-window

@end deffn

@node post-display-control-window
@subsection post-display-control-window
@deffn function post-display-control-window

display the Display Constrol window 

@end deffn

@node add-map-display-control-widgets
@subsection add-map-display-control-widgets
@deffn function add-map-display-control-widgets

@end deffn

@node add-mol-display-control-widgets
@subsection add-mol-display-control-widgets
@deffn function add-mol-display-control-widgets

@end deffn

@node add-map-and-mol-display-control-widgets
@subsection add-map-and-mol-display-control-widgets
@deffn function add-map-and-mol-display-control-widgets

@end deffn

@node reset-graphics-display-control-window
@subsection reset-graphics-display-control-window
@deffn function reset-graphics-display-control-window

@end deffn

@node close-graphics-display-control-window
@subsection close-graphics-display-control-window
@deffn function close-graphics-display-control-window

@end deffn

@node set-map-displayed
@subsection set-map-displayed
@deffn function set-map-displayed imol state

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{state} is an integer number
@end itemize

make the map displayed/undisplayed, 0 for off, 1 for on 

@end deffn

@node set-mol-displayed
@subsection set-mol-displayed
@deffn function set-mol-displayed imol state

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{state} is an integer number
@end itemize

make the coordinates molecule displayed/undisplayed, 0 for off, 1 for on 

@end deffn

@node set-mol-active
@subsection set-mol-active
@deffn function set-mol-active imol state

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{state} is an integer number
@end itemize

make the coordinates molecule active/inactve (clickable), 0 for off, 1 for on 

@end deffn

@node mol-is-displayed
@subsection mol-is-displayed
@deffn function mol-is-displayed imol

Where @emph{imol} is an integer number

return the display state of molecule number imol 

Returns: 1 for on, 0 for off 

@end deffn

@node mol-is-active
@subsection mol-is-active
@deffn function mol-is-active imol

Where @emph{imol} is an integer number

return the active state of molecule number imol 

Returns: 1 for on, 0 for off 

@end deffn

@node map-is-displayed
@subsection map-is-displayed
@deffn function map-is-displayed imol

Where @emph{imol} is an integer number

return the display state of molecule number imol 

Returns: 1 for on, 0 for off 

@end deffn

@node set-all-maps-displayed
@subsection set-all-maps-displayed
@deffn function set-all-maps-displayed on_or_off

Where @emph{on_or_off} is an integer number

if on_or_off is 0 turn off all maps displayed, for other values of on_or_off turn on all maps 

@end deffn

@node set-all-models-displayed-and-active
@subsection set-all-models-displayed-and-active
@deffn function set-all-models-displayed-and-active on_or_off

Where @emph{on_or_off} is an integer number

if on_or_off is 0 turn off all models displayed and active, for other values of on_or_off turn on all models. 

@end deffn

@node show-spacegroup
@subsection show-spacegroup
@deffn function show-spacegroup imol

Where @emph{imol} is an integer number

return the spacegroup of molecule number imol 

Returns: "No Spacegroup" when the spacegroup of a molecule has not been set. 

@end deffn

@node Align and Mutate
@section Align and Mutate

@menu
* wrapped-create-align-and-mutate-dialog::
* do-align-mutate-sequence::
* align-and-mutate-molecule-menu-item-activate::
* align-and-mutate-chain-option-menu-item-activate::
* align-and-mutate::
@end menu

@node wrapped-create-align-and-mutate-dialog
@subsection wrapped-create-align-and-mutate-dialog
@deffn function wrapped-create-align-and-mutate-dialog

@end deffn

@node do-align-mutate-sequence
@subsection do-align-mutate-sequence
@deffn function do-align-mutate-sequence w

Where @emph{w} is a GtkWidget

@end deffn

@node align-and-mutate-molecule-menu-item-activate
@subsection align-and-mutate-molecule-menu-item-activate
@deffn function align-and-mutate-molecule-menu-item-activate item pos

Where: 
@itemize @bullet
@item @emph{item} is a GtkWidget
@item @emph{pos} is a GtkPositionType
@end itemize

@end deffn

@node align-and-mutate-chain-option-menu-item-activate
@subsection align-and-mutate-chain-option-menu-item-activate
@deffn function align-and-mutate-chain-option-menu-item-activate item pos

Where: 
@itemize @bullet
@item @emph{item} is a GtkWidget
@item @emph{pos} is a GtkPositionType
@end itemize

@end deffn

@node align-and-mutate
@subsection align-and-mutate
@deffn function align-and-mutate imol chain_id fasta_maybe

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{fasta_maybe} is a string
@end itemize

@end deffn

@node Renumber Residue Range
@section Renumber Residue Range

@menu
* renumber-residue-range::
* wrapped-create-renumber-residue-range-dialog::
* renumber-residues-from-widget::
* change-residue-number::
@end menu

@node renumber-residue-range
@subsection renumber-residue-range
@deffn function renumber-residue-range imol chain_id start_res last_res offset

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{start_res} is an integer number
@item @emph{last_res} is an integer number
@item @emph{offset} is an integer number
@end itemize

renumber the given residue range by offset residues 

@end deffn

@node wrapped-create-renumber-residue-range-dialog
@subsection wrapped-create-renumber-residue-range-dialog
@deffn function wrapped-create-renumber-residue-range-dialog

@end deffn

@node renumber-residues-from-widget
@subsection renumber-residues-from-widget
@deffn function renumber-residues-from-widget window

Where @emph{window} is a GtkWidget

@end deffn

@node change-residue-number
@subsection change-residue-number
@deffn function change-residue-number imol chain_id current_resno current_inscode new_resno new_inscode

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{current_resno} is an integer number
@item @emph{current_inscode} is a string
@item @emph{new_resno} is an integer number
@item @emph{new_inscode} is a string
@end itemize

change chain id, residue number or insertion code for given residue 

@end deffn

@node Scripting Interface
@section Scripting Interface

@menu
* post-scripting-window::
* post-scheme-scripting-window::
* post-python-scripting-window::
* run-command-line-scripts::
* setup-guile-window-entry::
* setup-python-window-entry::
* set-guile-gui-loaded-flag::
* set-python-gui-loaded-flag::
* set-found-coot-gui::
* set-found-coot-python-gui::
@end menu

@node post-scripting-window
@subsection post-scripting-window
@deffn function post-scripting-window

do nothing - compatibility function 

@end deffn

@node post-scheme-scripting-window
@subsection post-scheme-scripting-window
@deffn function post-scheme-scripting-window

pop-up a scripting window for scheming 

@end deffn

@node post-python-scripting-window
@subsection post-python-scripting-window
@deffn function post-python-scripting-window

pop-up a scripting window for pythoning 

@end deffn

@node run-command-line-scripts
@subsection run-command-line-scripts
@deffn function run-command-line-scripts

@end deffn

@node setup-guile-window-entry
@subsection setup-guile-window-entry
@deffn function setup-guile-window-entry entry

Where @emph{entry} is a GtkWidget

@end deffn

@node setup-python-window-entry
@subsection setup-python-window-entry
@deffn function setup-python-window-entry entry

Where @emph{entry} is a GtkWidget

@end deffn

@node set-guile-gui-loaded-flag
@subsection set-guile-gui-loaded-flag
@deffn function set-guile-gui-loaded-flag

@end deffn

@node set-python-gui-loaded-flag
@subsection set-python-gui-loaded-flag
@deffn function set-python-gui-loaded-flag

@end deffn

@node set-found-coot-gui
@subsection set-found-coot-gui
@deffn function set-found-coot-gui

@end deffn

@node set-found-coot-python-gui
@subsection set-found-coot-python-gui
@deffn function set-found-coot-python-gui

@end deffn

@node Monomer
@section Monomer

@menu
* handle-get-accession-code::
* wrapped-create-libcheck-monomer-dialog::
* handle-get-libcheck-monomer-code::
* get-monomer::
* get-monomer-from-dictionary::
* handle-make-monomer-search::
* run-script::
* run-guile-script::
* run-python-script::
@end menu

@node handle-get-accession-code
@subsection handle-get-accession-code
@deffn function handle-get-accession-code widget

Where @emph{widget} is a GtkWidget

@end deffn

@node wrapped-create-libcheck-monomer-dialog
@subsection wrapped-create-libcheck-monomer-dialog
@deffn function wrapped-create-libcheck-monomer-dialog

@end deffn

@node handle-get-libcheck-monomer-code
@subsection handle-get-libcheck-monomer-code
@deffn function handle-get-libcheck-monomer-code widget

Where @emph{widget} is a GtkWidget

@end deffn

@node get-monomer
@subsection get-monomer
@deffn function get-monomer three_letter_code

Where @emph{three_letter_code} is a string

import libcheck monomer give the 3-letter code. 

Returns: the new molecule number, if not -1 (error). 

@end deffn

@node get-monomer-from-dictionary
@subsection get-monomer-from-dictionary
@deffn function get-monomer-from-dictionary three_letter_code idealised_flag

Where: 
@itemize @bullet
@item @emph{three_letter_code} is a string
@item @emph{idealised_flag} is an integer number
@end itemize

@end deffn

@node handle-make-monomer-search
@subsection handle-make-monomer-search
@deffn function handle-make-monomer-search text viewport

Where: 
@itemize @bullet
@item @emph{text} is a string
@item @emph{viewport} is a GtkWidget
@end itemize

@end deffn

@node run-script
@subsection run-script
@deffn function run-script filename

Where @emph{filename} is a string

run script file 

@end deffn

@node run-guile-script
@subsection run-guile-script
@deffn function run-guile-script filename

Where @emph{filename} is a string

@end deffn

@node run-python-script
@subsection run-python-script
@deffn function run-python-script filename

Where @emph{filename} is a string

@end deffn

@node Regularization and Refinement
@section Regularization and Refinement

@menu
* do-regularize::
* do-refine::
* do-regularize-kill-delete-dialog::
* add-planar-peptide-restraints::
* remove-planar-peptide-restraints::
* planar-peptide-restraints-state::
* add-omega-torsion-restriants::
* remove-omega-torsion-restriants::
* set-refinement-immediate-replacement::
* refinement-immediate-replacement-state::
* set-residue-selection-flash-frames-number::
* accept-regularizement::
* clear-up-moving-atoms::
* clear-moving-atoms-object::
* fill-option-menu-with-refine-options::
* wrapped-create-refine-params-dialog::
* do-torsions-toggle::
* set-refine-with-torsion-restraints::
* refine-with-torsion-restraints-state::
* set-refine-params-toggle-buttons::
* set-matrix::
* matrix-state::
* set-refine-auto-range-step::
* set-refine-max-residues::
* refine-zone-atom-index-define::
* refine-zone::
* refine-zone-with-full-residue-spec::
* refine-auto-range::
* regularize-zone::
* set-dragged-refinement-steps-per-frame::
* dragged-refinement-steps-per-frame::
* set-refinement-refine-per-frame::
* refinement-refine-per-frame-state::
* set-refine-ramachandran-angles::
* refine-ramachandran-angles-state::
* set-numerical-gradients::
* set-fix-chiral-volumes-before-refinement::
* check-chiral-volumes::
* check-chiral-volumes-from-widget::
* fill-chiral-volume-molecule-option-menu::
* chiral-volume-molecule-option-menu-item-select::
* set-show-chiral-volume-errors-dialog::
* set-secondary-structure-restraints-type::
* secondary-structure-restraints-type::
* imol-refinement-map::
* set-imol-refinement-map::
* does-residue-exist-p::
* write-restraints-cif-dictionary::
@end menu

@node do-regularize
@subsection do-regularize
@deffn function do-regularize state

Where @emph{state} is an integer number

@end deffn

@node do-refine
@subsection do-refine
@deffn function do-refine state

Where @emph{state} is an integer number

@end deffn

@node do-regularize-kill-delete-dialog
@subsection do-regularize-kill-delete-dialog
@deffn function do-regularize-kill-delete-dialog

@end deffn

@node add-planar-peptide-restraints
@subsection add-planar-peptide-restraints
@deffn function add-planar-peptide-restraints

add a restraint on peptides to make them planar 

This adds a 5 atom restraint that includes both CA atoms of the peptide. Use this rather than editting the mon_lib_list.cif file. 

@end deffn

@node remove-planar-peptide-restraints
@subsection remove-planar-peptide-restraints
@deffn function remove-planar-peptide-restraints

remove restraints on peptides to make them planar. 

@end deffn

@node planar-peptide-restraints-state
@subsection planar-peptide-restraints-state
@deffn function planar-peptide-restraints-state

@end deffn

@node add-omega-torsion-restriants
@subsection add-omega-torsion-restriants
@deffn function add-omega-torsion-restriants

add restraints on the omega angle of the peptides 

(that is the torsion round the peptide bond). Omega angles that are closer to 0 than to 180 will be refined as cis peptides (and of course if omega is greater than 90 then the peptide will be refined as a trans peptide (this is the normal case). 

@end deffn

@node remove-omega-torsion-restriants
@subsection remove-omega-torsion-restriants
@deffn function remove-omega-torsion-restriants

remove omega restraints on CIS and TRANS linked residues. 

@end deffn

@node set-refinement-immediate-replacement
@subsection set-refinement-immediate-replacement
@deffn function set-refinement-immediate-replacement istate

Where @emph{istate} is an integer number

set immediate replacement mode for refinement and regularization. You need this (call with istate=1) if you are scripting refinement/regularization 

@end deffn

@node refinement-immediate-replacement-state
@subsection refinement-immediate-replacement-state
@deffn function refinement-immediate-replacement-state

query the state of the immediate replacement mode 

@end deffn

@node set-residue-selection-flash-frames-number
@subsection set-residue-selection-flash-frames-number
@deffn function set-residue-selection-flash-frames-number i

Where @emph{i} is an integer number

set the number of frames for which the selected residue range flashes 

On fast computers, this can be set to higher than the default for more aesthetic appeal. 

@end deffn

@node accept-regularizement
@subsection accept-regularizement
@deffn function accept-regularizement

accept the new positions of the regularized or refined residues 

If you are scripting refinement and/or regularization, this is the function that you need to call after refine-zone or regularize-zone. 

@end deffn

@node clear-up-moving-atoms
@subsection clear-up-moving-atoms
@deffn function clear-up-moving-atoms

@end deffn

@node clear-moving-atoms-object
@subsection clear-moving-atoms-object
@deffn function clear-moving-atoms-object

@end deffn

@node fill-option-menu-with-refine-options
@subsection fill-option-menu-with-refine-options
@deffn function fill-option-menu-with-refine-options option_menu

Where @emph{option_menu} is a GtkWidget

@end deffn

@node wrapped-create-refine-params-dialog
@subsection wrapped-create-refine-params-dialog
@deffn function wrapped-create-refine-params-dialog

@end deffn

@node do-torsions-toggle
@subsection do-torsions-toggle
@deffn function do-torsions-toggle button

Where @emph{button} is a GtkWidget

@end deffn

@node set-refine-with-torsion-restraints
@subsection set-refine-with-torsion-restraints
@deffn function set-refine-with-torsion-restraints istate

Where @emph{istate} is an integer number

turn on (or off) torsion restraints 

Pass with istate=1 for on, istate=0 for off. 

@end deffn

@node refine-with-torsion-restraints-state
@subsection refine-with-torsion-restraints-state
@deffn function refine-with-torsion-restraints-state

return the state of above 

@end deffn

@node set-refine-params-toggle-buttons
@subsection set-refine-params-toggle-buttons
@deffn function set-refine-params-toggle-buttons button

Where @emph{button} is a GtkWidget

@end deffn

@node set-matrix
@subsection set-matrix
@deffn function set-matrix f

Where @emph{f} is a number

set the relative weight of the geometric terms to the map terms 

The default is 60.

The higher the number the more weight that is given to the map terms but the resulting chi squared values are higher). This will be needed for maps generated from data not on (or close to) the absolute scale or maps that have been scaled (for example so that the sigma level has been scaled to 1.0). 

@end deffn

@node matrix-state
@subsection matrix-state
@deffn function matrix-state

return the relative weight of the geometric terms to the map terms. 

@end deffn

@node set-refine-auto-range-step
@subsection set-refine-auto-range-step
@deffn function set-refine-auto-range-step i

Where @emph{i} is an integer number

change the +/- step for autoranging (default is 1) 

Auto-ranging alow you to select a range from one button press, this allows you to set the number of residues either side of the clicked residue that becomes the selected zone 

@end deffn

@node set-refine-max-residues
@subsection set-refine-max-residues
@deffn function set-refine-max-residues n

Where @emph{n} is an integer number

set the heuristic fencepost for the maximum number of residues in the refinement/regularization residue range 

Default is 20 

@end deffn

@node refine-zone-atom-index-define
@subsection refine-zone-atom-index-define
@deffn function refine-zone-atom-index-define imol ind1 ind2

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{ind1} is an integer number
@item @emph{ind2} is an integer number
@end itemize

refine a zone based on atom indexing 

@end deffn

@node refine-zone
@subsection refine-zone
@deffn function refine-zone imol chain_id resno1 resno2 altconf

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno1} is an integer number
@item @emph{resno2} is an integer number
@item @emph{altconf} is a string
@end itemize

refine a zone 

presumes that imol_Refinement_Map has been set 

@end deffn

@node refine-zone-with-full-residue-spec
@subsection refine-zone-with-full-residue-spec
@deffn function refine-zone-with-full-residue-spec imol chain_id resno1 inscode_1 resno2 inscode_2 altconf

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno1} is an integer number
@item @emph{inscode_1} is a string
@item @emph{resno2} is an integer number
@item @emph{inscode_2} is a string
@item @emph{altconf} is a string
@end itemize

refine a zone, allowing the specification of insertion codes for the residues too. 

presumes that imol_Refinement_Map has been set 

@end deffn

@node refine-auto-range
@subsection refine-auto-range
@deffn function refine-auto-range imol chain_id resno1 altconf

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno1} is an integer number
@item @emph{altconf} is a string
@end itemize

refine a zone using auto-range 

presumes that imol_Refinement_Map has been set 

@end deffn

@node regularize-zone
@subsection regularize-zone
@deffn function regularize-zone imol chain_id resno1 resno2 altconf

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno1} is an integer number
@item @emph{resno2} is an integer number
@item @emph{altconf} is a string
@end itemize

regularize a zone 

@end deffn

@node set-dragged-refinement-steps-per-frame
@subsection set-dragged-refinement-steps-per-frame
@deffn function set-dragged-refinement-steps-per-frame v

Where @emph{v} is an integer number

set the number of refinement steps applied to the intermediate atoms each frame of graphics. 

smaller numbers make the movement of the intermediate atoms slower, smoother, more elegant.

Default: 50. 

@end deffn

@node dragged-refinement-steps-per-frame
@subsection dragged-refinement-steps-per-frame
@deffn function dragged-refinement-steps-per-frame

return the number of steps per frame in dragged refinement 

@end deffn

@node set-refinement-refine-per-frame
@subsection set-refinement-refine-per-frame
@deffn function set-refinement-refine-per-frame istate

Where @emph{istate} is an integer number

allow refinement of intermediate atoms after dragging, before displaying (default: 0, off). 

An attempt to do something like xfit does, at the request of Frank von Delft.

Pass with istate=1 to enable this option. 

@end deffn

@node refinement-refine-per-frame-state
@subsection refinement-refine-per-frame-state
@deffn function refinement-refine-per-frame-state

query the state of the above option 

@end deffn

@node set-refine-ramachandran-angles
@subsection set-refine-ramachandran-angles
@deffn function set-refine-ramachandran-angles state

Where @emph{state} is an integer number

turn on Ramachandran angles refinement in refinement and regularization 

@end deffn

@node refine-ramachandran-angles-state
@subsection refine-ramachandran-angles-state
@deffn function refine-ramachandran-angles-state

@end deffn

@node set-numerical-gradients
@subsection set-numerical-gradients
@deffn function set-numerical-gradients istate

Where @emph{istate} is an integer number

@end deffn

@node set-fix-chiral-volumes-before-refinement
@subsection set-fix-chiral-volumes-before-refinement
@deffn function set-fix-chiral-volumes-before-refinement istate

Where @emph{istate} is an integer number

correct the sign of chiral volumes before commencing refinement? 

Do we want to fix chiral volumes (by moving the chiral atom to the other side of the chiral plane if necessary). Default yes (1). Note: doesn't work currently. 

@end deffn

@node check-chiral-volumes
@subsection check-chiral-volumes
@deffn function check-chiral-volumes imol

Where @emph{imol} is an integer number

query the state of the above option 

@end deffn

@node check-chiral-volumes-from-widget
@subsection check-chiral-volumes-from-widget
@deffn function check-chiral-volumes-from-widget window

Where @emph{window} is a GtkWidget

@end deffn

@node fill-chiral-volume-molecule-option-menu
@subsection fill-chiral-volume-molecule-option-menu
@deffn function fill-chiral-volume-molecule-option-menu w

Where @emph{w} is a GtkWidget

@end deffn

@node chiral-volume-molecule-option-menu-item-select
@subsection chiral-volume-molecule-option-menu-item-select
@deffn function chiral-volume-molecule-option-menu-item-select item pos

Where: 
@itemize @bullet
@item @emph{item} is a GtkWidget
@item @emph{pos} is a GtkPositionType
@end itemize

@end deffn

@node set-show-chiral-volume-errors-dialog
@subsection set-show-chiral-volume-errors-dialog
@deffn function set-show-chiral-volume-errors-dialog istate

Where @emph{istate} is an integer number

For experienced Cooters who don't like Coot nannying about chiral volumes during refinement. 

@end deffn

@node set-secondary-structure-restraints-type
@subsection set-secondary-structure-restraints-type
@deffn function set-secondary-structure-restraints-type itype

Where @emph{itype} is an integer number

set the type of secondary structure restraints 

0 no sec str restraints

1 alpha helix restraints

2 beta strand restraints 

@end deffn

@node secondary-structure-restraints-type
@subsection secondary-structure-restraints-type
@deffn function secondary-structure-restraints-type

return the secondary structure restraints type 

@end deffn

@node imol-refinement-map
@subsection imol-refinement-map
@deffn function imol-refinement-map

the molecule number of the map used for refinement 

Returns: the map number, if it has been set or there is only one map, return -1 on no map set (ambiguous) or no maps. 

@end deffn

@node set-imol-refinement-map
@subsection set-imol-refinement-map
@deffn function set-imol-refinement-map imol

Where @emph{imol} is an integer number

set the molecule number of the map to be used for refinement/fitting. 

Returns: imol on success, -1 on failure 

@end deffn

@node does-residue-exist-p
@subsection does-residue-exist-p
@deffn function does-residue-exist-p imol chain_id resno inscode

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno} is an integer number
@item @emph{inscode} is a string
@end itemize

Does the residue exist? (Raw function). 

Returns: 0 on not-exist, 1 on does exist. 

@end deffn

@node write-restraints-cif-dictionary
@subsection write-restraints-cif-dictionary
@deffn function write-restraints-cif-dictionary monomer_type file_name

Where: 
@itemize @bullet
@item @emph{monomer_type} is a string
@item @emph{file_name} is a string
@end itemize

@end deffn

@node Simplex Refinement Interface
@section Simplex Refinement Interface

@menu
* fit-residue-range-to-map-by-simplex::
* score-residue-range-fit-to-map::
@end menu

@node fit-residue-range-to-map-by-simplex
@subsection fit-residue-range-to-map-by-simplex
@deffn function fit-residue-range-to-map-by-simplex res1 res2 altloc chain_id imol imol_for_map

Where: 
@itemize @bullet
@item @emph{res1} is an integer number
@item @emph{res2} is an integer number
@item @emph{altloc} is a string
@item @emph{chain_id} is a string
@item @emph{imol} is an integer number
@item @emph{imol_for_map} is an integer number
@end itemize

refine residue range using simplex optimization 

@end deffn

@node score-residue-range-fit-to-map
@subsection score-residue-range-fit-to-map
@deffn function score-residue-range-fit-to-map res1 res2 altloc chain_id imol imol_for_map

Where: 
@itemize @bullet
@item @emph{res1} is an integer number
@item @emph{res2} is an integer number
@item @emph{altloc} is a string
@item @emph{chain_id} is a string
@item @emph{imol} is an integer number
@item @emph{imol_for_map} is an integer number
@end itemize

simply score the residue range fit to map 

@end deffn

@node Nomenclature Errors
@section Nomenclature Errors

@menu
* fix-nomenclature-errors::
@end menu

@node fix-nomenclature-errors
@subsection fix-nomenclature-errors
@deffn function fix-nomenclature-errors imol

Where @emph{imol} is an integer number

fix nomenclature errors in molecule number imol 

Returns: the number of resides altered. 

@end deffn

@node move molecule here (wrapper to scheme function)
@section move molecule here (wrapper to scheme function)

@menu
* wrapped-create-move-molecule-here-dialog::
* move-molecule-here-by-widget::
* move-molecule-to-screen-centre-internal::
@end menu

@node wrapped-create-move-molecule-here-dialog
@subsection wrapped-create-move-molecule-here-dialog
@deffn function wrapped-create-move-molecule-here-dialog

@end deffn

@node move-molecule-here-by-widget
@subsection move-molecule-here-by-widget
@deffn function move-molecule-here-by-widget w

Where @emph{w} is a GtkWidget

@end deffn

@node move-molecule-to-screen-centre-internal
@subsection move-molecule-to-screen-centre-internal
@deffn function move-molecule-to-screen-centre-internal imol

Where @emph{imol} is an integer number

@end deffn

@node Atom Info  Interface
@section Atom Info  Interface

@menu
* output-atom-info-as-text::
@end menu

@node output-atom-info-as-text
@subsection output-atom-info-as-text
@deffn function output-atom-info-as-text imol chain_id resno ins_code atname altconf

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno} is an integer number
@item @emph{ins_code} is a string
@item @emph{atname} is a string
@item @emph{altconf} is a string
@end itemize

output Atom Info for the give atom specs 

Actually I want to return a scheme object with occ, pos, b-factor info 

@end deffn

@node Residue Info
@section Residue Info

@menu
* do-residue-info-dialog::
* output-residue-info-dialog::
* residue-info-dialog::
* residue-info-dialog-is-displayed::
* output-residue-info-as-text::
* apply-residue-info-changes::
* do-distance-define::
* do-angle-define::
* do-torsion-define::
* residue-info-apply-all-checkbutton-toggled::
* wrapped-create-residue-info-dialog::
* clear-residue-info-edit-list::
* residue-info-release-memory::
* unset-residue-info-widget::
* clear-simple-distances::
* clear-last-simple-distance::
* wrapped-create-geometry-dialog::
* store-geometry-dialog::
@end menu

@node do-residue-info-dialog
@subsection do-residue-info-dialog
@deffn function do-residue-info-dialog

@end deffn

@node output-residue-info-dialog
@subsection output-residue-info-dialog
@deffn function output-residue-info-dialog atom_index imol

Where: 
@itemize @bullet
@item @emph{atom_index} is an integer number
@item @emph{imol} is an integer number
@end itemize

@end deffn

@node residue-info-dialog
@subsection residue-info-dialog
@deffn function residue-info-dialog imol chain_id resno ins_code

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno} is an integer number
@item @emph{ins_code} is a string
@end itemize

@end deffn

@node residue-info-dialog-is-displayed
@subsection residue-info-dialog-is-displayed
@deffn function residue-info-dialog-is-displayed

@end deffn

@node output-residue-info-as-text
@subsection output-residue-info-as-text
@deffn function output-residue-info-as-text atom_index imol

Where: 
@itemize @bullet
@item @emph{atom_index} is an integer number
@item @emph{imol} is an integer number
@end itemize

@end deffn

@node apply-residue-info-changes
@subsection apply-residue-info-changes
@deffn function apply-residue-info-changes widget

Where @emph{widget} is a GtkWidget

@end deffn

@node do-distance-define
@subsection do-distance-define
@deffn function do-distance-define

@end deffn

@node do-angle-define
@subsection do-angle-define
@deffn function do-angle-define

@end deffn

@node do-torsion-define
@subsection do-torsion-define
@deffn function do-torsion-define

@end deffn

@node residue-info-apply-all-checkbutton-toggled
@subsection residue-info-apply-all-checkbutton-toggled
@deffn function residue-info-apply-all-checkbutton-toggled

@end deffn

@node wrapped-create-residue-info-dialog
@subsection wrapped-create-residue-info-dialog
@deffn function wrapped-create-residue-info-dialog

@end deffn

@node clear-residue-info-edit-list
@subsection clear-residue-info-edit-list
@deffn function clear-residue-info-edit-list

@end deffn

@node residue-info-release-memory
@subsection residue-info-release-memory
@deffn function residue-info-release-memory widget

Where @emph{widget} is a GtkWidget

@end deffn

@node unset-residue-info-widget
@subsection unset-residue-info-widget
@deffn function unset-residue-info-widget

@end deffn

@node clear-simple-distances
@subsection clear-simple-distances
@deffn function clear-simple-distances

@end deffn

@node clear-last-simple-distance
@subsection clear-last-simple-distance
@deffn function clear-last-simple-distance

@end deffn

@node wrapped-create-geometry-dialog
@subsection wrapped-create-geometry-dialog
@deffn function wrapped-create-geometry-dialog

@end deffn

@node store-geometry-dialog
@subsection store-geometry-dialog
@deffn function store-geometry-dialog w

Where @emph{w} is a GtkWidget

@end deffn

@node Pointer Functions
@section Pointer Functions

@menu
* fill-pointer-distances-widget::
* execute-pointer-distances-settings::
* toggle-pointer-distances-show-distances::
* set-show-pointer-distances::
@end menu

@node fill-pointer-distances-widget
@subsection fill-pointer-distances-widget
@deffn function fill-pointer-distances-widget widget

Where @emph{widget} is a GtkWidget

@end deffn

@node execute-pointer-distances-settings
@subsection execute-pointer-distances-settings
@deffn function execute-pointer-distances-settings widget

Where @emph{widget} is a GtkWidget

@end deffn

@node toggle-pointer-distances-show-distances
@subsection toggle-pointer-distances-show-distances
@deffn function toggle-pointer-distances-show-distances button

Where @emph{button} is a GtkToggleButton

@end deffn

@node set-show-pointer-distances
@subsection set-show-pointer-distances
@deffn function set-show-pointer-distances istate

Where @emph{istate} is an integer number

@end deffn

@node Zoom Functions
@section Zoom Functions

@menu
* scale-zoom::
* scale-zoom-internal::
* zoom-factor::
* set-smooth-scroll-do-zoom::
* smooth-scroll-do-zoom::
* smooth-scroll-zoom-limit::
* set-smooth-scroll-zoom-limit::
* set-zoom-adjustment::
* set-zoom::
@end menu

@node scale-zoom
@subsection scale-zoom
@deffn function scale-zoom f

Where @emph{f} is a number

scale the view by f 

external (scripting) interface (with redraw) 

@end deffn

@node scale-zoom-internal
@subsection scale-zoom-internal
@deffn function scale-zoom-internal f

Where @emph{f} is a number

@end deffn

@node zoom-factor
@subsection zoom-factor
@deffn function zoom-factor

return the current zoom factor 

@end deffn

@node set-smooth-scroll-do-zoom
@subsection set-smooth-scroll-do-zoom
@deffn function set-smooth-scroll-do-zoom i

Where @emph{i} is an integer number

set smooth scroll with zoom 

@end deffn

@node smooth-scroll-do-zoom
@subsection smooth-scroll-do-zoom
@deffn function smooth-scroll-do-zoom

return the state of the above system 

@end deffn

@node smooth-scroll-zoom-limit
@subsection smooth-scroll-zoom-limit
@deffn function smooth-scroll-zoom-limit

@end deffn

@node set-smooth-scroll-zoom-limit
@subsection set-smooth-scroll-zoom-limit
@deffn function set-smooth-scroll-zoom-limit f

Where @emph{f} is a number

@end deffn

@node set-zoom-adjustment
@subsection set-zoom-adjustment
@deffn function set-zoom-adjustment w

Where @emph{w} is a GtkWidget

@end deffn

@node set-zoom
@subsection set-zoom
@deffn function set-zoom f

Where @emph{f} is a number

@end deffn

@node CNS Data Functions
@section CNS Data Functions

@menu
* handle-cns-data-file::
* handle-cns-data-file-with-cell::
@end menu

@node handle-cns-data-file
@subsection handle-cns-data-file
@deffn function handle-cns-data-file filename imol

Where: 
@itemize @bullet
@item @emph{filename} is a string
@item @emph{imol} is an integer number
@end itemize

read CNS data (currently only a placeholder) 

@end deffn

@node handle-cns-data-file-with-cell
@subsection handle-cns-data-file-with-cell
@deffn function handle-cns-data-file-with-cell filename imol a b c alpha beta gamma spg_info

Where: 
@itemize @bullet
@item @emph{filename} is a string
@item @emph{imol} is an integer number
@item @emph{a} is a number
@item @emph{b} is a number
@item @emph{c} is a number
@item @emph{alpha} is a number
@item @emph{beta} is a number
@item @emph{gamma} is a number
@item @emph{spg_info} is a string
@end itemize

read CNS data (currently only a placeholder) 

a, b,c are in Angstroems. alpha, beta, gamma are in degrees. spg is the space group info, either ;-delimited symmetry operators or the space group name 

@end deffn

@node mmCIF Functions
@section mmCIF Functions

@menu
* auto-read-cif-data-with-phases::
* read-cif-data-with-phases-sigmaa::
* read-cif-data-with-phases-diff-sigmaa::
* read-cif-data::
* read-cif-data-2fofc-map::
* read-cif-data-fofc-map::
* read-cif-data-with-phases-fo-fc::
* read-cif-data-with-phases-2fo-fc::
* read-cif-data-with-phases-nfo-fc::
* read-cif-data-with-phases-fo-alpha-calc::
* handle-cif-dictionary::
* read-cif-dictionary::
* write-connectivity::
* import-all-refmac-cifs::
@end menu

@node auto-read-cif-data-with-phases
@subsection auto-read-cif-data-with-phases
@deffn function auto-read-cif-data-with-phases filename

Where @emph{filename} is a string

@end deffn

@node read-cif-data-with-phases-sigmaa
@subsection read-cif-data-with-phases-sigmaa
@deffn function read-cif-data-with-phases-sigmaa filename

Where @emph{filename} is a string

@end deffn

@node read-cif-data-with-phases-diff-sigmaa
@subsection read-cif-data-with-phases-diff-sigmaa
@deffn function read-cif-data-with-phases-diff-sigmaa filename

Where @emph{filename} is a string

@end deffn

@node read-cif-data
@subsection read-cif-data
@deffn function read-cif-data filename imol_coords

Where: 
@itemize @bullet
@item @emph{filename} is a string
@item @emph{imol_coords} is an integer number
@end itemize

@end deffn

@node read-cif-data-2fofc-map
@subsection read-cif-data-2fofc-map
@deffn function read-cif-data-2fofc-map filename imol_coords

Where: 
@itemize @bullet
@item @emph{filename} is a string
@item @emph{imol_coords} is an integer number
@end itemize

@end deffn

@node read-cif-data-fofc-map
@subsection read-cif-data-fofc-map
@deffn function read-cif-data-fofc-map filename imol_coords

Where: 
@itemize @bullet
@item @emph{filename} is a string
@item @emph{imol_coords} is an integer number
@end itemize

@end deffn

@node read-cif-data-with-phases-fo-fc
@subsection read-cif-data-with-phases-fo-fc
@deffn function read-cif-data-with-phases-fo-fc filename

Where @emph{filename} is a string

@end deffn

@node read-cif-data-with-phases-2fo-fc
@subsection read-cif-data-with-phases-2fo-fc
@deffn function read-cif-data-with-phases-2fo-fc filename

Where @emph{filename} is a string

@end deffn

@node read-cif-data-with-phases-nfo-fc
@subsection read-cif-data-with-phases-nfo-fc
@deffn function read-cif-data-with-phases-nfo-fc filename map_type

Where: 
@itemize @bullet
@item @emph{filename} is a string
@item @emph{map_type} is an integer number
@end itemize

@end deffn

@node read-cif-data-with-phases-fo-alpha-calc
@subsection read-cif-data-with-phases-fo-alpha-calc
@deffn function read-cif-data-with-phases-fo-alpha-calc filename

Where @emph{filename} is a string

@end deffn

@node handle-cif-dictionary
@subsection handle-cif-dictionary
@deffn function handle-cif-dictionary filename

Where @emph{filename} is a string

@end deffn

@node read-cif-dictionary
@subsection read-cif-dictionary
@deffn function read-cif-dictionary filename

Where @emph{filename} is a string

@end deffn

@node write-connectivity
@subsection write-connectivity
@deffn function write-connectivity monomer_name filename

Where: 
@itemize @bullet
@item @emph{monomer_name} is a string
@item @emph{filename} is a string
@end itemize

@end deffn

@node import-all-refmac-cifs
@subsection import-all-refmac-cifs
@deffn function import-all-refmac-cifs

@end deffn

@node SHELXL Functions
@section SHELXL Functions

@menu
* read-shelx-ins-file::
* write-shelx-ins-file::
* handle-shelx-fcf-file-internal::
@end menu

@node read-shelx-ins-file
@subsection read-shelx-ins-file
@deffn function read-shelx-ins-file filename

Where @emph{filename} is a string

read a SHELXL .ins file 

@end deffn

@node write-shelx-ins-file
@subsection write-shelx-ins-file
@deffn function write-shelx-ins-file imol filename

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{filename} is a string
@end itemize

write a SHELXL .ins file for molecule number imol 

@end deffn

@node handle-shelx-fcf-file-internal
@subsection handle-shelx-fcf-file-internal
@deffn function handle-shelx-fcf-file-internal filename

Where @emph{filename} is a string

@end deffn

@node Validation Functions
@section Validation Functions

@menu
* deviant-geometry::
* is-valid-model-molecule::
* is-valid-map-molecule::
* free-geometry-graph::
* unset-geometry-graph::
* add-on-validation-graph-mol-options::
* my-delete-validaton-graph-mol-option::
* validation-graph-b-factor-mol-selector-activate::
* validation-graph-geometry-mol-selector-activate::
* validation-graph-omega-mol-selector-activate::
* validation-graph-rotamer-mol-selector-activate::
* validation-graph-density-fit-mol-selector-activate::
* gln-and-asn-b-factor-outlier-mol-selector-activate::
* validation-graph-ncs-diffs-mol-selector-activate::
* probe-mol-selector-activate::
* difference-map-peaks::
* difference-map-peaks-by-widget::
* set-difference-map-peaks-widget::
* clear-diff-map-peaks::
* wrapped-create-generate-diff-map-peaks-dialog::
* gln-asn-b-factor-outliers::
@end menu

@node deviant-geometry
@subsection deviant-geometry
@deffn function deviant-geometry imol

Where @emph{imol} is an integer number

@end deffn

@node is-valid-model-molecule
@subsection is-valid-model-molecule
@deffn function is-valid-model-molecule imol

Where @emph{imol} is an integer number

@end deffn

@node is-valid-map-molecule
@subsection is-valid-map-molecule
@deffn function is-valid-map-molecule imol

Where @emph{imol} is an integer number

@end deffn

@node free-geometry-graph
@subsection free-geometry-graph
@deffn function free-geometry-graph dialog

Where @emph{dialog} is a GtkWidget

@end deffn

@node unset-geometry-graph
@subsection unset-geometry-graph
@deffn function unset-geometry-graph dialog

Where @emph{dialog} is a GtkWidget

@end deffn

@node add-on-validation-graph-mol-options
@subsection add-on-validation-graph-mol-options
@deffn function add-on-validation-graph-mol-options menu type_in

Where: 
@itemize @bullet
@item @emph{menu} is a GtkWidget
@item @emph{type_in} is a string
@end itemize

@end deffn

@node my-delete-validaton-graph-mol-option
@subsection my-delete-validaton-graph-mol-option
@deffn function my-delete-validaton-graph-mol-option widget 

Where: 
@itemize @bullet
@item @emph{widget} is a GtkWidget
@item @emph{} is a void
@end itemize

@end deffn

@node validation-graph-b-factor-mol-selector-activate
@subsection validation-graph-b-factor-mol-selector-activate
@deffn function validation-graph-b-factor-mol-selector-activate menuitem user_data

Where: 
@itemize @bullet
@item @emph{menuitem} is a GtkMenuItem
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node validation-graph-geometry-mol-selector-activate
@subsection validation-graph-geometry-mol-selector-activate
@deffn function validation-graph-geometry-mol-selector-activate menuitem user_data

Where: 
@itemize @bullet
@item @emph{menuitem} is a GtkMenuItem
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node validation-graph-omega-mol-selector-activate
@subsection validation-graph-omega-mol-selector-activate
@deffn function validation-graph-omega-mol-selector-activate menuitem user_data

Where: 
@itemize @bullet
@item @emph{menuitem} is a GtkMenuItem
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node validation-graph-rotamer-mol-selector-activate
@subsection validation-graph-rotamer-mol-selector-activate
@deffn function validation-graph-rotamer-mol-selector-activate menuitem user_data

Where: 
@itemize @bullet
@item @emph{menuitem} is a GtkMenuItem
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node validation-graph-density-fit-mol-selector-activate
@subsection validation-graph-density-fit-mol-selector-activate
@deffn function validation-graph-density-fit-mol-selector-activate menuitem user_data

Where: 
@itemize @bullet
@item @emph{menuitem} is a GtkMenuItem
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node gln-and-asn-b-factor-outlier-mol-selector-activate
@subsection gln-and-asn-b-factor-outlier-mol-selector-activate
@deffn function gln-and-asn-b-factor-outlier-mol-selector-activate menuitem user_data

Where: 
@itemize @bullet
@item @emph{menuitem} is a GtkMenuItem
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node validation-graph-ncs-diffs-mol-selector-activate
@subsection validation-graph-ncs-diffs-mol-selector-activate
@deffn function validation-graph-ncs-diffs-mol-selector-activate menuitem user_data

Where: 
@itemize @bullet
@item @emph{menuitem} is a GtkMenuItem
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node probe-mol-selector-activate
@subsection probe-mol-selector-activate
@deffn function probe-mol-selector-activate menuitem user_data

Where: 
@itemize @bullet
@item @emph{menuitem} is a GtkMenuItem
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node difference-map-peaks
@subsection difference-map-peaks
@deffn function difference-map-peaks imol imol_coords level do_positive_level_flag do_negative_level_flag

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{imol_coords} is an integer number
@item @emph{level} is a number
@item @emph{do_positive_level_flag} is an integer number
@item @emph{do_negative_level_flag} is an integer number
@end itemize

generate a list of difference map peaks 

@end deffn

@node difference-map-peaks-by-widget
@subsection difference-map-peaks-by-widget
@deffn function difference-map-peaks-by-widget dialog

Where @emph{dialog} is a GtkWidget

@end deffn

@node set-difference-map-peaks-widget
@subsection set-difference-map-peaks-widget
@deffn function set-difference-map-peaks-widget w

Where @emph{w} is a GtkWidget

@end deffn

@node clear-diff-map-peaks
@subsection clear-diff-map-peaks
@deffn function clear-diff-map-peaks

@end deffn

@node wrapped-create-generate-diff-map-peaks-dialog
@subsection wrapped-create-generate-diff-map-peaks-dialog
@deffn function wrapped-create-generate-diff-map-peaks-dialog

@end deffn

@node gln-asn-b-factor-outliers
@subsection gln-asn-b-factor-outliers
@deffn function gln-asn-b-factor-outliers imol

Where @emph{imol} is an integer number

Make a gui for GLN adn ASN B-factor outiers, compairing the O and N temperatur factors difference to the distribution of temperature factors from the other atoms. 

@end deffn

@node Ramachandran Plot Functions
@section Ramachandran Plot Functions

@menu
* do-ramachandran-plot::
* set-kleywegt-plot-n-diffs::
* add-on-rama-choices::
* set-ramachandran-plot-contour-levels::
* set-ramachandran-plot-background-block-size::
* my-delete-ramachandran-mol-option::
* set-dynarama-is-displayed::
* dynarama-is-displayed-state::
* get-mol-from-dynarama::
* set-moving-atoms::
* accept-phi-psi-moving-atoms::
* setup-edit-phi-psi::
* setup-dynamic-distances::
* destroy-edit-backbone-rama-plot::
* ramachandran-plot-differences::
* ramachandran-plot-differences-by-chain::
* wrapped-ramachandran-plot-differences-dialog::
* do-ramachandran-plot-differences-by-widget::
* fill-ramachandran-plot-differences-option-menu-with-chain-options::
* ramachandran-plot-differences-mol-option-menu-activate-first::
* ramachandran-plot-differences-mol-option-menu-activate-second::
* ramachandran-plot-differences-chain-option-menu-activate-first::
* ramachandran-plot-differences-chain-option-menu-activate-second::
@end menu

@node do-ramachandran-plot
@subsection do-ramachandran-plot
@deffn function do-ramachandran-plot imol

Where @emph{imol} is an integer number

Ramachandran plot for molecule number imol. 

@end deffn

@node set-kleywegt-plot-n-diffs
@subsection set-kleywegt-plot-n-diffs
@deffn function set-kleywegt-plot-n-diffs n_diffs

Where @emph{n_diffs} is an integer number

set the number of biggest difference arrows on the Kleywegt plot. 

@end deffn

@node add-on-rama-choices
@subsection add-on-rama-choices
@deffn function add-on-rama-choices

@end deffn

@node set-ramachandran-plot-contour-levels
@subsection set-ramachandran-plot-contour-levels
@deffn function set-ramachandran-plot-contour-levels level_prefered level_allowed

Where: 
@itemize @bullet
@item @emph{level_prefered} is a number
@item @emph{level_allowed} is a number
@end itemize

set the contour levels for theremachandran plot, default values are 0.02 (prefered) 0.002 (allowed) 

@end deffn

@node set-ramachandran-plot-background-block-size
@subsection set-ramachandran-plot-background-block-size
@deffn function set-ramachandran-plot-background-block-size blocksize

Where @emph{blocksize} is a number

set the ramachandran plot background block size. Smaller is smoother but slower. Should be divisible exactly into 360. Default value is 10. 

@end deffn

@node my-delete-ramachandran-mol-option
@subsection my-delete-ramachandran-mol-option
@deffn function my-delete-ramachandran-mol-option widget 

Where: 
@itemize @bullet
@item @emph{widget} is a GtkWidget
@item @emph{} is a void
@end itemize

@end deffn

@node set-dynarama-is-displayed
@subsection set-dynarama-is-displayed
@deffn function set-dynarama-is-displayed dynarama_widget imol

Where: 
@itemize @bullet
@item @emph{dynarama_widget} is a GtkWidget
@item @emph{imol} is an integer number
@end itemize

@end deffn

@node dynarama-is-displayed-state
@subsection dynarama-is-displayed-state
@deffn function dynarama-is-displayed-state imol

Where @emph{imol} is an integer number

@end deffn

@node get-mol-from-dynarama
@subsection get-mol-from-dynarama
@deffn function get-mol-from-dynarama window

Where @emph{window} is a GtkWidget

@end deffn

@node set-moving-atoms
@subsection set-moving-atoms
@deffn function set-moving-atoms phi psi

Where: 
@itemize @bullet
@item @emph{phi} is a number
@item @emph{psi} is a number
@end itemize

@end deffn

@node accept-phi-psi-moving-atoms
@subsection accept-phi-psi-moving-atoms
@deffn function accept-phi-psi-moving-atoms

@end deffn

@node setup-edit-phi-psi
@subsection setup-edit-phi-psi
@deffn function setup-edit-phi-psi state

Where @emph{state} is an integer number

@end deffn

@node setup-dynamic-distances
@subsection setup-dynamic-distances
@deffn function setup-dynamic-distances state

Where @emph{state} is an integer number

@end deffn

@node destroy-edit-backbone-rama-plot
@subsection destroy-edit-backbone-rama-plot
@deffn function destroy-edit-backbone-rama-plot

@end deffn

@node ramachandran-plot-differences
@subsection ramachandran-plot-differences
@deffn function ramachandran-plot-differences imol1 imol2

Where: 
@itemize @bullet
@item @emph{imol1} is an integer number
@item @emph{imol2} is an integer number
@end itemize

@end deffn

@node ramachandran-plot-differences-by-chain
@subsection ramachandran-plot-differences-by-chain
@deffn function ramachandran-plot-differences-by-chain imol1 imol2 a_chain b_chain

Where: 
@itemize @bullet
@item @emph{imol1} is an integer number
@item @emph{imol2} is an integer number
@item @emph{a_chain} is a string
@item @emph{b_chain} is a string
@end itemize

@end deffn

@node wrapped-ramachandran-plot-differences-dialog
@subsection wrapped-ramachandran-plot-differences-dialog
@deffn function wrapped-ramachandran-plot-differences-dialog

@end deffn

@node do-ramachandran-plot-differences-by-widget
@subsection do-ramachandran-plot-differences-by-widget
@deffn function do-ramachandran-plot-differences-by-widget w

Where @emph{w} is a GtkWidget

@end deffn

@node fill-ramachandran-plot-differences-option-menu-with-chain-options
@subsection fill-ramachandran-plot-differences-option-menu-with-chain-options
@deffn function fill-ramachandran-plot-differences-option-menu-with-chain-options chain_optionmenu is_first_mol_flag

Where: 
@itemize @bullet
@item @emph{chain_optionmenu} is a GtkWidget
@item @emph{is_first_mol_flag} is an integer number
@end itemize

@end deffn

@node ramachandran-plot-differences-mol-option-menu-activate-first
@subsection ramachandran-plot-differences-mol-option-menu-activate-first
@deffn function ramachandran-plot-differences-mol-option-menu-activate-first item pos

Where: 
@itemize @bullet
@item @emph{item} is a GtkWidget
@item @emph{pos} is a GtkPositionType
@end itemize

@end deffn

@node ramachandran-plot-differences-mol-option-menu-activate-second
@subsection ramachandran-plot-differences-mol-option-menu-activate-second
@deffn function ramachandran-plot-differences-mol-option-menu-activate-second item pos

Where: 
@itemize @bullet
@item @emph{item} is a GtkWidget
@item @emph{pos} is a GtkPositionType
@end itemize

@end deffn

@node ramachandran-plot-differences-chain-option-menu-activate-first
@subsection ramachandran-plot-differences-chain-option-menu-activate-first
@deffn function ramachandran-plot-differences-chain-option-menu-activate-first item pos

Where: 
@itemize @bullet
@item @emph{item} is a GtkWidget
@item @emph{pos} is a GtkPositionType
@end itemize

@end deffn

@node ramachandran-plot-differences-chain-option-menu-activate-second
@subsection ramachandran-plot-differences-chain-option-menu-activate-second
@deffn function ramachandran-plot-differences-chain-option-menu-activate-second item pos

Where: 
@itemize @bullet
@item @emph{item} is a GtkWidget
@item @emph{pos} is a GtkPositionType
@end itemize

@end deffn

@node Sequence View Interface
@section Sequence View Interface

@menu
* do-sequence-view::
* add-on-sequence-view-choices::
* set-sequence-view-is-displayed::
@end menu

@node do-sequence-view
@subsection do-sequence-view
@deffn function do-sequence-view imol

Where @emph{imol} is an integer number

@end deffn

@node add-on-sequence-view-choices
@subsection add-on-sequence-view-choices
@deffn function add-on-sequence-view-choices

@end deffn

@node set-sequence-view-is-displayed
@subsection set-sequence-view-is-displayed
@deffn function set-sequence-view-is-displayed widget imol

Where: 
@itemize @bullet
@item @emph{widget} is a GtkWidget
@item @emph{imol} is an integer number
@end itemize

@end deffn

@node Atom Labelling
@section Atom Labelling

@menu
* add-atom-label::
* remove-atom-label::
* remove-all-atom-labels::
* set-label-on-recentre-flag::
* centre-atom-label-status::
* set-brief-atom-labels::
* brief-atom-labels-state::
@end menu

@node add-atom-label
@subsection add-atom-label
@deffn function add-atom-label imol chain_id iresno atom_id

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{iresno} is an integer number
@item @emph{atom_id} is a string
@end itemize

@end deffn

@node remove-atom-label
@subsection remove-atom-label
@deffn function remove-atom-label imol chain_id iresno atom_id

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{iresno} is an integer number
@item @emph{atom_id} is a string
@end itemize

@end deffn

@node remove-all-atom-labels
@subsection remove-all-atom-labels
@deffn function remove-all-atom-labels

@end deffn

@node set-label-on-recentre-flag
@subsection set-label-on-recentre-flag
@deffn function set-label-on-recentre-flag i

Where @emph{i} is an integer number

@end deffn

@node centre-atom-label-status
@subsection centre-atom-label-status
@deffn function centre-atom-label-status

@end deffn

@node set-brief-atom-labels
@subsection set-brief-atom-labels
@deffn function set-brief-atom-labels istat

Where @emph{istat} is an integer number

use brief atom names for on-screen labels 

call with istat=1 to use brief labels, istat=0 for normal labels 

@end deffn

@node brief-atom-labels-state
@subsection brief-atom-labels-state
@deffn function brief-atom-labels-state

the brief atom label state 

@end deffn

@node Screen Rotation
@section Screen Rotation

@menu
* rotate-y-scene::
* rotate-x-scene::
* rotate-z-scene::
* spin-zoom-trans::
@end menu

@node rotate-y-scene
@subsection rotate-y-scene
@deffn function rotate-y-scene nsteps stepsize

Where: 
@itemize @bullet
@item @emph{nsteps} is an integer number
@item @emph{stepsize} is a number
@end itemize

rotate view round y axis stepsize degrees for nstep such steps 

@end deffn

@node rotate-x-scene
@subsection rotate-x-scene
@deffn function rotate-x-scene nsteps stepsize

Where: 
@itemize @bullet
@item @emph{nsteps} is an integer number
@item @emph{stepsize} is a number
@end itemize

rotate view round x axis stepsize degrees for nstep such steps 

@end deffn

@node rotate-z-scene
@subsection rotate-z-scene
@deffn function rotate-z-scene nsteps stepsize

Where: 
@itemize @bullet
@item @emph{nsteps} is an integer number
@item @emph{stepsize} is a number
@end itemize

rotate view round z axis stepsize degrees for nstep such steps 

@end deffn

@node spin-zoom-trans
@subsection spin-zoom-trans
@deffn function spin-zoom-trans axis nstep stepsize zoom_by x_rel y_rel z_rel

Where: 
@itemize @bullet
@item @emph{axis} is an integer number
@item @emph{nstep} is an integer number
@item @emph{stepsize} is a number
@item @emph{zoom_by} is a number
@item @emph{x_rel} is a number
@item @emph{y_rel} is a number
@item @emph{z_rel} is a number
@end itemize

Bells and whistles rotation. 

spin, zoom and translate.

where axis is either x,y or z, stepsize is in degrees, zoom_by and x_rel etc are how much zoom, x,y,z should have changed by after nstep steps. 

@end deffn

@node Background Colour
@section Background Colour

@menu
* set-background-colour::
* redraw-background::
* background-is-black-p::
@end menu

@node set-background-colour
@subsection set-background-colour
@deffn function set-background-colour red green blue

Where: 
@itemize @bullet
@item @emph{red} is a number
@item @emph{green} is a number
@item @emph{blue} is a number
@end itemize

set the background colour 

red, green and blue are numbers between 0.0 and 1.0 

@end deffn

@node redraw-background
@subsection redraw-background
@deffn function redraw-background

re draw the background colour when switching between mono and stereo 

@end deffn

@node background-is-black-p
@subsection background-is-black-p
@deffn function background-is-black-p

is the background black (or nearly black)? 

Returns: 1 if the background is black (or nearly black), else return 0. 

@end deffn

@node Ligand Fitting Functions
@section Ligand Fitting Functions

@menu
* set-ligand-acceptable-fit-fraction::
* set-ligand-cluster-sigma-level::
* set-ligand-flexible-ligand-n-samples::
* set-ligand-verbose-reporting::
* set-find-ligand-n-top-ligands::
* set-find-ligand-mask-waters::
* set-ligand-cluster-sigma-level-from-widget::
* set-ligand-search-protein-molecule::
* set-ligand-search-map-molecule::
* add-ligand-search-ligand-molecule::
* add-ligand-search-wiggly-ligand-molecule::
* free-ligand-search-user-data::
* add-ligand-clear-ligands::
* ligand-expert::
* do-find-ligands-dialog::
* fill-ligands-dialog::
* fill-ligands-dialog-map-bits::
* fill-ligands-dialog-protein-bits::
* fill-ligands-dialog-ligands-bits::
* do-find-ligand-many-atoms-in-ligands::
* fill-ligands-dialog-map-bits-by-dialog-name::
* fill-ligands-dialog-protein-bits-by-dialog-name::
* fill-vbox-with-coords-options-by-dialog-name::
* fill-ligands-sigma-level-entry::
* fill-ligands-expert-options::
* set-ligand-expert-options-from-widget::
* execute-get-mols-ligand-search::
* free-blob-dialog-memory::
* flip-ligand::
@end menu

@node set-ligand-acceptable-fit-fraction
@subsection set-ligand-acceptable-fit-fraction
@deffn function set-ligand-acceptable-fit-fraction f

Where @emph{f} is a number

set the fraction of atoms which must be in positive density after a ligand fit 

@end deffn

@node set-ligand-cluster-sigma-level
@subsection set-ligand-cluster-sigma-level
@deffn function set-ligand-cluster-sigma-level f

Where @emph{f} is a number

set the default sigma level that the map is searched to find potential ligand sites 

@end deffn

@node set-ligand-flexible-ligand-n-samples
@subsection set-ligand-flexible-ligand-n-samples
@deffn function set-ligand-flexible-ligand-n-samples i

Where @emph{i} is an integer number

set the number of conformation samples 

big ligands require more samples. Default 10. 

@end deffn

@node set-ligand-verbose-reporting
@subsection set-ligand-verbose-reporting
@deffn function set-ligand-verbose-reporting i

Where @emph{i} is an integer number

@end deffn

@node set-find-ligand-n-top-ligands
@subsection set-find-ligand-n-top-ligands
@deffn function set-find-ligand-n-top-ligands n

Where @emph{n} is an integer number

search the top n sites for ligands. 

Default 10. 

@end deffn

@node set-find-ligand-mask-waters
@subsection set-find-ligand-mask-waters
@deffn function set-find-ligand-mask-waters istate

Where @emph{istate} is an integer number

how shall we treat the waters during ligand fitting? 

pass with istate=1 for waters to mask the map in the same way that protein atoms do. 

@end deffn

@node set-ligand-cluster-sigma-level-from-widget
@subsection set-ligand-cluster-sigma-level-from-widget
@deffn function set-ligand-cluster-sigma-level-from-widget button

Where @emph{button} is a GtkWidget

@end deffn

@node set-ligand-search-protein-molecule
@subsection set-ligand-search-protein-molecule
@deffn function set-ligand-search-protein-molecule imol

Where @emph{imol} is an integer number

set the protein molecule for ligand searching 

@end deffn

@node set-ligand-search-map-molecule
@subsection set-ligand-search-map-molecule
@deffn function set-ligand-search-map-molecule imol_map

Where @emph{imol_map} is an integer number

set the map molecule for ligand searching 

@end deffn

@node add-ligand-search-ligand-molecule
@subsection add-ligand-search-ligand-molecule
@deffn function add-ligand-search-ligand-molecule imol_ligand

Where @emph{imol_ligand} is an integer number

add a rigid ligand molecule to the list of ligands to search for in ligand searching 

@end deffn

@node add-ligand-search-wiggly-ligand-molecule
@subsection add-ligand-search-wiggly-ligand-molecule
@deffn function add-ligand-search-wiggly-ligand-molecule imol_ligand

Where @emph{imol_ligand} is an integer number

add a flexible ligand molecule to the list of ligands to search for in ligand searching 

@end deffn

@node free-ligand-search-user-data
@subsection free-ligand-search-user-data
@deffn function free-ligand-search-user-data button

Where @emph{button} is a GtkWidget

@end deffn

@node add-ligand-clear-ligands
@subsection add-ligand-clear-ligands
@deffn function add-ligand-clear-ligands

@end deffn

@node ligand-expert
@subsection ligand-expert
@deffn function ligand-expert

this sets the flag to have expert option ligand entries in the Ligand Searching dialog 

@end deffn

@node do-find-ligands-dialog
@subsection do-find-ligands-dialog
@deffn function do-find-ligands-dialog

display the find ligands dialog, if maps, coords and ligands are available 

@end deffn

@node fill-ligands-dialog
@subsection fill-ligands-dialog
@deffn function fill-ligands-dialog dialog

Where @emph{dialog} is a GtkWidget

@end deffn

@node fill-ligands-dialog-map-bits
@subsection fill-ligands-dialog-map-bits
@deffn function fill-ligands-dialog-map-bits dialog diff_maps_only_flag

Where: 
@itemize @bullet
@item @emph{dialog} is a GtkWidget
@item @emph{diff_maps_only_flag} is an integer number
@end itemize

@end deffn

@node fill-ligands-dialog-protein-bits
@subsection fill-ligands-dialog-protein-bits
@deffn function fill-ligands-dialog-protein-bits dialog

Where @emph{dialog} is a GtkWidget

@end deffn

@node fill-ligands-dialog-ligands-bits
@subsection fill-ligands-dialog-ligands-bits
@deffn function fill-ligands-dialog-ligands-bits dialog

Where @emph{dialog} is a GtkWidget

@end deffn

@node do-find-ligand-many-atoms-in-ligands
@subsection do-find-ligand-many-atoms-in-ligands
@deffn function do-find-ligand-many-atoms-in-ligands find_ligand_dialog

Where @emph{find_ligand_dialog} is a GtkWidget

@end deffn

@node fill-ligands-dialog-map-bits-by-dialog-name
@subsection fill-ligands-dialog-map-bits-by-dialog-name
@deffn function fill-ligands-dialog-map-bits-by-dialog-name find_ligand_dialog dialog_name diff_maps_only_flag

Where: 
@itemize @bullet
@item @emph{find_ligand_dialog} is a GtkWidget
@item @emph{dialog_name} is a string
@item @emph{diff_maps_only_flag} is an integer number
@end itemize

@end deffn

@node fill-ligands-dialog-protein-bits-by-dialog-name
@subsection fill-ligands-dialog-protein-bits-by-dialog-name
@deffn function fill-ligands-dialog-protein-bits-by-dialog-name find_ligand_dialog dialog_name

Where: 
@itemize @bullet
@item @emph{find_ligand_dialog} is a GtkWidget
@item @emph{dialog_name} is a string
@end itemize

@end deffn

@node fill-vbox-with-coords-options-by-dialog-name
@subsection fill-vbox-with-coords-options-by-dialog-name
@deffn function fill-vbox-with-coords-options-by-dialog-name find_ligand_dialog dialog_name have_ncs_flag

Where: 
@itemize @bullet
@item @emph{find_ligand_dialog} is a GtkWidget
@item @emph{dialog_name} is a string
@item @emph{have_ncs_flag} is an integer number
@end itemize

@end deffn

@node fill-ligands-sigma-level-entry
@subsection fill-ligands-sigma-level-entry
@deffn function fill-ligands-sigma-level-entry dialog

Where @emph{dialog} is a GtkWidget

@end deffn

@node fill-ligands-expert-options
@subsection fill-ligands-expert-options
@deffn function fill-ligands-expert-options find_ligand_dialog

Where @emph{find_ligand_dialog} is a GtkWidget

@end deffn

@node set-ligand-expert-options-from-widget
@subsection set-ligand-expert-options-from-widget
@deffn function set-ligand-expert-options-from-widget button

Where @emph{button} is a GtkWidget

@end deffn

@node execute-get-mols-ligand-search
@subsection execute-get-mols-ligand-search
@deffn function execute-get-mols-ligand-search button

Where @emph{button} is a GtkWidget

"Template"-based matching. Overlap the first residue in imol_ligand onto the residue specified by the reference parameters. Use graph matching, not atom names. 


otherwise return the RT operator 

Returns: success status, f = failed to find residue in either imol_ligand or imo_ref,

@end deffn

@node free-blob-dialog-memory
@subsection free-blob-dialog-memory
@deffn function free-blob-dialog-memory w

Where @emph{w} is a GtkWidget

@end deffn

@node flip-ligand
@subsection flip-ligand
@deffn function flip-ligand imol chain_id resno

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno} is an integer number
@end itemize

@end deffn

@node Water Fitting Functions
@section Water Fitting Functions

@menu
* renumber-waters::
* fill-find-waters-dialog::
* execute-find-waters::
* execute-find-waters-real::
* find-waters::
* get-text-for-find-waters-sigma-cut-off::
* set-value-for-find-waters-sigma-cut-off::
* on-big-blob-button-clicked::
* set-ligand-water-spherical-variance-limit::
* set-ligand-water-to-protein-distance-limits::
* set-ligand-water-n-cycles::
* set-write-peaksearched-waters::
* execute-find-blobs::
* execute-find-blobs-from-widget::
* wrapped-create-unmodelled-blobs-dialog::
@end menu

@node renumber-waters
@subsection renumber-waters
@deffn function renumber-waters imol

Where @emph{imol} is an integer number

Renumber the waters of molecule number imol with consecutive numbering 

@end deffn

@node fill-find-waters-dialog
@subsection fill-find-waters-dialog
@deffn function fill-find-waters-dialog find_ligand_dialog

Where @emph{find_ligand_dialog} is a GtkWidget

@end deffn

@node execute-find-waters
@subsection execute-find-waters
@deffn function execute-find-waters ok_button

Where @emph{ok_button} is a GtkWidget

@end deffn

@node execute-find-waters-real
@subsection execute-find-waters-real
@deffn function execute-find-waters-real imol_for_map imol_for_protein new_waters_mol_flag sigma_cut_off

Where: 
@itemize @bullet
@item @emph{imol_for_map} is an integer number
@item @emph{imol_for_protein} is an integer number
@item @emph{new_waters_mol_flag} is an integer number
@item @emph{sigma_cut_off} is a number
@end itemize

find waters 

@end deffn

@node find-waters
@subsection find-waters
@deffn function find-waters imol_for_map imol_for_protein new_waters_mol_flag sigma_cut_off show_blobs_dialog

Where: 
@itemize @bullet
@item @emph{imol_for_map} is an integer number
@item @emph{imol_for_protein} is an integer number
@item @emph{new_waters_mol_flag} is an integer number
@item @emph{sigma_cut_off} is a number
@item @emph{show_blobs_dialog} is an integer number
@end itemize

@end deffn

@node get-text-for-find-waters-sigma-cut-off
@subsection get-text-for-find-waters-sigma-cut-off
@deffn function get-text-for-find-waters-sigma-cut-off

@end deffn

@node set-value-for-find-waters-sigma-cut-off
@subsection set-value-for-find-waters-sigma-cut-off
@deffn function set-value-for-find-waters-sigma-cut-off f

Where @emph{f} is a number

@end deffn

@node on-big-blob-button-clicked
@subsection on-big-blob-button-clicked
@deffn function on-big-blob-button-clicked button user_data

Where: 
@itemize @bullet
@item @emph{button} is a GtkButton
@item @emph{user_data} is an integer number
@end itemize

@end deffn

@node set-ligand-water-spherical-variance-limit
@subsection set-ligand-water-spherical-variance-limit
@deffn function set-ligand-water-spherical-variance-limit f

Where @emph{f} is a number

@end deffn

@node set-ligand-water-to-protein-distance-limits
@subsection set-ligand-water-to-protein-distance-limits
@deffn function set-ligand-water-to-protein-distance-limits f1 f2

Where: 
@itemize @bullet
@item @emph{f1} is a number
@item @emph{f2} is a number
@end itemize

set ligand to protein distance limits 

f1 is the minimum distance, f2 is the maximum distance 

@end deffn

@node set-ligand-water-n-cycles
@subsection set-ligand-water-n-cycles
@deffn function set-ligand-water-n-cycles i

Where @emph{i} is an integer number

set the number of cycles of water searching 

@end deffn

@node set-write-peaksearched-waters
@subsection set-write-peaksearched-waters
@deffn function set-write-peaksearched-waters

@end deffn

@node execute-find-blobs
@subsection execute-find-blobs
@deffn function execute-find-blobs imol_model imol_for_map cut_off interactive_flag

Where: 
@itemize @bullet
@item @emph{imol_model} is an integer number
@item @emph{imol_for_map} is an integer number
@item @emph{cut_off} is a number
@item @emph{interactive_flag} is an integer number
@end itemize

find blobs 

@end deffn

@node execute-find-blobs-from-widget
@subsection execute-find-blobs-from-widget
@deffn function execute-find-blobs-from-widget dialog

Where @emph{dialog} is a GtkWidget

@end deffn

@node wrapped-create-unmodelled-blobs-dialog
@subsection wrapped-create-unmodelled-blobs-dialog
@deffn function wrapped-create-unmodelled-blobs-dialog

@end deffn

@node Bond Representation
@section Bond Representation

@menu
* set-default-bond-thickness::
* set-bond-thickness::
* set-bond-thickness-intermediate-atoms::
* set-unbonded-atom-star-size::
* get-default-bond-thickness::
* set-draw-zero-occ-markers::
* set-draw-hydrogens::
* draw-hydrogens-state::
* graphics-to-ca-representation::
* graphics-to-ca-plus-ligands-representation::
* graphics-to-bonds-no-waters-representation::
* graphics-to-bonds-representation::
* graphics-to-ca-plus-ligands-sec-struct-representation::
* graphics-to-sec-struct-bonds-representation::
* graphics-to-rainbow-representation::
* graphics-to-b-factor-representation::
* graphics-to-b-factor-cas-representation::
* graphics-to-occupancy-representation::
* graphics-molecule-bond-type::
* set-b-factor-bonds-scale-factor::
* wrapped-create-bond-parameters-dialog::
* apply-bond-parameters::
* make-ball-and-stick::
* clear-ball-and-stick::
* set-show-additional-representation::
* delete-additional-representation::
* additional-representation-by-string::
* additional-representation-by-attributes::
* wrapped-create-add-additional-representation-gui::
* add-additional-representation-by-widget::
* add-reps-molecule-option-menu-item-select::
@end menu

@node set-default-bond-thickness
@subsection set-default-bond-thickness
@deffn function set-default-bond-thickness t

Where @emph{t} is an integer number

set the default thickness for bonds (e.g. in ~/.coot) 

@end deffn

@node set-bond-thickness
@subsection set-bond-thickness
@deffn function set-bond-thickness imol t

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{t} is a number
@end itemize

set the thickness of the bonds in molecule number imol to t pixels 

@end deffn

@node set-bond-thickness-intermediate-atoms
@subsection set-bond-thickness-intermediate-atoms
@deffn function set-bond-thickness-intermediate-atoms t

Where @emph{t} is a number

set the thickness of the bonds of the intermediate atoms to t pixels 

@end deffn

@node set-unbonded-atom-star-size
@subsection set-unbonded-atom-star-size
@deffn function set-unbonded-atom-star-size f

Where @emph{f} is a number

@end deffn

@node get-default-bond-thickness
@subsection get-default-bond-thickness
@deffn function get-default-bond-thickness

@end deffn

@node set-draw-zero-occ-markers
@subsection set-draw-zero-occ-markers
@deffn function set-draw-zero-occ-markers status

Where @emph{status} is an integer number

set status of drawing zero occupancy markers. 

default status is 1. 

@end deffn

@node set-draw-hydrogens
@subsection set-draw-hydrogens
@deffn function set-draw-hydrogens imol istat

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{istat} is an integer number
@end itemize

set the hydrogen drawing state. istat = 0 is hydrogens off, istat = 1: show hydrogens 

@end deffn

@node draw-hydrogens-state
@subsection draw-hydrogens-state
@deffn function draw-hydrogens-state imol

Where @emph{imol} is an integer number

the state of draw hydrogens for molecule number imol. 

return -1 on bad imol. 

@end deffn

@node graphics-to-ca-representation
@subsection graphics-to-ca-representation
@deffn function graphics-to-ca-representation imol

Where @emph{imol} is an integer number

draw molecule number imol as CAs 

@end deffn

@node graphics-to-ca-plus-ligands-representation
@subsection graphics-to-ca-plus-ligands-representation
@deffn function graphics-to-ca-plus-ligands-representation imol

Where @emph{imol} is an integer number

draw molecule number imol as CA + ligands 

@end deffn

@node graphics-to-bonds-no-waters-representation
@subsection graphics-to-bonds-no-waters-representation
@deffn function graphics-to-bonds-no-waters-representation imol

Where @emph{imol} is an integer number

draw molecule number imol with no waters 

@end deffn

@node graphics-to-bonds-representation
@subsection graphics-to-bonds-representation
@deffn function graphics-to-bonds-representation mol

Where @emph{mol} is an integer number

draw molecule number imol with normal bonds 

@end deffn

@node graphics-to-ca-plus-ligands-sec-struct-representation
@subsection graphics-to-ca-plus-ligands-sec-struct-representation
@deffn function graphics-to-ca-plus-ligands-sec-struct-representation imol

Where @emph{imol} is an integer number

draw molecule number imol with CA bonds in secondary structure representation and ligands 

@end deffn

@node graphics-to-sec-struct-bonds-representation
@subsection graphics-to-sec-struct-bonds-representation
@deffn function graphics-to-sec-struct-bonds-representation imol

Where @emph{imol} is an integer number

draw molecule number imol with bonds in secondary structure representation 

@end deffn

@node graphics-to-rainbow-representation
@subsection graphics-to-rainbow-representation
@deffn function graphics-to-rainbow-representation imol

Where @emph{imol} is an integer number

draw molecule number imol in Jones' Rainbow 

@end deffn

@node graphics-to-b-factor-representation
@subsection graphics-to-b-factor-representation
@deffn function graphics-to-b-factor-representation imol

Where @emph{imol} is an integer number

draw molecule number imol coloured by B-factor 

@end deffn

@node graphics-to-b-factor-cas-representation
@subsection graphics-to-b-factor-cas-representation
@deffn function graphics-to-b-factor-cas-representation imol

Where @emph{imol} is an integer number

draw molecule number imol coloured by B-factor, CA + ligands 

@end deffn

@node graphics-to-occupancy-representation
@subsection graphics-to-occupancy-representation
@deffn function graphics-to-occupancy-representation imol

Where @emph{imol} is an integer number

draw molecule number imol coloured by occupancy 

@end deffn

@node graphics-molecule-bond-type
@subsection graphics-molecule-bond-type
@deffn function graphics-molecule-bond-type imol

Where @emph{imol} is an integer number

what is the bond drawing state of molecule number imol 

@end deffn

@node set-b-factor-bonds-scale-factor
@subsection set-b-factor-bonds-scale-factor
@deffn function set-b-factor-bonds-scale-factor imol f

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{f} is a number
@end itemize

scale the colours for colour by b factor representation 

@end deffn

@node wrapped-create-bond-parameters-dialog
@subsection wrapped-create-bond-parameters-dialog
@deffn function wrapped-create-bond-parameters-dialog

@end deffn

@node apply-bond-parameters
@subsection apply-bond-parameters
@deffn function apply-bond-parameters w

Where @emph{w} is a GtkWidget

@end deffn

@node make-ball-and-stick
@subsection make-ball-and-stick
@deffn function make-ball-and-stick imol atom_selection_str bond_thickness sphere_size do_spheres_flag

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{atom_selection_str} is a string
@item @emph{bond_thickness} is a number
@item @emph{sphere_size} is a number
@item @emph{do_spheres_flag} is an integer number
@end itemize

make a ball and stick representation of imol given atom selection 

e.g. (make-ball-and-stick 0 "/1" 0.15 0.25 1) 

@end deffn

@node clear-ball-and-stick
@subsection clear-ball-and-stick
@deffn function clear-ball-and-stick imol

Where @emph{imol} is an integer number

clear ball and stick representation of molecule number imol 

@end deffn

@node set-show-additional-representation
@subsection set-show-additional-representation
@deffn function set-show-additional-representation imol representation_number on_off_flag

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{representation_number} is an integer number
@item @emph{on_off_flag} is an integer number
@end itemize

@end deffn

@node delete-additional-representation
@subsection delete-additional-representation
@deffn function delete-additional-representation imol representation_number

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{representation_number} is an integer number
@end itemize

@end deffn

@node additional-representation-by-string
@subsection additional-representation-by-string
@deffn function additional-representation-by-string imol atom_selection representation_type bonds_box_type bond_width draw_hydrogens_flag

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{atom_selection} is a string
@item @emph{representation_type} is an integer number
@item @emph{bonds_box_type} is an integer number
@item @emph{bond_width} is a number
@item @emph{draw_hydrogens_flag} is an integer number
@end itemize

@end deffn

@node additional-representation-by-attributes
@subsection additional-representation-by-attributes
@deffn function additional-representation-by-attributes imol chain_id resno_start resno_end ins_code representation_type bonds_box_type bond_width draw_hydrogens_flag

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno_start} is an integer number
@item @emph{resno_end} is an integer number
@item @emph{ins_code} is a string
@item @emph{representation_type} is an integer number
@item @emph{bonds_box_type} is an integer number
@item @emph{bond_width} is a number
@item @emph{draw_hydrogens_flag} is an integer number
@end itemize

@end deffn

@node wrapped-create-add-additional-representation-gui
@subsection wrapped-create-add-additional-representation-gui
@deffn function wrapped-create-add-additional-representation-gui

@end deffn

@node add-additional-representation-by-widget
@subsection add-additional-representation-by-widget
@deffn function add-additional-representation-by-widget w

Where @emph{w} is a GtkWidget

@end deffn

@node add-reps-molecule-option-menu-item-select
@subsection add-reps-molecule-option-menu-item-select
@deffn function add-reps-molecule-option-menu-item-select item pos

Where: 
@itemize @bullet
@item @emph{item} is a GtkWidget
@item @emph{pos} is a GtkPositionType
@end itemize

@end deffn

@node Dots Representation
@section Dots Representation

@menu
* dots::
* clear-dots::
* n-dots-sets::
@end menu

@node dots
@subsection dots
@deffn function dots imol atom_selection_str dot_density sphere_size_scale

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{atom_selection_str} is a string
@item @emph{dot_density} is a number
@item @emph{sphere_size_scale} is a number
@end itemize

display dotted surface 

return a generic objects handle (which can be used to remove later) 

@end deffn

@node clear-dots
@subsection clear-dots
@deffn function clear-dots imol dots_handle

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{dots_handle} is an integer number
@end itemize

clear dots in imol with dots_handle 

@end deffn

@node n-dots-sets
@subsection n-dots-sets
@deffn function n-dots-sets imol

Where @emph{imol} is an integer number

return the number of dots sets for molecule number imol 

@end deffn

@node Pep-flip Interface
@section Pep-flip Interface

@menu
* do-pepflip::
* pepflip::
@end menu

@node do-pepflip
@subsection do-pepflip
@deffn function do-pepflip state

Where @emph{state} is an integer number

@end deffn

@node pepflip
@subsection pepflip
@deffn function pepflip imol chain_id resno inscode

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno} is an integer number
@item @emph{inscode} is a string
@end itemize

pepflip the given residue 

@end deffn

@node Rigid Body Refinement Interface
@section Rigid Body Refinement Interface

@menu
* do-rigid-body-refine::
* rigid-body-refine-zone::
* rigid-body-refine-by-atom-selection::
* execute-rigid-body-refine::
* set-rigid-body-fit-acceptable-fit-fraction::
@end menu

@node do-rigid-body-refine
@subsection do-rigid-body-refine
@deffn function do-rigid-body-refine state

Where @emph{state} is an integer number

@end deffn

@node rigid-body-refine-zone
@subsection rigid-body-refine-zone
@deffn function rigid-body-refine-zone reso_start resno_end chain_id imol

Where: 
@itemize @bullet
@item @emph{reso_start} is an integer number
@item @emph{resno_end} is an integer number
@item @emph{chain_id} is a string
@item @emph{imol} is an integer number
@end itemize

setup rigid body refine zone 

where we set the atom selection holders according to the arguments and then call execute_rigid_body_refine() 

@end deffn

@node rigid-body-refine-by-atom-selection
@subsection rigid-body-refine-by-atom-selection
@deffn function rigid-body-refine-by-atom-selection imol atom_selection_string

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{atom_selection_string} is a string
@end itemize

@end deffn

@node execute-rigid-body-refine
@subsection execute-rigid-body-refine
@deffn function execute-rigid-body-refine auto_range_flag

Where @emph{auto_range_flag} is an integer number

@end deffn

@node set-rigid-body-fit-acceptable-fit-fraction
@subsection set-rigid-body-fit-acceptable-fit-fraction
@deffn function set-rigid-body-fit-acceptable-fit-fraction f

Where @emph{f} is a number

set rigid body fraction of atoms in positive density 

@end deffn

@node Dynamic Map
@section Dynamic Map

@menu
* toggle-dynamic-map-display-size::
* toggle-dynamic-map-sampling::
* set-map-dynamic-map-sampling-checkbutton::
* set-map-dynamic-map-display-size-checkbutton::
* set-dynamic-map-size-display-on::
* set-dynamic-map-size-display-off::
* get-dynamic-map-size-display::
* set-dynamic-map-sampling-on::
* set-dynamic-map-sampling-off::
* get-dynamic-map-sampling::
* set-dynamic-map-zoom-offset::
@end menu

@node toggle-dynamic-map-display-size
@subsection toggle-dynamic-map-display-size
@deffn function toggle-dynamic-map-display-size

@end deffn

@node toggle-dynamic-map-sampling
@subsection toggle-dynamic-map-sampling
@deffn function toggle-dynamic-map-sampling

@end deffn

@node set-map-dynamic-map-sampling-checkbutton
@subsection set-map-dynamic-map-sampling-checkbutton
@deffn function set-map-dynamic-map-sampling-checkbutton checkbutton

Where @emph{checkbutton} is a GtkWidget

@end deffn

@node set-map-dynamic-map-display-size-checkbutton
@subsection set-map-dynamic-map-display-size-checkbutton
@deffn function set-map-dynamic-map-display-size-checkbutton checkbutton

Where @emph{checkbutton} is a GtkWidget

@end deffn

@node set-dynamic-map-size-display-on
@subsection set-dynamic-map-size-display-on
@deffn function set-dynamic-map-size-display-on

@end deffn

@node set-dynamic-map-size-display-off
@subsection set-dynamic-map-size-display-off
@deffn function set-dynamic-map-size-display-off

@end deffn

@node get-dynamic-map-size-display
@subsection get-dynamic-map-size-display
@deffn function get-dynamic-map-size-display

@end deffn

@node set-dynamic-map-sampling-on
@subsection set-dynamic-map-sampling-on
@deffn function set-dynamic-map-sampling-on

@end deffn

@node set-dynamic-map-sampling-off
@subsection set-dynamic-map-sampling-off
@deffn function set-dynamic-map-sampling-off

@end deffn

@node get-dynamic-map-sampling
@subsection get-dynamic-map-sampling
@deffn function get-dynamic-map-sampling

@end deffn

@node set-dynamic-map-zoom-offset
@subsection set-dynamic-map-zoom-offset
@deffn function set-dynamic-map-zoom-offset i

Where @emph{i} is an integer number

@end deffn

@node Add Terminal Residue Functions
@section Add Terminal Residue Functions

@menu
* do-add-terminal-residue::
* set-add-terminal-residue-n-phi-psi-trials::
* set-add-terminal-residue-add-other-residue-flag::
* set-terminal-residue-do-rigid-body-refine::
* add-terminal-residue-immediate-addition-state::
* set-add-terminal-residue-immediate-addition::
* add-terminal-residue::
* set-add-terminal-residue-default-residue-type::
* set-add-terminal-residue-do-post-refine::
* add-terminal-residue-do-post-refine-state::
@end menu

@node do-add-terminal-residue
@subsection do-add-terminal-residue
@deffn function do-add-terminal-residue state

Where @emph{state} is an integer number

@end deffn

@node set-add-terminal-residue-n-phi-psi-trials
@subsection set-add-terminal-residue-n-phi-psi-trials
@deffn function set-add-terminal-residue-n-phi-psi-trials n

Where @emph{n} is an integer number

@end deffn

@node set-add-terminal-residue-add-other-residue-flag
@subsection set-add-terminal-residue-add-other-residue-flag
@deffn function set-add-terminal-residue-add-other-residue-flag i

Where @emph{i} is an integer number

@end deffn

@node set-terminal-residue-do-rigid-body-refine
@subsection set-terminal-residue-do-rigid-body-refine
@deffn function set-terminal-residue-do-rigid-body-refine v

Where @emph{v} is an integer number

@end deffn

@node add-terminal-residue-immediate-addition-state
@subsection add-terminal-residue-immediate-addition-state
@deffn function add-terminal-residue-immediate-addition-state

@end deffn

@node set-add-terminal-residue-immediate-addition
@subsection set-add-terminal-residue-immediate-addition
@deffn function set-add-terminal-residue-immediate-addition i

Where @emph{i} is an integer number

set immediate addition of terminal residue 

call with i=1 for immediate addtion 

@end deffn

@node add-terminal-residue
@subsection add-terminal-residue
@deffn function add-terminal-residue imol chain_id residue_number residue_type immediate_add

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{residue_number} is an integer number
@item @emph{residue_type} is a string
@item @emph{immediate_add} is an integer number
@end itemize

Add a terminal residue. 

return 0 on failure, 1 on success 

@end deffn

@node set-add-terminal-residue-default-residue-type
@subsection set-add-terminal-residue-default-residue-type
@deffn function set-add-terminal-residue-default-residue-type type

Where @emph{type} is a string

set the residue type of an added terminal residue. 

@end deffn

@node set-add-terminal-residue-do-post-refine
@subsection set-add-terminal-residue-do-post-refine
@deffn function set-add-terminal-residue-do-post-refine istat

Where @emph{istat} is an integer number

set a flag to run refine zone on terminal residues after an addition. 

@end deffn

@node add-terminal-residue-do-post-refine-state
@subsection add-terminal-residue-do-post-refine-state
@deffn function add-terminal-residue-do-post-refine-state

what is the value of the previous flag? 

@end deffn

@node Delete Residues
@section Delete Residues

@menu
* delete-atom-by-atom-index::
* delete-residue-by-atom-index::
* delete-residue-hydrogens-by-atom-index::
* delete-residue-range::
* delete-residue::
* delete-residue-with-altconf::
* delete-residue-hydrogens::
* delete-atom::
* delete-residue-sidechain::
* set-delete-atom-mode::
* set-delete-residue-mode::
* set-delete-residue-zone-mode::
* set-delete-residue-hydrogens-mode::
* set-delete-water-mode::
* set-delete-sidechain-mode::
* delete-item-mode-is-atom-p::
* delete-item-mode-is-residue-p::
* delete-item-mode-is-water-p::
* delete-item-mode-is-sidechain-p::
* store-delete-item-widget::
* clear-pending-delete-item::
* clear-delete-item-widget::
* store-delete-item-widget-position::
* delete-item-widget-is-being-shown::
* delete-item-widget-keep-active-on::
* wrapped-create-delete-item-dialog::
* delete-object-handle-delete-dialog::
@end menu

@node delete-atom-by-atom-index
@subsection delete-atom-by-atom-index
@deffn function delete-atom-by-atom-index imol index do_delete_dialog

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{index} is an integer number
@item @emph{do_delete_dialog} is an integer number
@end itemize

@end deffn

@node delete-residue-by-atom-index
@subsection delete-residue-by-atom-index
@deffn function delete-residue-by-atom-index imol index do_delete_dialog

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{index} is an integer number
@item @emph{do_delete_dialog} is an integer number
@end itemize

@end deffn

@node delete-residue-hydrogens-by-atom-index
@subsection delete-residue-hydrogens-by-atom-index
@deffn function delete-residue-hydrogens-by-atom-index imol index do_delete_dialog

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{index} is an integer number
@item @emph{do_delete_dialog} is an integer number
@end itemize

@end deffn

@node delete-residue-range
@subsection delete-residue-range
@deffn function delete-residue-range imol chain_id resno_start end_resno

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno_start} is an integer number
@item @emph{end_resno} is an integer number
@end itemize

delete residue range 

@end deffn

@node delete-residue
@subsection delete-residue
@deffn function delete-residue imol chain_id resno inscode

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno} is an integer number
@item @emph{inscode} is a string
@end itemize

delete residue 

@end deffn

@node delete-residue-with-altconf
@subsection delete-residue-with-altconf
@deffn function delete-residue-with-altconf imol chain_id resno inscode altloc

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno} is an integer number
@item @emph{inscode} is a string
@item @emph{altloc} is a string
@end itemize

delete residue with altconf 

@end deffn

@node delete-residue-hydrogens
@subsection delete-residue-hydrogens
@deffn function delete-residue-hydrogens imol chain_id resno inscode altloc

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno} is an integer number
@item @emph{inscode} is a string
@item @emph{altloc} is a string
@end itemize

delete hydrogen atoms in residue 

@end deffn

@node delete-atom
@subsection delete-atom
@deffn function delete-atom imol chain_id resno ins_code at_name altloc

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno} is an integer number
@item @emph{ins_code} is a string
@item @emph{at_name} is a string
@item @emph{altloc} is a string
@end itemize

delete atom in residue 

@end deffn

@node delete-residue-sidechain
@subsection delete-residue-sidechain
@deffn function delete-residue-sidechain imol chain_id resno ins_code do_delete_dialog

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno} is an integer number
@item @emph{ins_code} is a string
@item @emph{do_delete_dialog} is an integer number
@end itemize

delete all atoms in residue that are not main chain or CB 

@end deffn

@node set-delete-atom-mode
@subsection set-delete-atom-mode
@deffn function set-delete-atom-mode

@end deffn

@node set-delete-residue-mode
@subsection set-delete-residue-mode
@deffn function set-delete-residue-mode

@end deffn

@node set-delete-residue-zone-mode
@subsection set-delete-residue-zone-mode
@deffn function set-delete-residue-zone-mode

@end deffn

@node set-delete-residue-hydrogens-mode
@subsection set-delete-residue-hydrogens-mode
@deffn function set-delete-residue-hydrogens-mode

@end deffn

@node set-delete-water-mode
@subsection set-delete-water-mode
@deffn function set-delete-water-mode

@end deffn

@node set-delete-sidechain-mode
@subsection set-delete-sidechain-mode
@deffn function set-delete-sidechain-mode

@end deffn

@node delete-item-mode-is-atom-p
@subsection delete-item-mode-is-atom-p
@deffn function delete-item-mode-is-atom-p

@end deffn

@node delete-item-mode-is-residue-p
@subsection delete-item-mode-is-residue-p
@deffn function delete-item-mode-is-residue-p

@end deffn

@node delete-item-mode-is-water-p
@subsection delete-item-mode-is-water-p
@deffn function delete-item-mode-is-water-p

@end deffn

@node delete-item-mode-is-sidechain-p
@subsection delete-item-mode-is-sidechain-p
@deffn function delete-item-mode-is-sidechain-p

@end deffn

@node store-delete-item-widget
@subsection store-delete-item-widget
@deffn function store-delete-item-widget widget

Where @emph{widget} is a GtkWidget

@end deffn

@node clear-pending-delete-item
@subsection clear-pending-delete-item
@deffn function clear-pending-delete-item

@end deffn

@node clear-delete-item-widget
@subsection clear-delete-item-widget
@deffn function clear-delete-item-widget

@end deffn

@node store-delete-item-widget-position
@subsection store-delete-item-widget-position
@deffn function store-delete-item-widget-position

@end deffn

@node delete-item-widget-is-being-shown
@subsection delete-item-widget-is-being-shown
@deffn function delete-item-widget-is-being-shown

@end deffn

@node delete-item-widget-keep-active-on
@subsection delete-item-widget-keep-active-on
@deffn function delete-item-widget-keep-active-on

@end deffn

@node wrapped-create-delete-item-dialog
@subsection wrapped-create-delete-item-dialog
@deffn function wrapped-create-delete-item-dialog

@end deffn

@node delete-object-handle-delete-dialog
@subsection delete-object-handle-delete-dialog
@deffn function delete-object-handle-delete-dialog do_delete_dialog

Where @emph{do_delete_dialog} is an integer number

@end deffn

@node Mainchain Building Functions
@section Mainchain Building Functions

@menu
* do-db-main::
* db-mainchain::
@end menu

@node do-db-main
@subsection do-db-main
@deffn function do-db-main state

Where @emph{state} is an integer number

@end deffn

@node db-mainchain
@subsection db-mainchain
@deffn function db-mainchain imol chain_id iresno_start iresno_end direction_string

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{iresno_start} is an integer number
@item @emph{iresno_end} is an integer number
@item @emph{direction_string} is a string
@end itemize

CA -> mainchain conversion. 

@end deffn

@node Close Molecule FUnctions
@section Close Molecule FUnctions

@menu
* close-molecule::
* close-molecule-by-widget::
* fill-close-option-menu-with-all-molecule-options::
* close-molecule-item-select::
* new-close-molecules::
* wrapped-create-new-close-molecules-dialog::
@end menu

@node close-molecule
@subsection close-molecule
@deffn function close-molecule imol

Where @emph{imol} is an integer number

@end deffn

@node close-molecule-by-widget
@subsection close-molecule-by-widget
@deffn function close-molecule-by-widget optionmenu

Where @emph{optionmenu} is a GtkWidget

@end deffn

@node fill-close-option-menu-with-all-molecule-options
@subsection fill-close-option-menu-with-all-molecule-options
@deffn function fill-close-option-menu-with-all-molecule-options optionmenu

Where @emph{optionmenu} is a GtkWidget

@end deffn

@node close-molecule-item-select
@subsection close-molecule-item-select
@deffn function close-molecule-item-select item pos

Where: 
@itemize @bullet
@item @emph{item} is a GtkWidget
@item @emph{pos} is a GtkPositionType
@end itemize

@end deffn

@node new-close-molecules
@subsection new-close-molecules
@deffn function new-close-molecules window

Where @emph{window} is a GtkWidget

@end deffn

@node wrapped-create-new-close-molecules-dialog
@subsection wrapped-create-new-close-molecules-dialog
@deffn function wrapped-create-new-close-molecules-dialog

@end deffn

@node Rotatmer Functions
@section Rotatmer Functions

@menu
* setup-rotamers::
* do-rotamers::
* show-rotamers-dialog::
* set-rotamer-lowest-probability::
* set-rotamer-check-clashes::
* auto-fit-best-rotamer::
* set-auto-fit-best-rotamer-clash-flag::
* rotamer-score::
* setup-auto-fit-rotamer::
* n-rotamers::
* set-residue-to-rotamer-number::
* fill-partial-residues::
* fill-partial-residue::
* set-graphics-rotamer-dialog::
@end menu

@node setup-rotamers
@subsection setup-rotamers
@deffn function setup-rotamers state

Where @emph{state} is an integer number

@end deffn

@node do-rotamers
@subsection do-rotamers
@deffn function do-rotamers atom_index imol

Where: 
@itemize @bullet
@item @emph{atom_index} is an integer number
@item @emph{imol} is an integer number
@end itemize

@end deffn

@node show-rotamers-dialog
@subsection show-rotamers-dialog
@deffn function show-rotamers-dialog imol chain_id resno ins_code altconf

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno} is an integer number
@item @emph{ins_code} is a string
@item @emph{altconf} is a string
@end itemize

@end deffn

@node set-rotamer-lowest-probability
@subsection set-rotamer-lowest-probability
@deffn function set-rotamer-lowest-probability f

Where @emph{f} is a number

@end deffn

@node set-rotamer-check-clashes
@subsection set-rotamer-check-clashes
@deffn function set-rotamer-check-clashes i

Where @emph{i} is an integer number

set a flag: 0 is off, 1 is on 

@end deffn

@node auto-fit-best-rotamer
@subsection auto-fit-best-rotamer
@deffn function auto-fit-best-rotamer resno altloc insertion_code chain_id imol_coords imol_map clash_flag lowest_probability

Where: 
@itemize @bullet
@item @emph{resno} is an integer number
@item @emph{altloc} is a string
@item @emph{insertion_code} is a string
@item @emph{chain_id} is a string
@item @emph{imol_coords} is an integer number
@item @emph{imol_map} is an integer number
@item @emph{clash_flag} is an integer number
@item @emph{lowest_probability} is a number
@end itemize

auto fit by rotamer search. 

return the score, for some not very good reason. clash_flag determines if we use clashes with other residues in the score for this rotamer (or not). It would be cool to call this from a script that went residue by residue along a (newly-built) chain (now available). 

@end deffn

@node set-auto-fit-best-rotamer-clash-flag
@subsection set-auto-fit-best-rotamer-clash-flag
@deffn function set-auto-fit-best-rotamer-clash-flag i

Where @emph{i} is an integer number

set the clash flag for rotamer search 

And this functions for [pre-setting] the variables for auto_fit_best_rotamer called interactively (using a graphics_info_t function). 0 off, 1 on. 

@end deffn

@node rotamer-score
@subsection rotamer-score
@deffn function rotamer-score imol chain_id res_no insertion_code

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{res_no} is an integer number
@item @emph{insertion_code} is a string
@end itemize

@end deffn

@node setup-auto-fit-rotamer
@subsection setup-auto-fit-rotamer
@deffn function setup-auto-fit-rotamer state

Where @emph{state} is an integer number

@end deffn

@node n-rotamers
@subsection n-rotamers
@deffn function n-rotamers imol chain_id resno ins_code

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno} is an integer number
@item @emph{ins_code} is a string
@end itemize

return the number of rotamers for this residue - return -1 on no residue found. 

@end deffn

@node set-residue-to-rotamer-number
@subsection set-residue-to-rotamer-number
@deffn function set-residue-to-rotamer-number imol chain_id resno ins_code rotamer_number

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno} is an integer number
@item @emph{ins_code} is a string
@item @emph{rotamer_number} is an integer number
@end itemize

set the residue specified to the rotamer number specifed. 

@end deffn

@node fill-partial-residues
@subsection fill-partial-residues
@deffn function fill-partial-residues imol

Where @emph{imol} is an integer number

fill all the residues of molecule number imol that have missing atoms. 

To be used to remove the effects of chainsaw. 

@end deffn

@node fill-partial-residue
@subsection fill-partial-residue
@deffn function fill-partial-residue imol chain_id resno inscode

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno} is an integer number
@item @emph{inscode} is a string
@end itemize

@end deffn

@node set-graphics-rotamer-dialog
@subsection set-graphics-rotamer-dialog
@deffn function set-graphics-rotamer-dialog w

Where @emph{w} is a GtkWidget

@end deffn

@node 180 Flip Side chain
@section 180 Flip Side chain

@menu
* do-180-degree-side-chain-flip::
* setup-180-degree-flip::
@end menu

@node do-180-degree-side-chain-flip
@subsection do-180-degree-side-chain-flip
@deffn function do-180-degree-side-chain-flip imol chain_id resno inscode altconf

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno} is an integer number
@item @emph{inscode} is a string
@item @emph{altconf} is a string
@end itemize

rotate 180 degrees round the last chi angle 

@end deffn

@node setup-180-degree-flip
@subsection setup-180-degree-flip
@deffn function setup-180-degree-flip state

Where @emph{state} is an integer number

@end deffn

@node Mutate Functions
@section Mutate Functions

@menu
* setup-mutate::
* setup-mutate-auto-fit::
* do-mutation::
* progressive-residues-in-chain-check::
* mutate::
* mutate-base::
* set-mutate-auto-fit-do-post-refine::
* mutate-auto-fit-do-post-refine-state::
* set-rotamer-auto-fit-do-post-refine::
* rotamer-auto-fit-do-post-refine-state::
* mutate-single-residue-by-serial-number::
* mutate-single-residue-by-seqno::
* do-base-mutation::
* set-residue-type-chooser-stub-state::
@end menu

@node setup-mutate
@subsection setup-mutate
@deffn function setup-mutate state

Where @emph{state} is an integer number

@end deffn

@node setup-mutate-auto-fit
@subsection setup-mutate-auto-fit
@deffn function setup-mutate-auto-fit state

Where @emph{state} is an integer number

Mutate then fit to map. 

that we have a map define is checked first 

@end deffn

@node do-mutation
@subsection do-mutation
@deffn function do-mutation type is_stub_flag

Where: 
@itemize @bullet
@item @emph{type} is a string
@item @emph{is_stub_flag} is an integer number
@end itemize

@end deffn

@node progressive-residues-in-chain-check
@subsection progressive-residues-in-chain-check
@deffn function progressive-residues-in-chain-check chain_id imol

Where: 
@itemize @bullet
@item @emph{chain_id} is a string
@item @emph{imol} is an integer number
@end itemize

@end deffn

@node mutate
@subsection mutate
@deffn function mutate imol chain_id ires inscode target_res_type

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{ires} is an integer number
@item @emph{inscode} is a string
@item @emph{target_res_type} is a string
@end itemize

mutate a given residue 

target_res_type is a three-letter-code.

Return 1 on a good mutate. 

@end deffn

@node mutate-base
@subsection mutate-base
@deffn function mutate-base imol chain_id res_no ins_code res_type

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{res_no} is an integer number
@item @emph{ins_code} is a string
@item @emph{res_type} is a string
@end itemize

@end deffn

@node set-mutate-auto-fit-do-post-refine
@subsection set-mutate-auto-fit-do-post-refine
@deffn function set-mutate-auto-fit-do-post-refine istate

Where @emph{istate} is an integer number

Do you want Coot to automatically run a refinement after every mutate and autofit? 

1 for yes, 0 for no. 

@end deffn

@node mutate-auto-fit-do-post-refine-state
@subsection mutate-auto-fit-do-post-refine-state
@deffn function mutate-auto-fit-do-post-refine-state

what is the value of the previous flag? 

@end deffn

@node set-rotamer-auto-fit-do-post-refine
@subsection set-rotamer-auto-fit-do-post-refine
@deffn function set-rotamer-auto-fit-do-post-refine istate

Where @emph{istate} is an integer number

Do you want Coot to automatically run a refinement after every rotamer autofit? 

1 for yes, 0 for no. 

@end deffn

@node rotamer-auto-fit-do-post-refine-state
@subsection rotamer-auto-fit-do-post-refine-state
@deffn function rotamer-auto-fit-do-post-refine-state

what is the value of the previous flag? 

@end deffn

@node mutate-single-residue-by-serial-number
@subsection mutate-single-residue-by-serial-number
@deffn function mutate-single-residue-by-serial-number ires_ser chain_id imol target_res_type

Where: 
@itemize @bullet
@item @emph{ires_ser} is an integer number
@item @emph{chain_id} is a string
@item @emph{imol} is an integer number
@item @emph{target_res_type} is a character
@end itemize

an alternate interface to mutation of a singe residue. 


ires-ser is the serial number of the residue, not the seqnum There 2 functions don't make backups, but 

 does - CHECKME Hence 

 is for use as a "one-by-one" type and the following 2 by wrappers that muate either a residue range or a whole chain

Note that the target_res_type is a char, not a string (or a char *). So from the scheme interface you'd use (for example) hash backslash A for ALA. 

Returns: 1 on success, 0 on failure

@end deffn

@node mutate-single-residue-by-seqno
@subsection mutate-single-residue-by-seqno
@deffn function mutate-single-residue-by-seqno ires inscode chain_id imol target_res_type

Where: 
@itemize @bullet
@item @emph{ires} is an integer number
@item @emph{inscode} is a string
@item @emph{chain_id} is a string
@item @emph{imol} is an integer number
@item @emph{target_res_type} is a character
@end itemize

@end deffn

@node do-base-mutation
@subsection do-base-mutation
@deffn function do-base-mutation type

Where @emph{type} is a string

@end deffn

@node set-residue-type-chooser-stub-state
@subsection set-residue-type-chooser-stub-state
@deffn function set-residue-type-chooser-stub-state istat

Where @emph{istat} is an integer number

set a flag saying that the residue chosen by mutate or auto-fit mutate should only be added as a stub (mainchain + CB) 

@end deffn

@node Alternative Conformation
@section Alternative Conformation

@menu
* alt-conf-split-type-number::
* set-add-alt-conf-split-type-number::
* setup-alt-conf-with-dialog::
* unset-add-alt-conf-dialog::
* unset-add-alt-conf-define::
* altconf::
* set-add-alt-conf-new-atoms-occupancy::
* set-show-alt-conf-intermediate-atoms::
* show-alt-conf-intermediate-atoms-state::
* zero-occupancy-residue-range::
* fill-occupancy-residue-range::
* set-b-factor-residue-range::
* reset-b-factor-residue-range::
@end menu

@node alt-conf-split-type-number
@subsection alt-conf-split-type-number
@deffn function alt-conf-split-type-number

@end deffn

@node set-add-alt-conf-split-type-number
@subsection set-add-alt-conf-split-type-number
@deffn function set-add-alt-conf-split-type-number i

Where @emph{i} is an integer number

@end deffn

@node setup-alt-conf-with-dialog
@subsection setup-alt-conf-with-dialog
@deffn function setup-alt-conf-with-dialog dialog

Where @emph{dialog} is a GtkWidget

@end deffn

@node unset-add-alt-conf-dialog
@subsection unset-add-alt-conf-dialog
@deffn function unset-add-alt-conf-dialog

@end deffn

@node unset-add-alt-conf-define
@subsection unset-add-alt-conf-define
@deffn function unset-add-alt-conf-define

@end deffn

@node altconf
@subsection altconf
@deffn function altconf

@end deffn

@node set-add-alt-conf-new-atoms-occupancy
@subsection set-add-alt-conf-new-atoms-occupancy
@deffn function set-add-alt-conf-new-atoms-occupancy f

Where @emph{f} is a number

@end deffn

@node set-show-alt-conf-intermediate-atoms
@subsection set-show-alt-conf-intermediate-atoms
@deffn function set-show-alt-conf-intermediate-atoms i

Where @emph{i} is an integer number

@end deffn

@node show-alt-conf-intermediate-atoms-state
@subsection show-alt-conf-intermediate-atoms-state
@deffn function show-alt-conf-intermediate-atoms-state

@end deffn

@node zero-occupancy-residue-range
@subsection zero-occupancy-residue-range
@deffn function zero-occupancy-residue-range imol chain_id ires1 ires2

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{ires1} is an integer number
@item @emph{ires2} is an integer number
@end itemize

@end deffn

@node fill-occupancy-residue-range
@subsection fill-occupancy-residue-range
@deffn function fill-occupancy-residue-range imol chain_id ires1 ires2

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{ires1} is an integer number
@item @emph{ires2} is an integer number
@end itemize

@end deffn

@node set-b-factor-residue-range
@subsection set-b-factor-residue-range
@deffn function set-b-factor-residue-range imol chain_id ires1 ires2 bval

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{ires1} is an integer number
@item @emph{ires2} is an integer number
@item @emph{bval} is a number
@end itemize

@end deffn

@node reset-b-factor-residue-range
@subsection reset-b-factor-residue-range
@deffn function reset-b-factor-residue-range imol chain_id ires1 ires2

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{ires1} is an integer number
@item @emph{ires2} is an integer number
@end itemize

@end deffn

@node Pointer Atom Functions
@section Pointer Atom Functions

@menu
* place-atom-at-pointer::
* place-atom-at-pointer-by-window::
* place-typed-atom-at-pointer::
* set-pointer-atom-is-dummy::
* fill-place-atom-molecule-option-menu::
* display-where-is-pointer::
* pointer-atom-molecule::
* set-pointer-atom-molecule::
@end menu

@node place-atom-at-pointer
@subsection place-atom-at-pointer
@deffn function place-atom-at-pointer

@end deffn

@node place-atom-at-pointer-by-window
@subsection place-atom-at-pointer-by-window
@deffn function place-atom-at-pointer-by-window

@end deffn

@node place-typed-atom-at-pointer
@subsection place-typed-atom-at-pointer
@deffn function place-typed-atom-at-pointer type

Where @emph{type} is a string

@end deffn

@node set-pointer-atom-is-dummy
@subsection set-pointer-atom-is-dummy
@deffn function set-pointer-atom-is-dummy i

Where @emph{i} is an integer number

@end deffn

@node fill-place-atom-molecule-option-menu
@subsection fill-place-atom-molecule-option-menu
@deffn function fill-place-atom-molecule-option-menu optionmenu

Where @emph{optionmenu} is a GtkWidget

@end deffn

@node display-where-is-pointer
@subsection display-where-is-pointer
@deffn function display-where-is-pointer

@end deffn

@node pointer-atom-molecule
@subsection pointer-atom-molecule
@deffn function pointer-atom-molecule

@end deffn

@node set-pointer-atom-molecule
@subsection set-pointer-atom-molecule
@deffn function set-pointer-atom-molecule imol

Where @emph{imol} is an integer number

@end deffn

@node Terminal OXT Atom
@section Terminal OXT Atom

@menu
* add-OXT-to-residue::
* wrapped-create-add-OXT-dialog::
* apply-add-OXT-from-widget::
@end menu

@node add-OXT-to-residue
@subsection add-OXT-to-residue
@deffn function add-OXT-to-residue imol reso insertion_code chain_id

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{reso} is an integer number
@item @emph{insertion_code} is a string
@item @emph{chain_id} is a string
@end itemize

@end deffn

@node wrapped-create-add-OXT-dialog
@subsection wrapped-create-add-OXT-dialog
@deffn function wrapped-create-add-OXT-dialog

@end deffn

@node apply-add-OXT-from-widget
@subsection apply-add-OXT-from-widget
@deffn function apply-add-OXT-from-widget w

Where @emph{w} is a GtkWidget

@end deffn

@node Crosshairs  Interface
@section Crosshairs  Interface

@menu
* set-draw-crosshairs::
* draw-crosshairs-state::
@end menu

@node set-draw-crosshairs
@subsection set-draw-crosshairs
@deffn function set-draw-crosshairs i

Where @emph{i} is an integer number

@end deffn

@node draw-crosshairs-state
@subsection draw-crosshairs-state
@deffn function draw-crosshairs-state

@end deffn

@node Edit Chi Angles
@section Edit Chi Angles

@menu
* setup-edit-chi-angles::
* rotate-chi::
* set-find-hydrogen-torsions::
* set-graphics-edit-current-chi::
* unset-moving-atom-move-chis::
* edit-chi-angles::
* set-show-chi-angle-bond::
* fill-chi-angles-vbox::
* setup-torsion-general::
* toggle-torsion-general-reverse::
@end menu

@node setup-edit-chi-angles
@subsection setup-edit-chi-angles
@deffn function setup-edit-chi-angles state

Where @emph{state} is an integer number

@end deffn

@node rotate-chi
@subsection rotate-chi
@deffn function rotate-chi am

Where @emph{am} is a number

@end deffn

@node set-find-hydrogen-torsions
@subsection set-find-hydrogen-torsions
@deffn function set-find-hydrogen-torsions state

Where @emph{state} is an integer number

show torsions that rotate hydrogens in the torsion angle manipulation dialog. Note that this may be needed if, in the dictionary cif file torsion which have as a 4th atom both a hydrogen and a heavier atom bonding to the 3rd atom, but list the 4th atom as a hydrogen (not a heavier atom). 

@end deffn

@node set-graphics-edit-current-chi
@subsection set-graphics-edit-current-chi
@deffn function set-graphics-edit-current-chi ichi

Where @emph{ichi} is an integer number

@end deffn

@node unset-moving-atom-move-chis
@subsection unset-moving-atom-move-chis
@deffn function unset-moving-atom-move-chis

@end deffn

@node edit-chi-angles
@subsection edit-chi-angles
@deffn function edit-chi-angles imol chain_id resno ins_code altconf

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno} is an integer number
@item @emph{ins_code} is a string
@item @emph{altconf} is a string
@end itemize

display the edit chi angles gui for the given residue 

return a status of 0 if it failed to fined the residue, return a value of 1 if it worked. 

@end deffn

@node set-show-chi-angle-bond
@subsection set-show-chi-angle-bond
@deffn function set-show-chi-angle-bond imode

Where @emph{imode} is an integer number

@end deffn

@node fill-chi-angles-vbox
@subsection fill-chi-angles-vbox
@deffn function fill-chi-angles-vbox vbox

Where @emph{vbox} is a GtkWidget

@end deffn

@node setup-torsion-general
@subsection setup-torsion-general
@deffn function setup-torsion-general state

Where @emph{state} is an integer number

beloved torsion general at last makes an entrance onto the Coot scene... 

@end deffn

@node toggle-torsion-general-reverse
@subsection toggle-torsion-general-reverse
@deffn function toggle-torsion-general-reverse

@end deffn

@node Masks
@section Masks

@menu
* mask-map-by-molecule::
* mask-map-by-atom-selection::
* set-map-mask-atom-radius::
* map-mask-atom-radius::
@end menu

@node mask-map-by-molecule
@subsection mask-map-by-molecule
@deffn function mask-map-by-molecule map_mol_no coord_mol_no invert_flag

Where: 
@itemize @bullet
@item @emph{map_mol_no} is an integer number
@item @emph{coord_mol_no} is an integer number
@item @emph{invert_flag} is an integer number
@end itemize

generate a new map that has been masked by some coordinates 

(mask-map-by-molecule map-no mol-no invert?) creates and displays a masked map, cuts down density where the coordinates are (invert is 0). If invert? is 1, cut the density down where there are no atoms atoms. 

@end deffn

@node mask-map-by-atom-selection
@subsection mask-map-by-atom-selection
@deffn function mask-map-by-atom-selection map_mol_no coords_mol_no mmdb_atom_selection invert_flag

Where: 
@itemize @bullet
@item @emph{map_mol_no} is an integer number
@item @emph{coords_mol_no} is an integer number
@item @emph{mmdb_atom_selection} is a string
@item @emph{invert_flag} is an integer number
@end itemize

@end deffn

@node set-map-mask-atom-radius
@subsection set-map-mask-atom-radius
@deffn function set-map-mask-atom-radius rad

Where @emph{rad} is a number

set the atom radius for map masking 

@end deffn

@node map-mask-atom-radius
@subsection map-mask-atom-radius
@deffn function map-mask-atom-radius

get the atom radius for map masking 

@end deffn

@node check Waters Interface
@section check Waters Interface

@menu
* wrapped-create-check-waters-dialog::
* set-check-waters-b-factor-limit::
* set-check-waters-map-sigma-limit::
* set-check-waters-min-dist-limit::
* set-check-waters-max-dist-limit::
* check-waters-molecule-menu-item-activate::
* do-check-waters-by-widget::
* store-checked-waters-baddies-dialog::
* wrapped-checked-waters-baddies-dialog::
* delete-checked-waters-baddies::
* check-waters-by-difference-map::
* check-waters-by-difference-map-by-widget::
* wrapped-create-check-waters-diff-map-dialog::
* check-waters-by-difference-map-sigma-level-state::
* set-check-waters-by-difference-map-sigma-level::
@end menu

@node wrapped-create-check-waters-dialog
@subsection wrapped-create-check-waters-dialog
@deffn function wrapped-create-check-waters-dialog

@end deffn

@node set-check-waters-b-factor-limit
@subsection set-check-waters-b-factor-limit
@deffn function set-check-waters-b-factor-limit f

Where @emph{f} is a number

@end deffn

@node set-check-waters-map-sigma-limit
@subsection set-check-waters-map-sigma-limit
@deffn function set-check-waters-map-sigma-limit f

Where @emph{f} is a number

@end deffn

@node set-check-waters-min-dist-limit
@subsection set-check-waters-min-dist-limit
@deffn function set-check-waters-min-dist-limit f

Where @emph{f} is a number

@end deffn

@node set-check-waters-max-dist-limit
@subsection set-check-waters-max-dist-limit
@deffn function set-check-waters-max-dist-limit f

Where @emph{f} is a number

@end deffn

@node check-waters-molecule-menu-item-activate
@subsection check-waters-molecule-menu-item-activate
@deffn function check-waters-molecule-menu-item-activate item pos

Where: 
@itemize @bullet
@item @emph{item} is a GtkWidget
@item @emph{pos} is a GtkPositionType
@end itemize

@end deffn

@node do-check-waters-by-widget
@subsection do-check-waters-by-widget
@deffn function do-check-waters-by-widget dialog

Where @emph{dialog} is a GtkWidget

@end deffn

@node store-checked-waters-baddies-dialog
@subsection store-checked-waters-baddies-dialog
@deffn function store-checked-waters-baddies-dialog dialog

Where @emph{dialog} is a GtkWidget

@end deffn

@node wrapped-checked-waters-baddies-dialog
@subsection wrapped-checked-waters-baddies-dialog
@deffn function wrapped-checked-waters-baddies-dialog imol b_factor_lim map_sigma_lim min_dist max_dist part_occ_contact_flag zero_occ_flag logical_operator_and_or_flag

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{b_factor_lim} is a number
@item @emph{map_sigma_lim} is a number
@item @emph{min_dist} is a number
@item @emph{max_dist} is a number
@item @emph{part_occ_contact_flag} is an integer number
@item @emph{zero_occ_flag} is an integer number
@item @emph{logical_operator_and_or_flag} is an integer number
@end itemize

@end deffn

@node delete-checked-waters-baddies
@subsection delete-checked-waters-baddies
@deffn function delete-checked-waters-baddies imol b_factor_lim map_sigma_lim min_dist max_dist part_occ_contact_flag zero_occ_flag logical_operator_and_or_flag

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{b_factor_lim} is a number
@item @emph{map_sigma_lim} is a number
@item @emph{min_dist} is a number
@item @emph{max_dist} is a number
@item @emph{part_occ_contact_flag} is an integer number
@item @emph{zero_occ_flag} is an integer number
@item @emph{logical_operator_and_or_flag} is an integer number
@end itemize

Delete waters that are fail to meet the given criteria. 

@end deffn

@node check-waters-by-difference-map
@subsection check-waters-by-difference-map
@deffn function check-waters-by-difference-map imol_waters imol_diff_map interactive_flag

Where: 
@itemize @bullet
@item @emph{imol_waters} is an integer number
@item @emph{imol_diff_map} is an integer number
@item @emph{interactive_flag} is an integer number
@end itemize

@end deffn

@node check-waters-by-difference-map-by-widget
@subsection check-waters-by-difference-map-by-widget
@deffn function check-waters-by-difference-map-by-widget window

Where @emph{window} is a GtkWidget

@end deffn

@node wrapped-create-check-waters-diff-map-dialog
@subsection wrapped-create-check-waters-diff-map-dialog
@deffn function wrapped-create-check-waters-diff-map-dialog

@end deffn

@node check-waters-by-difference-map-sigma-level-state
@subsection check-waters-by-difference-map-sigma-level-state
@deffn function check-waters-by-difference-map-sigma-level-state

@end deffn

@node set-check-waters-by-difference-map-sigma-level
@subsection set-check-waters-by-difference-map-sigma-level
@deffn function set-check-waters-by-difference-map-sigma-level f

Where @emph{f} is a number

@end deffn

@node Least-Squares matching
@section Least-Squares matching

@menu
* clear-lsq-matches::
* add-lsq-match::
* apply-lsq-matches-simple::
* setup-lsq-deviation::
* setup-lsq-plane-define::
* wrapped-create-lsq-plane-dialog::
* unset-lsq-plane-dialog::
* remove-last-lsq-plane-atom::
* wrapped-create-least-squares-dialog::
* apply-lsq-matches-by-widget::
* lsq-ref-mol-option-menu-changed::
* lsq-mov-mol-option-menu-changed::
* lsq-reference-chain-option-menu-item-activate::
* lsq-moving-chain-option-menu-item-activate::
* fill-lsq-option-menu-with-chain-options::
@end menu

@node clear-lsq-matches
@subsection clear-lsq-matches
@deffn function clear-lsq-matches

@end deffn

@node add-lsq-match
@subsection add-lsq-match
@deffn function add-lsq-match reference_resno_start reference_resno_end chain_id_reference moving_resno_start moving_resno_end chain_id_moving match_type

Where: 
@itemize @bullet
@item @emph{reference_resno_start} is an integer number
@item @emph{reference_resno_end} is an integer number
@item @emph{chain_id_reference} is a string
@item @emph{moving_resno_start} is an integer number
@item @emph{moving_resno_end} is an integer number
@item @emph{chain_id_moving} is a string
@item @emph{match_type} is an integer number
@end itemize

@end deffn

@node apply-lsq-matches-simple
@subsection apply-lsq-matches-simple
@deffn function apply-lsq-matches-simple imol_reference imol_moving

Where: 
@itemize @bullet
@item @emph{imol_reference} is an integer number
@item @emph{imol_moving} is an integer number
@end itemize

@end deffn

@node setup-lsq-deviation
@subsection setup-lsq-deviation
@deffn function setup-lsq-deviation state

Where @emph{state} is an integer number

@end deffn

@node setup-lsq-plane-define
@subsection setup-lsq-plane-define
@deffn function setup-lsq-plane-define state

Where @emph{state} is an integer number

@end deffn

@node wrapped-create-lsq-plane-dialog
@subsection wrapped-create-lsq-plane-dialog
@deffn function wrapped-create-lsq-plane-dialog

@end deffn

@node unset-lsq-plane-dialog
@subsection unset-lsq-plane-dialog
@deffn function unset-lsq-plane-dialog

@end deffn

@node remove-last-lsq-plane-atom
@subsection remove-last-lsq-plane-atom
@deffn function remove-last-lsq-plane-atom

@end deffn

@node wrapped-create-least-squares-dialog
@subsection wrapped-create-least-squares-dialog
@deffn function wrapped-create-least-squares-dialog

@end deffn

@node apply-lsq-matches-by-widget
@subsection apply-lsq-matches-by-widget
@deffn function apply-lsq-matches-by-widget lsq_dialog

Where @emph{lsq_dialog} is a GtkWidget

@end deffn

@node lsq-ref-mol-option-menu-changed
@subsection lsq-ref-mol-option-menu-changed
@deffn function lsq-ref-mol-option-menu-changed item pos

Where: 
@itemize @bullet
@item @emph{item} is a GtkWidget
@item @emph{pos} is a GtkPositionType
@end itemize

@end deffn

@node lsq-mov-mol-option-menu-changed
@subsection lsq-mov-mol-option-menu-changed
@deffn function lsq-mov-mol-option-menu-changed item pos

Where: 
@itemize @bullet
@item @emph{item} is a GtkWidget
@item @emph{pos} is a GtkPositionType
@end itemize

@end deffn

@node lsq-reference-chain-option-menu-item-activate
@subsection lsq-reference-chain-option-menu-item-activate
@deffn function lsq-reference-chain-option-menu-item-activate item pos

Where: 
@itemize @bullet
@item @emph{item} is a GtkWidget
@item @emph{pos} is a GtkPositionType
@end itemize

@end deffn

@node lsq-moving-chain-option-menu-item-activate
@subsection lsq-moving-chain-option-menu-item-activate
@deffn function lsq-moving-chain-option-menu-item-activate item pos

Where: 
@itemize @bullet
@item @emph{item} is a GtkWidget
@item @emph{pos} is a GtkPositionType
@end itemize

@end deffn

@node fill-lsq-option-menu-with-chain-options
@subsection fill-lsq-option-menu-with-chain-options
@deffn function fill-lsq-option-menu-with-chain-options chain_optionmenu is_reference_structure_flag

Where: 
@itemize @bullet
@item @emph{chain_optionmenu} is a GtkWidget
@item @emph{is_reference_structure_flag} is an integer number
@end itemize

@end deffn

@node Trim
@section Trim

@menu
* trim-molecule-by-map::
@end menu

@node trim-molecule-by-map
@subsection trim-molecule-by-map
@deffn function trim-molecule-by-map imol_coords imol_map map_level delete_or_zero_occ_flag

Where: 
@itemize @bullet
@item @emph{imol_coords} is an integer number
@item @emph{imol_map} is an integer number
@item @emph{map_level} is a number
@item @emph{delete_or_zero_occ_flag} is an integer number
@end itemize

@end deffn

@node External Ray-Tracing
@section External Ray-Tracing

@menu
* raster3d::
* povray::
* renderman::
* make-image-raster3d::
* make-image-povray::
* set-raster3d-bond-thickness::
* set-raster3d-atom-radius::
* set-raster3d-density-thickness::
* set-renderer-show-atoms::
* set-raster3d-bone-thickness::
* set-raster3d-shadows-enabled::
* raster-screen-shot::
@end menu

@node raster3d
@subsection raster3d
@deffn function raster3d rd3_filename

Where @emph{rd3_filename} is a string

create a r3d file for the current view 

@end deffn

@node povray
@subsection povray
@deffn function povray filename

Where @emph{filename} is a string

@end deffn

@node renderman
@subsection renderman
@deffn function renderman rib_filename

Where @emph{rib_filename} is a string

@end deffn

@node make-image-raster3d
@subsection make-image-raster3d
@deffn function make-image-raster3d filename

Where @emph{filename} is a string

@end deffn

@node make-image-povray
@subsection make-image-povray
@deffn function make-image-povray filename

Where @emph{filename} is a string

@end deffn

@node set-raster3d-bond-thickness
@subsection set-raster3d-bond-thickness
@deffn function set-raster3d-bond-thickness f

Where @emph{f} is a number

set the bond thickness for the Raster3D representation 

@end deffn

@node set-raster3d-atom-radius
@subsection set-raster3d-atom-radius
@deffn function set-raster3d-atom-radius f

Where @emph{f} is a number

@end deffn

@node set-raster3d-density-thickness
@subsection set-raster3d-density-thickness
@deffn function set-raster3d-density-thickness f

Where @emph{f} is a number

set the density line thickness for the Raster3D representation 

@end deffn

@node set-renderer-show-atoms
@subsection set-renderer-show-atoms
@deffn function set-renderer-show-atoms istate

Where @emph{istate} is an integer number

set the flag to show atoms for the Raster3D representation 

@end deffn

@node set-raster3d-bone-thickness
@subsection set-raster3d-bone-thickness
@deffn function set-raster3d-bone-thickness f

Where @emph{f} is a number

set the bone (skeleton) thickness for the Raster3D representation 

@end deffn

@node set-raster3d-shadows-enabled
@subsection set-raster3d-shadows-enabled
@deffn function set-raster3d-shadows-enabled state

Where @emph{state} is an integer number

turn off shadows for raster3d output - give argument 0 to turn off 

@end deffn

@node raster-screen-shot
@subsection raster-screen-shot
@deffn function raster-screen-shot

run raster3d and display the resulting image. 

@end deffn

@node Superposition (SSM)
@section Superposition (SSM)

@menu
* superpose::
* superpose-with-chain-selection::
* superpose-with-atom-selection::
* execute-superpose::
* wrapped-create-superpose-dialog::
* fill-superpose-option-menu-with-chain-options::
@end menu

@node superpose
@subsection superpose
@deffn function superpose imol1 imol2 move_imol2_flag

Where: 
@itemize @bullet
@item @emph{imol1} is an integer number
@item @emph{imol2} is an integer number
@item @emph{move_imol2_flag} is an integer number
@end itemize

simple interface to superposition. 

Superpose all residues of imol2 onto imol1. imol1 is reference, we can either move imol2 or copy it to generate a new molecule depending on the vaule of move_imol2_flag (1 for move 0 for copy). 

@end deffn

@node superpose-with-chain-selection
@subsection superpose-with-chain-selection
@deffn function superpose-with-chain-selection imol1 imol2 chain_imol1 chain_imol2 chain_used_flag_imol1 chain_used_flag_imol2 move_imol2_copy_flag

Where: 
@itemize @bullet
@item @emph{imol1} is an integer number
@item @emph{imol2} is an integer number
@item @emph{chain_imol1} is a string
@item @emph{chain_imol2} is a string
@item @emph{chain_used_flag_imol1} is an integer number
@item @emph{chain_used_flag_imol2} is an integer number
@item @emph{move_imol2_copy_flag} is an integer number
@end itemize

chain-based interface to superposition. 

Superpose the given chains of imol2 onto imol1. imol1 is reference, we can either move imol2 or copy it to generate a new molecule depending on the vaule of move_imol2_flag (1 for move 0 for copy). 

@end deffn

@node superpose-with-atom-selection
@subsection superpose-with-atom-selection
@deffn function superpose-with-atom-selection imol1 imol2 mmdb_atom_sel_str_1 mmdb_atom_sel_str_2 move_imol2_copy_flag

Where: 
@itemize @bullet
@item @emph{imol1} is an integer number
@item @emph{imol2} is an integer number
@item @emph{mmdb_atom_sel_str_1} is a string
@item @emph{mmdb_atom_sel_str_2} is a string
@item @emph{move_imol2_copy_flag} is an integer number
@end itemize

detailed interface to superposition. 

Superpose the given atom selection (specified by the mmdb atom selection strings) of imol2 onto imol1. imol1 is reference, we can either move imol2 or copy it to generate a new molecule depending on the vaule of move_imol2_flag (1 for move 0 for copy). 

@end deffn

@node execute-superpose
@subsection execute-superpose
@deffn function execute-superpose w

Where @emph{w} is a GtkWidget

@end deffn

@node wrapped-create-superpose-dialog
@subsection wrapped-create-superpose-dialog
@deffn function wrapped-create-superpose-dialog

@end deffn

@node fill-superpose-option-menu-with-chain-options
@subsection fill-superpose-option-menu-with-chain-options
@deffn function fill-superpose-option-menu-with-chain-options chain_optionmenu is_reference_structure_flag

Where: 
@itemize @bullet
@item @emph{chain_optionmenu} is a GtkWidget
@item @emph{is_reference_structure_flag} is an integer number
@end itemize

@end deffn

@node NCS
@section NCS

@menu
* set-draw-ncs-ghosts::
* draw-ncs-ghosts-state::
* set-ncs-ghost-bond-thickness::
* ncs-update-ghosts::
* make-dynamically-transformed-ncs-maps::
* make-dynamically-transformed-ncs-maps-by-widget::
* wrapped-create-ncs-maps-dialog::
* make-ncs-ghosts-maybe::
* add-ncs-matrix::
* clear-ncs-ghost-matrices::
* add-strict-ncs-matrix::
* show-strict-ncs-state::
* set-show-strict-ncs::
* set-ncs-homology-level::
* copy-chain::
* copy-from-ncs-master-to-others::
* copy-residue-range-from-ncs-master-to-others::
* wrapped-create-ncs-control-dialog::
* ncs-control-change-ncs-master-to-chain::
* ncs-control-change-ncs-master-to-chain-id::
* ncs-control-change-ncs-master-to-chain-update-widget::
* ncs-control-display-chain::
* set-ncs-matrix-type::
* get-ncs-matrix-state::
@end menu

@node set-draw-ncs-ghosts
@subsection set-draw-ncs-ghosts
@deffn function set-draw-ncs-ghosts imol istate

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{istate} is an integer number
@end itemize

set drawing state of NCS ghosts for molecule number imol 

@end deffn

@node draw-ncs-ghosts-state
@subsection draw-ncs-ghosts-state
@deffn function draw-ncs-ghosts-state imol

Where @emph{imol} is an integer number

return the drawing state of NCS ghosts for molecule number imol. Return -1 on imol is a bad molecule or no ghosts. 

@end deffn

@node set-ncs-ghost-bond-thickness
@subsection set-ncs-ghost-bond-thickness
@deffn function set-ncs-ghost-bond-thickness imol f

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{f} is a number
@end itemize

set bond thickness of NCS ghosts for molecule number imol 

@end deffn

@node ncs-update-ghosts
@subsection ncs-update-ghosts
@deffn function ncs-update-ghosts imol

Where @emph{imol} is an integer number

update ghosts for molecule number imol 

@end deffn

@node make-dynamically-transformed-ncs-maps
@subsection make-dynamically-transformed-ncs-maps
@deffn function make-dynamically-transformed-ncs-maps imol_model imol_map overwrite_maps_of_same_name_flag

Where: 
@itemize @bullet
@item @emph{imol_model} is an integer number
@item @emph{imol_map} is an integer number
@item @emph{overwrite_maps_of_same_name_flag} is an integer number
@end itemize

make NCS map 

@end deffn

@node make-dynamically-transformed-ncs-maps-by-widget
@subsection make-dynamically-transformed-ncs-maps-by-widget
@deffn function make-dynamically-transformed-ncs-maps-by-widget dialog

Where @emph{dialog} is a GtkWidget

@end deffn

@node wrapped-create-ncs-maps-dialog
@subsection wrapped-create-ncs-maps-dialog
@deffn function wrapped-create-ncs-maps-dialog

@end deffn

@node make-ncs-ghosts-maybe
@subsection make-ncs-ghosts-maybe
@deffn function make-ncs-ghosts-maybe imol

Where @emph{imol} is an integer number

@end deffn

@node add-ncs-matrix
@subsection add-ncs-matrix
@deffn function add-ncs-matrix imol this_chain_id target_chain_id m11 m12 m13 m21 m22 m23 m31 m32 m33 t1 t2 t3

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{this_chain_id} is a string
@item @emph{target_chain_id} is a string
@item @emph{m11} is a number
@item @emph{m12} is a number
@item @emph{m13} is a number
@item @emph{m21} is a number
@item @emph{m22} is a number
@item @emph{m23} is a number
@item @emph{m31} is a number
@item @emph{m32} is a number
@item @emph{m33} is a number
@item @emph{t1} is a number
@item @emph{t2} is a number
@item @emph{t3} is a number
@end itemize

Add NCS matrix. 

@end deffn

@node clear-ncs-ghost-matrices
@subsection clear-ncs-ghost-matrices
@deffn function clear-ncs-ghost-matrices imol

Where @emph{imol} is an integer number

@end deffn

@node add-strict-ncs-matrix
@subsection add-strict-ncs-matrix
@deffn function add-strict-ncs-matrix imol this_chain_id target_chain_id m11 m12 m13 m21 m22 m23 m31 m32 m33 t1 t2 t3

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{this_chain_id} is a string
@item @emph{target_chain_id} is a string
@item @emph{m11} is a number
@item @emph{m12} is a number
@item @emph{m13} is a number
@item @emph{m21} is a number
@item @emph{m22} is a number
@item @emph{m23} is a number
@item @emph{m31} is a number
@item @emph{m32} is a number
@item @emph{m33} is a number
@item @emph{t1} is a number
@item @emph{t2} is a number
@item @emph{t3} is a number
@end itemize

add an NCS matrix for strict NCS molecule representation 

for CNS strict NCS usage: expand like normal symmetry does 

@end deffn

@node show-strict-ncs-state
@subsection show-strict-ncs-state
@deffn function show-strict-ncs-state imol

Where @emph{imol} is an integer number

return the state of NCS ghost molecules for molecule number imol 

@end deffn

@node set-show-strict-ncs
@subsection set-show-strict-ncs
@deffn function set-show-strict-ncs imol state

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{state} is an integer number
@end itemize

set display state of NCS ghost molecules for molecule number imol 

@end deffn

@node set-ncs-homology-level
@subsection set-ncs-homology-level
@deffn function set-ncs-homology-level flev

Where @emph{flev} is a number

At what level of homology should we say that we can't see homology for NCS calculation? (default 0.8). 

@end deffn

@node copy-chain
@subsection copy-chain
@deffn function copy-chain imol from_chain to_chain

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{from_chain} is a string
@item @emph{to_chain} is a string
@end itemize

Copy single NCS chain. 

@end deffn

@node copy-from-ncs-master-to-others
@subsection copy-from-ncs-master-to-others
@deffn function copy-from-ncs-master-to-others imol chain_id

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@end itemize

Copy chain from master to all related NCS chains. 

@end deffn

@node copy-residue-range-from-ncs-master-to-others
@subsection copy-residue-range-from-ncs-master-to-others
@deffn function copy-residue-range-from-ncs-master-to-others imol master_chain_id residue_range_start residue_range_end

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{master_chain_id} is a string
@item @emph{residue_range_start} is an integer number
@item @emph{residue_range_end} is an integer number
@end itemize

Copy residue range to all related NCS chains. If the target residues do not exist in the peer chains, then create them. 

@end deffn

@node wrapped-create-ncs-control-dialog
@subsection wrapped-create-ncs-control-dialog
@deffn function wrapped-create-ncs-control-dialog

@end deffn

@node ncs-control-change-ncs-master-to-chain
@subsection ncs-control-change-ncs-master-to-chain
@deffn function ncs-control-change-ncs-master-to-chain imol ichain

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{ichain} is an integer number
@end itemize

change the NCS master chain (by number) 

@end deffn

@node ncs-control-change-ncs-master-to-chain-id
@subsection ncs-control-change-ncs-master-to-chain-id
@deffn function ncs-control-change-ncs-master-to-chain-id imol chain_id

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@end itemize

change the NCS master chain (by chain_id) 

@end deffn

@node ncs-control-change-ncs-master-to-chain-update-widget
@subsection ncs-control-change-ncs-master-to-chain-update-widget
@deffn function ncs-control-change-ncs-master-to-chain-update-widget w imol ichain

Where: 
@itemize @bullet
@item @emph{w} is a GtkWidget
@item @emph{imol} is an integer number
@item @emph{ichain} is an integer number
@end itemize

@end deffn

@node ncs-control-display-chain
@subsection ncs-control-display-chain
@deffn function ncs-control-display-chain imol ichain state

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{ichain} is an integer number
@item @emph{state} is an integer number
@end itemize

display the NCS master chain 

@end deffn

@node set-ncs-matrix-type
@subsection set-ncs-matrix-type
@deffn function set-ncs-matrix-type flag

Where @emph{flag} is an integer number

@end deffn

@node get-ncs-matrix-state
@subsection get-ncs-matrix-state
@deffn function get-ncs-matrix-state

@end deffn

@node Helices and Strands
@section Helices and Strands

@menu
* place-helix-here::
* place-strand-here::
* find-helices::
* find-strands::
* find-secondary-structure::
* find-secondary-structure-local::
@end menu

@node place-helix-here
@subsection place-helix-here
@deffn function place-helix-here

add a helix 

Add a helix somewhere close to this point in the map, try to fit the orientation. Add to a molecule called "Helix", create it if needed. Create another moecule called "Reverse Helix" if the helix orientation isn't completely unequivocal.

Returns: the index of the new molecule. 

@end deffn

@node place-strand-here
@subsection place-strand-here
@deffn function place-strand-here n_residues n_sample_strands

Where: 
@itemize @bullet
@item @emph{n_residues} is an integer number
@item @emph{n_sample_strands} is an integer number
@end itemize

add a strands 

Add a strand close to this point in the map, try to fit the orientation. Add to a molecule called "Strand", create it if needed. n_residues is the estimated number of residues in the strand.

n_sample_strands is the number of strands from the database tested to fit into this strand density. 8 is a suggested number. 20 for a more rigourous search, but it will be slower.

Returns: the index of the new molecule. 

@end deffn

@node find-helices
@subsection find-helices
@deffn function find-helices

autobuild helices 

Find secondary structure in the current map. Add to a molecule called "Helices", create it if needed.

Returns: the index of the new molecule. 

@end deffn

@node find-strands
@subsection find-strands
@deffn function find-strands

autobuild strands 

Find secondary structure in the current map. Add to a molecule called "Strands", create it if needed.

Returns: the index of the new molecule. 

@end deffn

@node find-secondary-structure
@subsection find-secondary-structure
@deffn function find-secondary-structure use_helix helix_length helix_target use_strand strand_length strand_target

Where: 
@itemize @bullet
@item @emph{use_helix} is an integer number
@item @emph{helix_length} is an integer number
@item @emph{helix_target} is an integer number
@item @emph{use_strand} is an integer number
@item @emph{strand_length} is an integer number
@item @emph{strand_target} is an integer number
@end itemize

autobuild secondary structure 

Find secondary structure in the current map. Add to a molecule called "SecStruc", create it if needed.

Returns: the index of the new molecule. 

@end deffn

@node find-secondary-structure-local
@subsection find-secondary-structure-local
@deffn function find-secondary-structure-local use_helix helix_length helix_target use_strand strand_length strand_target radius

Where: 
@itemize @bullet
@item @emph{use_helix} is an integer number
@item @emph{helix_length} is an integer number
@item @emph{helix_target} is an integer number
@item @emph{use_strand} is an integer number
@item @emph{strand_length} is an integer number
@item @emph{strand_target} is an integer number
@item @emph{radius} is a number
@end itemize

autobuild secondary structure 

Find secondary structure local to current view in the current map. Add to a molecule called "SecStruc", create it if needed.

Returns: the index of the new molecule. 

@end deffn

@node RNA/DNA
@section RNA/DNA

@menu
* ideal-nucleic-acid::
* wrapped-nucleotide-builder-dialog::
* ideal-nucleic-acid-by-widget::
* watson-crick-pair::
* setup-base-pairing::
@end menu

@node ideal-nucleic-acid
@subsection ideal-nucleic-acid
@deffn function ideal-nucleic-acid RNA_or_DNA form single_stranged_flag sequence

Where: 
@itemize @bullet
@item @emph{RNA_or_DNA} is a string
@item @emph{form} is a string
@item @emph{single_stranged_flag} is an integer number
@item @emph{sequence} is a string
@end itemize

create a molecule of idea nucleotides 

use the given sequence (single letter code)

RNA_or_DNA is either "RNA" or "DNA"

form is either "A" or "B"

Returns: the new molecule number or -1 if a problem 

@end deffn

@node wrapped-nucleotide-builder-dialog
@subsection wrapped-nucleotide-builder-dialog
@deffn function wrapped-nucleotide-builder-dialog

@end deffn

@node ideal-nucleic-acid-by-widget
@subsection ideal-nucleic-acid-by-widget
@deffn function ideal-nucleic-acid-by-widget builder_dialog

Where @emph{builder_dialog} is a GtkWidget

@end deffn

@node watson-crick-pair
@subsection watson-crick-pair
@deffn function watson-crick-pair imol chain_id resno

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno} is an integer number
@end itemize

@end deffn

@node setup-base-pairing
@subsection setup-base-pairing
@deffn function setup-base-pairing state

Where @emph{state} is an integer number

@end deffn

@node Sequence (Assignment)
@section Sequence (Assignment)

@menu
* print-sequence-chain::
* assign-fasta-sequence::
* assign-pir-sequence::
* assign-sequence::
* assign-sequence-from-file::
* assign-sequence-from-string::
* delete-all-sequences-from-molecule::
* delete-sequence-by-chain-id::
@end menu

@node print-sequence-chain
@subsection print-sequence-chain
@deffn function print-sequence-chain imol chain_id

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@end itemize

Print the sequence to the console of the given molecule. 

@end deffn

@node assign-fasta-sequence
@subsection assign-fasta-sequence
@deffn function assign-fasta-sequence imol chain_id_in seq

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id_in} is a string
@item @emph{seq} is a string
@end itemize

Assign a FASTA sequence to a given chain in the molecule. 

@end deffn

@node assign-pir-sequence
@subsection assign-pir-sequence
@deffn function assign-pir-sequence imol chain_id_in seq

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id_in} is a string
@item @emph{seq} is a string
@end itemize

Assign a PIR sequence to a given chain in the molecule. 

@end deffn

@node assign-sequence
@subsection assign-sequence
@deffn function assign-sequence imol_model imol_map chain_id

Where: 
@itemize @bullet
@item @emph{imol_model} is an integer number
@item @emph{imol_map} is an integer number
@item @emph{chain_id} is a string
@end itemize

@end deffn

@node assign-sequence-from-file
@subsection assign-sequence-from-file
@deffn function assign-sequence-from-file imol file

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{file} is a string
@end itemize

Assign a sequence to a given molecule from (whatever) sequence file. 

@end deffn

@node assign-sequence-from-string
@subsection assign-sequence-from-string
@deffn function assign-sequence-from-string imol chain_id_in seq

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id_in} is a string
@item @emph{seq} is a string
@end itemize

Assign a sequence to a given molecule from a simple string. 

@end deffn

@node delete-all-sequences-from-molecule
@subsection delete-all-sequences-from-molecule
@deffn function delete-all-sequences-from-molecule imol

Where @emph{imol} is an integer number

Delete all the sequences from a given molecule. 

@end deffn

@node delete-sequence-by-chain-id
@subsection delete-sequence-by-chain-id
@deffn function delete-sequence-by-chain-id imol chain_id_in

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id_in} is a string
@end itemize

Delete the sequence for a given chain_id from a given molecule. 

@end deffn

@node Surfaces
@section Surfaces

@menu
* do-surface::
@end menu

@node do-surface
@subsection do-surface
@deffn function do-surface imol istate

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{istate} is an integer number
@end itemize

draw surface of molecule number imol 

if state = 1 draw the surface (normal representation goes away)

if state = 0 don't draw surface 

@end deffn

@node FFFearing
@section FFFearing

@menu
* fffear-search::
* set-fffear-angular-resolution::
* fffear-angular-resolution::
@end menu

@node fffear-search
@subsection fffear-search
@deffn function fffear-search imol_model imol_map

Where: 
@itemize @bullet
@item @emph{imol_model} is an integer number
@item @emph{imol_map} is an integer number
@end itemize

fffear search model in molecule number imol_model in map number imol_map 

@end deffn

@node set-fffear-angular-resolution
@subsection set-fffear-angular-resolution
@deffn function set-fffear-angular-resolution f

Where @emph{f} is a number

set and return the fffear angular resolution in degrees 

@end deffn

@node fffear-angular-resolution
@subsection fffear-angular-resolution
@deffn function fffear-angular-resolution

return the fffear angular resolution in degrees 

@end deffn

@node Remote Control
@section Remote Control

@menu
* make-socket-listener-maybe::
* coot-socket-listener-idle-func::
* set-coot-listener-socket-state-internal::
* set-socket-string-waiting::
* set-remote-control-port::
* get-remote-control-port-number::
* set-tip-of-the-day-flag::
@end menu

@node make-socket-listener-maybe
@subsection make-socket-listener-maybe
@deffn function make-socket-listener-maybe

try to make socket listener 

@end deffn

@node coot-socket-listener-idle-func
@subsection coot-socket-listener-idle-func
@deffn function coot-socket-listener-idle-func w

Where @emph{w} is a GtkWidget

@end deffn

@node set-coot-listener-socket-state-internal
@subsection set-coot-listener-socket-state-internal
@deffn function set-coot-listener-socket-state-internal sock_state

Where @emph{sock_state} is an integer number

@end deffn

@node set-socket-string-waiting
@subsection set-socket-string-waiting
@deffn function set-socket-string-waiting s

Where @emph{s} is a string

@end deffn

@node set-remote-control-port
@subsection set-remote-control-port
@deffn function set-remote-control-port port_number

Where @emph{port_number} is an integer number

@end deffn

@node get-remote-control-port-number
@subsection get-remote-control-port-number
@deffn function get-remote-control-port-number

@end deffn

@node set-tip-of-the-day-flag
@subsection set-tip-of-the-day-flag
@deffn function set-tip-of-the-day-flag state

Where @emph{state} is an integer number

@end deffn

@node Browser Interface
@section Browser Interface

@menu
* browser-url::
* set-browser-interface::
* handle-online-coot-search-request::
@end menu

@node browser-url
@subsection browser-url
@deffn function browser-url url

Where @emph{url} is a string

try to open given url in Web browser 

@end deffn

@node set-browser-interface
@subsection set-browser-interface
@deffn function set-browser-interface browser

Where @emph{browser} is a string

set command to open the web browser, 

examples are "open" or "mozilla" 

@end deffn

@node handle-online-coot-search-request
@subsection handle-online-coot-search-request
@deffn function handle-online-coot-search-request entry_text

Where @emph{entry_text} is a string

the search interface 

find words, construct a url and open it. 

@end deffn

@node Generic Objects
@section Generic Objects

@menu
* new-generic-object-number::
* to-generic-object-add-line::
* to-generic-object-add-point::
* to-generic-object-add-display-list-handle::
* set-display-generic-object::
* generic-object-is-displayed-p::
* generic-object-index::
* number-of-generic-objects::
* generic-object-info::
* generic-object-has-objects-p::
* close-generic-object::
* is-closed-generic-object-p::
* generic-object-clear::
* generic-objects-gui-wrapper::
@end menu

@node new-generic-object-number
@subsection new-generic-object-number
@deffn function new-generic-object-number objname

Where @emph{objname} is a string

create a new generic object with name objname and return the index of the object 

@end deffn

@node to-generic-object-add-line
@subsection to-generic-object-add-line
@deffn function to-generic-object-add-line object_number colour line_width from_x1 from_y1 from_z1 to_x2 to_y2 to_z2

Where: 
@itemize @bullet
@item @emph{object_number} is an integer number
@item @emph{colour} is a string
@item @emph{line_width} is an integer number
@item @emph{from_x1} is a number
@item @emph{from_y1} is a number
@item @emph{from_z1} is a number
@item @emph{to_x2} is a number
@item @emph{to_y2} is a number
@item @emph{to_z2} is a number
@end itemize

add line to generic object object_number 

@end deffn

@node to-generic-object-add-point
@subsection to-generic-object-add-point
@deffn function to-generic-object-add-point object_number colour point_width from_x1 from_y1 from_z1

Where: 
@itemize @bullet
@item @emph{object_number} is an integer number
@item @emph{colour} is a string
@item @emph{point_width} is an integer number
@item @emph{from_x1} is a number
@item @emph{from_y1} is a number
@item @emph{from_z1} is a number
@end itemize

add point to generic object object_number 

@end deffn

@node to-generic-object-add-display-list-handle
@subsection to-generic-object-add-display-list-handle
@deffn function to-generic-object-add-display-list-handle object_number display_list_id

Where: 
@itemize @bullet
@item @emph{object_number} is an integer number
@item @emph{display_list_id} is an integer number
@end itemize

add a display list handle generic object 

@end deffn

@node set-display-generic-object
@subsection set-display-generic-object
@deffn function set-display-generic-object object_number istate

Where: 
@itemize @bullet
@item @emph{object_number} is an integer number
@item @emph{istate} is an integer number
@end itemize

set the display status of object number object_number, 

when they are created, by default objects are not displayed, so we generally need this function. 

@end deffn

@node generic-object-is-displayed-p
@subsection generic-object-is-displayed-p
@deffn function generic-object-is-displayed-p object_number

Where @emph{object_number} is an integer number

is generic display object displayed? 

Returns: 1 for yes, otherwise 0 

@end deffn

@node generic-object-index
@subsection generic-object-index
@deffn function generic-object-index name

Where @emph{name} is a string

return the index of the object with name name, if not, return -1; 

@end deffn

@node number-of-generic-objects
@subsection number-of-generic-objects
@deffn function number-of-generic-objects

what is the name of generic object number obj_number? 


return the number of generic display objects 

Returns: 0 (NULL) f on obj_number not available

@end deffn

@node generic-object-info
@subsection generic-object-info
@deffn function generic-object-info

print to the console the name and display status of the generic display objects 

@end deffn

@node generic-object-has-objects-p
@subsection generic-object-has-objects-p
@deffn function generic-object-has-objects-p obj_no

Where @emph{obj_no} is an integer number

does generic display object number obj_no have things to display? (predicate name) 

Returns: 0 for no things, 1 for things. 

@end deffn

@node close-generic-object
@subsection close-generic-object
@deffn function close-generic-object object_number

Where @emph{object_number} is an integer number

close generic object, clear the lines/points etc, not available for buttons/displaying etc 

@end deffn

@node is-closed-generic-object-p
@subsection is-closed-generic-object-p
@deffn function is-closed-generic-object-p object_number

Where @emph{object_number} is an integer number

has the generic object been closed? 

Returns: 1 for yes, 0 othersize 

@end deffn

@node generic-object-clear
@subsection generic-object-clear
@deffn function generic-object-clear object_number

Where @emph{object_number} is an integer number

clear out the lines and points from object_number, but keep it displayable (not closed). 

@end deffn

@node generic-objects-gui-wrapper
@subsection generic-objects-gui-wrapper
@deffn function generic-objects-gui-wrapper

a kludgey thing, so that the generic objects gui can be called from a callback. 

@end deffn

@node Molprobity Interface
@section Molprobity Interface

@menu
* handle-read-draw-probe-dots::
* handle-read-draw-probe-dots-unformatted::
* set-do-probe-dots-on-rotamers-and-chis::
* do-probe-dots-on-rotamers-and-chis-state::
* set-do-probe-dots-post-refine::
* do-probe-dots-post-refine-state::
* unmangle-hydrogen-name::
* set-interactive-probe-dots-molprobity-radius::
* interactive-probe-dots-molprobity-radius::
* probe-available-p::
@end menu

@node handle-read-draw-probe-dots
@subsection handle-read-draw-probe-dots
@deffn function handle-read-draw-probe-dots dots_file

Where @emph{dots_file} is a string

pass a filename that contains molprobity's probe output in XtalView format 

@end deffn

@node handle-read-draw-probe-dots-unformatted
@subsection handle-read-draw-probe-dots-unformatted
@deffn function handle-read-draw-probe-dots-unformatted dots_file imol show_clash_gui_flag

Where: 
@itemize @bullet
@item @emph{dots_file} is a string
@item @emph{imol} is an integer number
@item @emph{show_clash_gui_flag} is an integer number
@end itemize

pass a filename that contains molprobity's probe output in unformatted format 

@end deffn

@node set-do-probe-dots-on-rotamers-and-chis
@subsection set-do-probe-dots-on-rotamers-and-chis
@deffn function set-do-probe-dots-on-rotamers-and-chis state

Where @emph{state} is an integer number

shall we run molprobity for on edit chi angles intermediate atoms? 

@end deffn

@node do-probe-dots-on-rotamers-and-chis-state
@subsection do-probe-dots-on-rotamers-and-chis-state
@deffn function do-probe-dots-on-rotamers-and-chis-state

return the state of if run molprobity for on edit chi angles intermediate atoms? 

@end deffn

@node set-do-probe-dots-post-refine
@subsection set-do-probe-dots-post-refine
@deffn function set-do-probe-dots-post-refine state

Where @emph{state} is an integer number

shall we run molprobity after a refinement has happened? 

@end deffn

@node do-probe-dots-post-refine-state
@subsection do-probe-dots-post-refine-state
@deffn function do-probe-dots-post-refine-state

show the state of shall we run molprobity after a refinement has happened? 

@end deffn

@node unmangle-hydrogen-name
@subsection unmangle-hydrogen-name
@deffn function unmangle-hydrogen-name pdb_hydrogen_name

Where @emph{pdb_hydrogen_name} is a string

make an attempt to convert pdb hydrogen name to the name used in Coot (and the refmac dictionary, perhaps). 

@end deffn

@node set-interactive-probe-dots-molprobity-radius
@subsection set-interactive-probe-dots-molprobity-radius
@deffn function set-interactive-probe-dots-molprobity-radius r

Where @emph{r} is a number

set the radius over which we can run interactive probe, bigger is better but slower. 

default is 6.0 

@end deffn

@node interactive-probe-dots-molprobity-radius
@subsection interactive-probe-dots-molprobity-radius
@deffn function interactive-probe-dots-molprobity-radius

return the radius over which we can run interactive probe. 

@end deffn

@node probe-available-p
@subsection probe-available-p
@deffn function probe-available-p

Can we run probe (was the executable variable set properly?) (predicate). 

Returns: 1 for yes, 2 for no 

@end deffn

@node Partial Charges
@section Partial Charges

@menu
* show-partial-charge-info::
@end menu

@node show-partial-charge-info
@subsection show-partial-charge-info
@deffn function show-partial-charge-info imol chain_id resno ins_code

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{chain_id} is a string
@item @emph{resno} is an integer number
@item @emph{ins_code} is a string
@end itemize

@end deffn

@node EM interface
@section EM interface

@menu
* scale-cell::
@end menu

@node scale-cell
@subsection scale-cell
@deffn function scale-cell imol_map fac_u fac_v fac_w

Where: 
@itemize @bullet
@item @emph{imol_map} is an integer number
@item @emph{fac_u} is a number
@item @emph{fac_v} is a number
@item @emph{fac_w} is a number
@end itemize

@end deffn

@node CCP4mg Interface
@section CCP4mg Interface

@menu
* write-ccp4mg-picture-description::
* get-atom-colour-from-mol-no::
@end menu

@node write-ccp4mg-picture-description
@subsection write-ccp4mg-picture-description
@deffn function write-ccp4mg-picture-description filename

Where @emph{filename} is a string

@end deffn

@node get-atom-colour-from-mol-no
@subsection get-atom-colour-from-mol-no
@deffn function get-atom-colour-from-mol-no imol element

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{element} is a string
@end itemize

@end deffn

@node Dipoles
@section Dipoles

@menu
* delete-dipole::
@end menu

@node delete-dipole
@subsection delete-dipole
@deffn function delete-dipole imol dipole_number

Where: 
@itemize @bullet
@item @emph{imol} is an integer number
@item @emph{dipole_number} is an integer number
@end itemize

@end deffn

@node Aux functions
@section Aux functions

@menu
* laplacian::
@end menu

@node laplacian
@subsection laplacian
@deffn function laplacian imol

Where @emph{imol} is an integer number

@end deffn

@node SMILES
@section SMILES

@menu
* do-smiles-gui::
@end menu

@node do-smiles-gui
@subsection do-smiles-gui
@deffn function do-smiles-gui

display the SMILES string dialog 

@end deffn

@node PHENIX Support
@section PHENIX Support

@menu
* set-button-label-for-external-refinement::
@end menu

@node set-button-label-for-external-refinement
@subsection set-button-label-for-external-refinement
@deffn function set-button-label-for-external-refinement button_label

Where @emph{button_label} is a string

set the button label of the external Refinement program 

@end deffn

@node Graphics Text
@section Graphics Text

@menu
* place-text::
* remove-text::
@end menu

@node place-text
@subsection place-text
@deffn function place-text text x y z size

Where: 
@itemize @bullet
@item @emph{text} is a string
@item @emph{x} is a number
@item @emph{y} is a number
@item @emph{z} is a number
@item @emph{size} is an integer number
@end itemize

Put text at x,y,z. 


size variable is currently ignored. 

Returns: a text handle

@end deffn

@node remove-text
@subsection remove-text
@deffn function remove-text text_handle

Where @emph{text_handle} is an integer number

Remove text. 

@end deffn

@node PISA Interaction
@section PISA Interaction

@menu
* pisa-interaction::
@end menu

@node pisa-interaction
@subsection pisa-interaction
@deffn function pisa-interaction imol_1 imol_2

Where: 
@itemize @bullet
@item @emph{imol_1} is an integer number
@item @emph{imol_2} is an integer number
@end itemize

@end deffn

